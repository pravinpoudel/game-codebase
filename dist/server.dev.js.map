{"version":3,"sources":["server.js"],"names":["http","require","path","fs","mimeTypes","port","handleRequest","request","response","console","log","url","lookup","decodeURI","file","substring","length","access","constants","R_OK","err","readFile","error","data","writeHead","end","headers","extname","createServer","listen"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAIG,SAAS,GAAG;AACd,SAAO,iBADO;AAEd,WAAS,WAFK;AAGd,UAAQ,UAHM;AAId,UAAQ,WAJM;AAKd,UAAQ,YALM;AAMd,UAAQ;AANM,CAAhB;AAQA,IAAMC,IAAI,GAAG,IAAb;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,OAAO,CAACI,GAAlC;AACA,MAAIC,MAAM,GAAGL,OAAO,CAACI,GAAR,KAAgB,GAAhB,GAAsB,aAAtB,GAAsCE,SAAS,CAACN,OAAO,CAACI,GAAT,CAA5D;AACA,MAAIG,IAAI,GAAGF,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoBH,MAAM,CAACI,MAA3B,CAAX;AAEAb,EAAAA,EAAE,CAACc,MAAH,CAAUH,IAAV,EAAgBX,EAAE,CAACe,SAAH,CAAaC,IAA7B,EAAmC,UAAUC,GAAV,EAAe;AAChDX,IAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,aAAMR,MAAN,gCAAkCA,MAAlC,gBAAf;;AACA,QAAI,CAACQ,GAAL,EAAU;AACRjB,MAAAA,EAAE,CAACkB,QAAH,CAAYP,IAAZ,EAAkB,UAAUQ,KAAV,EAAiBC,IAAjB,EAAuB;AACvC,YAAID,KAAJ,EAAW;AACTd,UAAAA,QAAQ,CAACgB,SAAT,CAAmB,GAAnB;AACAhB,UAAAA,QAAQ,CAACiB,GAAT,CAAa,eAAb;AACD,SAHD,MAGO;AACL,cAAIC,OAAO,GAAG;AAAE,4BAAgBtB,SAAS,CAACF,IAAI,CAACyB,OAAL,CAAaf,MAAb,CAAD;AAA3B,WAAd;AACAJ,UAAAA,QAAQ,CAACgB,SAAT,CAAmB,GAAnB,EAAwBE,OAAxB;AACAlB,UAAAA,QAAQ,CAACiB,GAAT,CAAaF,IAAb;AACD;AACF,OATD;AAUD,KAXD,MAWO;AACLf,MAAAA,QAAQ,CAACgB,SAAT,CAAmB,GAAnB;AACAhB,MAAAA,QAAQ,CAACiB,GAAT;AACD;AACF,GAjBD;AAkBD;;AAEDzB,IAAI,CAAC4B,YAAL,CAAkBtB,aAAlB,EAAiCuB,MAAjC,CAAwCxB,IAAxC,EAA8C,YAAY;AACxDI,EAAAA,OAAO,CAACC,GAAR,uCAA2CL,IAA3C;AACD,CAFD","sourcesContent":["\"use strict\";\r\n\r\nlet http = require(\"http\");\r\nlet path = require(\"path\");\r\nlet fs = require(\"fs\");\r\n\r\nlet mimeTypes = {\r\n  \".js\": \"text/javascript\",\r\n  \".html\": \"text/html\",\r\n  \".css\": \"text/css\",\r\n  \".png\": \"image/png\",\r\n  \".jpg\": \"image/jpeg\",\r\n  \".mp3\": \"audio/mpeg3\",\r\n};\r\nconst port = 3000;\r\n\r\nfunction handleRequest(request, response) {\r\n  console.log(\"request : \", request.url);\r\n  let lookup = request.url === \"/\" ? \"/index.html\" : decodeURI(request.url);\r\n  let file = lookup.substring(1, lookup.length);\r\n\r\n  fs.access(file, fs.constants.R_OK, function (err) {\r\n    console.log(err ? `${lookup} doesn't exist` : `${lookup} ' is there`);\r\n    if (!err) {\r\n      fs.readFile(file, function (error, data) {\r\n        if (error) {\r\n          response.writeHead(500);\r\n          response.end(\"Server Error!\");\r\n        } else {\r\n          let headers = { \"Content-type\": mimeTypes[path.extname(lookup)] };\r\n          response.writeHead(200, headers);\r\n          response.end(data);\r\n        }\r\n      });\r\n    } else {\r\n      response.writeHead(404);\r\n      response.end();\r\n    }\r\n  });\r\n}\r\n\r\nhttp.createServer(handleRequest).listen(port, function () {\r\n  console.log(`Server is listening on port ${port}`);\r\n});\r\n"],"file":"server.dev.js"}