{"version":3,"sources":["server.js"],"names":["http","require","path","fs",".js",".html","mimeTypes",".css",".png",".jpg",".mp3",".wav","port","handleRequest","request","response","console","log","url","lookup","decodeURI","substring","length","access","file","R_OK","err","constants","data","end","readFile","error","extname","headers","createServer","listen","concat"],"mappings":"AAAA,aAEA,IAAIA,KAAOC,QAAQ,QACfC,KAAOD,QAAQ,QAAfC,GAAID,QAAGA,MACPE,UAAY,CAGdC,MAAO,kBADTC,QAAIC,YACFC,OAAO,WACPC,OAAA,YACAC,OAAQ,aACRC,OAAQ,cACRC,OAAQ,eAERC,KAAQ,IAEV,SAAUC,cAAVC,EAAAC,GAGEC,QAAQC,IAAI,aAAcH,EAAQI,KADpC,IAAAC,EAAA,MAASN,EAAcC,IAASC,cAAUK,UAAAN,EAAAI,KACxCF,EAAAG,EAAYE,UAAcP,EAAAA,EAA1BQ,QAEAnB,GAAAoB,OAAQC,EAAGL,GAAOE,UAAPI,KAAoBN,SAA/BO,GAEEV,QAAQQ,IAAMrB,GAAAA,OAAGwB,EAAnBD,EAAgBvB,iBAAAA,gBACda,GAWMD,EAAAA,UAAaa,KACdb,EAAAc,OAVH1B,GAAG2B,SAASN,EAAM,SAAUO,EAAOH,GADjC,GAAJG,EACKD,EAASN,UAAM,KAChBT,EAAWc,IAAA,qBACTd,CACAA,QAAQE,IAARf,KAAa8B,QAAAb,IACRb,UAAAJ,KAAA8B,QAAAb,IAELJ,EAAIkB,UAAU,KAAElB,EAAAc,IAAAD,QASrB5B,KAAAkC,aAAArB,eAAAsB,OAAAvB,KAAA,WACFI,QAnBDC,IAmBC,+BAAAmB,OAnBDxB","file":"server.min.js","sourcesContent":["\"use strict\";\r\n\r\nlet http = require(\"http\");\r\nlet path = require(\"path\");\r\nlet fs = require(\"fs\");\r\n\r\nlet mimeTypes = {\r\n  \".js\": \"text/javascript\",\r\n  \".html\": \"text/html\",\r\n  \".css\": \"text/css\",\r\n  \".png\": \"image/png\",\r\n  \".jpg\": \"image/jpeg\",\r\n  \".mp3\": \"audio/mpeg3\",\r\n  \".wav\": \"audio/x-wav\",\r\n};\r\nconst port = 3000;\r\n\r\nfunction handleRequest(request, response) {\r\n  console.log(\"request : \", request.url);\r\n  let lookup = request.url === \"/\" ? \"/index.html\" : decodeURI(request.url);\r\n  let file = lookup.substring(1, lookup.length);\r\n\r\n  fs.access(file, fs.constants.R_OK, function (err) {\r\n    console.log(err ? `${lookup} doesn't exist` : `${lookup} ' is there`);\r\n    if (!err) {\r\n      fs.readFile(file, function (error, data) {\r\n        if (error) {\r\n          response.writeHead(500);\r\n          response.end(\"Server Error!\");\r\n        } else {\r\n          console.log(path.extname(lookup));\r\n          let headers = { \"Content-type\": mimeTypes[path.extname(lookup)] };\r\n          //removed headers\r\n          response.writeHead(200);\r\n          response.end(data);\r\n        }\r\n      });\r\n    } else {\r\n      response.writeHead(404);\r\n      response.end();\r\n    }\r\n  });\r\n}\r\n\r\nhttp.createServer(handleRequest).listen(port, function () {\r\n  console.log(`Server is listening on port ${port}`);\r\n});\r\n"]}