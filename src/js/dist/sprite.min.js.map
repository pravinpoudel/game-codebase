{"version":3,"sources":["sprite.js"],"names":["Sprite","specs","_classCallCheck","this","image","Image","imageLoaded","onload","src","sprite","rotateRight","bind","rotateLeft","draw","drawArc","angle","rotation","self","height","width","spriteCount","context","save","translate","center","x","y","rotate","restore","fillStyle","beginPath","moveTo","drawImage","lineTo","fill"],"mappings":"uZAAMA,kBACJ,SAAAA,EAAYC,GAAOC,gBAAAC,KAAAH,GACjBG,KAAKF,MAAQA,EACbE,KAAKC,MAAQ,IAAIC,MACjBF,KAAKG,aAAc,EACnBH,KAAKC,MAAMG,OAAS,WAClBJ,KAAKG,aAAc,GANnBN,KAAAA,MAQSQ,IAAML,KAAKF,MAAMQ,OAC5BN,KAAKO,YAAcP,KAAKO,YAAYC,KAAKR,MACzCA,KAAKS,WAAaT,KAAKS,WAAWD,KAAKR,MATzCA,KAAAU,KAAAV,KAAYF,KAAOU,KAAAR,MAAAA,KAAAW,QAAAX,KAAAW,QAAAH,KAAAR,+DAEjBY,GACAZ,KAAKG,MAAAA,UAAcS,qCAEZT,GACNH,KAFDF,MAAAe,UAAAD,iCAKA,IAAAE,EAAKL,KACLT,KAAAC,MAAYE,cACZW,EAAKH,MAALI,OAAoBJ,EAALV,MAAkBc,OAClCD,EAAAhB,MAAAkB,MAAAF,EAAAb,MAAAe,MAAAhB,KAAAF,MAAAmB,YAeGC,QAAQC,OACRD,QAAQE,UAAUN,EAAKhB,MAAMuB,OAAOC,EAAGR,EAAKhB,MAAMuB,OAAOE,GACzDL,QAAQM,OAAOV,EAAKhB,MAAMe,UAC1BK,QAAQE,WAAWN,EAAKhB,MAhBhBc,OAAOU,GAAAR,EAAAhB,MAAAuB,OAAAE,GACjBL,QAAKpB,UACNgB,EAAAb,MAiBKa,EAAKhB,MAAMuB,OAAOC,EAAIR,EAAKb,MAAMe,MAAQ,EACzCF,EAAKhB,MAAMuB,OAAOE,EAAIT,EAAKb,MAAMc,OAAS,EAC1CD,EAAKb,MAAMe,MAhBfF,EAAKhB,MAAMe,QAmBTK,QAAQO,2CAIJb,GAlBNM,QAAIQ,UAAWvB,uBACbW,QAAIa,YACJb,QAAIc,OAAOZ,KAAXlB,MAAmBgB,OAAAQ,EAAWN,KAAXlB,MAAwBA,OAAMmB,GACjDC,QAAAA,IACAA,KAAAA,MAAQE,OAAAA,EACRF,KAAAA,MAAQM,OAAOV,EACfI,IACAA,KAAAA,MAAQW,SACNf,EADF,EAOAI,KAAAA,MAAQO,SAARb,EAAA,GAEHM,QAAAY,OAAA9B,KAAAF,MAAAuB,OAAAC,EAAAtB,KAAAF,MAAAuB,OAAAE,GAcCL,QAAQa","file":"sprite.min.js","sourcesContent":["class Sprite {\r\n  constructor(specs) {\r\n    this.specs = specs;\r\n    this.image = new Image();\r\n    this.imageLoaded = false;\r\n    this.image.onload = function () {\r\n      this.imageLoaded = true;\r\n    };\r\n    this.image.src = this.specs.sprite;\r\n    this.rotateRight = this.rotateRight.bind(this);\r\n    this.rotateLeft = this.rotateLeft.bind(this);\r\n    this.draw = this.draw.bind(this);\r\n    this.drawArc = this.drawArc.bind(this);\r\n  }\r\n\r\n  rotateRight(angle) {\r\n    this.specs.rotation += angle;\r\n  }\r\n\r\n  rotateLeft(angle) {\r\n    this.specs.rotation -= angle;\r\n  }\r\n\r\n  draw() {\r\n    let self = this;\r\n    if (this.image.imageLoaded) {\r\n      self.specs.height = self.image.height;\r\n      self.specs.width = self.image.width / this.specs.spriteCount;\r\n      context.save();\r\n      context.translate(self.specs.center.x, self.specs.center.y);\r\n      context.rotate(self.specs.rotation);\r\n      context.translate(-self.specs.center.x, -self.specs.center.y);\r\n      context.drawImage(\r\n        self.image,\r\n        self.specs.center.x - self.image.width / 2,\r\n        self.specs.center.y - self.image.height / 2,\r\n        self.image.width,\r\n        self.image.height\r\n      );\r\n      context.restore();\r\n    }\r\n  }\r\n\r\n  drawArc(angle) {\r\n    context.fillStyle = \"rgba(255, 0, 0, 0.5)\";\r\n    context.beginPath();\r\n    context.moveTo(this.specs.center.x, this.specs.center.y);\r\n    context.arc(\r\n      this.specs.center.x,\r\n      this.specs.center.y,\r\n      100,\r\n      this.specs.rotation - angle / 2,\r\n      this.specs.rotation + angle / 2\r\n    );\r\n    context.lineTo(this.specs.center.x, this.specs.center.y);\r\n    context.fill();\r\n  }\r\n}\r\n"]}