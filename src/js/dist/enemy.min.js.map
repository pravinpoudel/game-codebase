{"version":3,"sources":["enemy.js"],"names":["Enemy","specs","_this","this","_classCallCheck","enemyImage","Image","falling","score","subTextureWidth","width","spriteCount","drawSprite","bind","onload","isReady","image","src","spriteSheet","center","rotation","size","context","x","y","restore","index","save","translate","rotate","height","elapsedTime","animationTime","spriteTime","subImageIndex","filLStyle","color","drawSubTexture","player"],"mappings":"uZAAMA,iBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,KAAAC,gBAAAD,KAAAH,GACjBG,KAAKF,MAAQA,EACbE,KAAKE,WAAa,IAAIC,MACtBH,KAAKI,QAAUN,EAAMM,QACrBJ,KAAKK,MAAQP,EAAMO,MACnBL,KAAKM,gBAAkBN,KAAKE,WAAWK,MAAQP,KAAKF,MAAMU,YAC1DR,KAAKS,WAAaT,KAAKS,WAAWC,KAAKV,MAPrCH,KAQGK,WAAWS,OAAS,WACvBZ,EAAKa,SAAU,EACfb,EAAKO,gBAAkBP,EAAKc,MAAMN,MAAQR,EAAKD,MAAMU,aATtCR,KAAAa,MAAAC,IAAAd,KAAAF,MAAAiB,qEAcPF,EAAOG,EAAQC,EAAUC,GAbnCC,QAAKrB,UAALkB,EAAAI,EAAAJ,EAAAK,GACAF,QAAKjB,OAALe,GACAE,QAAKf,WAAUN,EAAMM,GAArBY,EAAAK,GACAF,QAAKd,UACLQ,EACAG,EAAKP,EAAAA,EAAaW,EAAA,EAehBJ,EAAOK,EAAIH,EAAKG,EAAI,EAdtBH,EAAKhB,EACHgB,EAAIG,GAELF,QAHDG,iDAKDT,EAAAU,EAAAjB,EAAAU,EAAAC,EAAAC,GAiBCC,QAAQK,OACRL,QAAQM,UAAUT,EAAOI,EAAGJ,EAAOK,GACnCF,QAAQO,OAAOT,GACfE,QAAQM,WAAWT,EAAOI,GAlBhBP,EAAOG,GAEjBG,QAAAA,UACAA,EACAA,EACEN,EAMFM,EACDb,EAaGO,EAAMc,OACNX,EAAOI,EAAIF,EAAKE,EAAI,EACpBJ,EAAOK,EAAIH,EAAKG,EAAI,EAZtBF,EAAAA,EACAA,EAAAA,GAEAA,QAAAA,2CASEH,KAAAA,eAAoBY,YAItBT,KAAOU,eAAP7B,KAAAF,MAAAgC,WAAA9B,KAAA+B,iBAEF/B,KAAA6B,eAAA7B,KAAAF,MAAAgC,WAAA9B,KAAA+B,eAKI/B,KAAK+B,eAAiB,EACtB/B,KAAK+B,cAAgB/B,KAAK+B,cAAgB/B,KAAKF,MAAMU,4CAHvDW,QAAIa,UAAKH,KAALI,MACFjC,KAAAkC,eACAlC,KAAAa,MACAb,KAAA+B,cACD/B,KAAAM,gBACFN,KAAAmC,OAAArC,MAAAkB,OASGhB,KAAKmC,OAAOrC,MAAMmB,SAClBjB,KAAKmC,OAAOrC,MAAMoB","file":"enemy.min.js","sourcesContent":["class Enemy {\r\n  constructor(specs) {\r\n    this.specs = specs;\r\n    this.enemyImage = new Image();\r\n    this.falling = specs.falling;\r\n    this.score = specs.score;\r\n    this.subTextureWidth = this.enemyImage.width / this.specs.spriteCount;\r\n    this.drawSprite = this.drawSprite.bind(this);\r\n    this.enemyImage.onload = () => {\r\n      this.isReady = true;\r\n      this.subTextureWidth = this.image.width / this.specs.spriteCount;\r\n    };\r\n    this.image.src = this.specs.spriteSheet;\r\n  }\r\n\r\n  drawTexture(image, center, rotation, size) {\r\n    context.translate(center.x, center.y);\r\n    context.rotate(rotation);\r\n    context.translate(-center.x, -center.y);\r\n    context.drawImage(\r\n      image,\r\n      center.x - size.x / 2,\r\n      center.y - size.y / 2,\r\n      size.x,\r\n      size.y\r\n    );\r\n    context.restore();\r\n  }\r\n\r\n  drawSubTexture(image, index, subTextureWidth, center, rotation, size) {\r\n    context.save();\r\n    context.translate(center.x, center.y);\r\n    context.rotate(rotation);\r\n    context.translate(-center.x, -center.y);\r\n\r\n    context.drawImage(\r\n      image,\r\n      subTextureWidth * index,\r\n      0, // Which sub-texture to pick out\r\n      subTextureWidth,\r\n      image.height, // The size of the sub-texture\r\n      center.x - size.x / 2, // Where to draw the sub-texture\r\n      center.y - size.y / 2,\r\n      size.x,\r\n      size.y\r\n    );\r\n    context.restore();\r\n  }\r\n  //update the position of scorpion and spider with each frame\r\n  update(timeStamp) {\r\n    this.animationTime += elapsedTime;\r\n    if (this.animationTime >= this.specs.spriteTime[this.subImageIndex]) {\r\n      this.animationTime -= this.specs.spriteTime[this.subImageIndex];\r\n      this.subImageIndex += 1;\r\n      this.subImageIndex = this.subImageIndex % this.specs.spriteCount;\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    context.filLStyle = this.color;\r\n    this.drawSubTexture(\r\n      this.image,\r\n      this.subImageIndex,\r\n      this.subTextureWidth,\r\n      this.player.specs.center,\r\n      this.player.specs.rotation,\r\n      this.player.specs.size\r\n    );\r\n  }\r\n}\r\n"]}