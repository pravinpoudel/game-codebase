"use strict";function findShortestLength(o,r){var s,t,h=[],l=new Array(rows*cols).fill(-1);for(h.push(o),l[o]=0;0<h.length;){var e=h.shift(),a=[e-cols,e+cols];e%cols==0?a.push(e+1):(e%cols==cols-1||a.push(e+1),a.push(e-1));for(var c=0;c<a.length;c++)s=a[c]+"_"+e,t=e+"_"+a[c],(removedWallSet[s]||removedWallSet[t])&&a[c]<rows*cols&&0<=a[c]||(a.splice(c,1),c--);for(var p=0;p<a.length;p++)if(-1==l[a[p]]&&(l[a[p]]=l[e]+1,h.push(a[p]),a[p]==r))return l}}function findShortestPath(o,r){var s=findShortestLength(o,r),t=r;path.push(r);for(var h=s[r];0<h;){h=s[t];var l=[t-cols,t+cols];t%cols==0?l.push(t+1):(t%cols==cols-1||l.push(t+1),l.push(t-1));for(var e=0;e<l.length;e++)comb1=l[e]+"_"+t,comb2=t+"_"+l[e],(removedWallSet.hasOwnProperty(comb1)||removedWallSet.hasOwnProperty(comb2))&&l[e]<rows*cols&&0<=l[e]||(l.splice(e,1),e--);h--;for(var a=0;a<l.length;a++)if(s[l[a]]==h){path.push(l[a]);break}t=path[path.length-1]}for(var c=0,p=path.length;c<p;c++){var n=Math.floor(path[c]/cols),f=path[c]%cols;path[c]={x:f,y:n}}}
//# sourceMappingURL=shortestPath.min.js.map
