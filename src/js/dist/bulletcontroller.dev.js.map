{"version":3,"sources":["bulletcontroller.js"],"names":["BulletController","enemies","bullets","bulletStartX","bulletStartY","creep","power","push","Bullet","timeStamp","bulletLength","length","i","x","canvas","width","y","height","splice","isColliding2","targetCreep","player","specs","center","Math","floor","size","health","update","forEach","bullet","draw"],"mappings":";;;;;;;;IAAMA,gB;;;AACJ,4BAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKD,OAAL,GAAe,EAAf;AACD;;;;8BAESE,Y,EAAcC,Y,EAAcC,K,EAAOC,K,EAAO;AAClD,WAAKJ,OAAL,CAAaK,IAAb,CAAkB,IAAIC,MAAJ,CAAWL,YAAX,EAAyBC,YAAzB,EAAuCC,KAAvC,EAA8CC,KAA9C,CAAlB;AACD;;;2BAEMG,S,EAAW;AAChB,UAAIC,YAAY,GAAG,KAAKR,OAAL,CAAaS,MAAhC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;AACrC,YAAI,KAAKV,OAAL,CAAaU,CAAb,CAAJ,EAAqB;AACnB,cACE,KAAKV,OAAL,CAAaU,CAAb,EAAgBC,CAAhB,GAAoB,CAApB,IACA,KAAKX,OAAL,CAAaU,CAAb,EAAgBC,CAAhB,GAAoBC,MAAM,CAACC,KAD3B,IAEA,KAAKb,OAAL,CAAaU,CAAb,EAAgBI,CAAhB,GAAoB,CAFpB,IAGA,KAAKd,OAAL,CAAaU,CAAb,EAAgBI,CAAhB,GAAoBF,MAAM,CAACG,MAJ7B,EAKE;AACA,iBAAKf,OAAL,CAAagB,MAAb,CAAoBN,CAApB,EAAuB,CAAvB;AACA;AACD;;AACD,cACEO,YAAY,CACV,KAAKjB,OAAL,CAAaU,CAAb,EAAgBC,CADN,EAEV,KAAKX,OAAL,CAAaU,CAAb,EAAgBI,CAFN,EAGV,CAHU,EAIV,KAAKd,OAAL,CAAaU,CAAb,EAAgBQ,WAAhB,CAA4BC,MAA5B,CAAmCC,KAAnC,CAAyCC,MAAzC,CAAgDV,CAJtC,EAKV,KAAKX,OAAL,CAAaU,CAAb,EAAgBQ,WAAhB,CAA4BC,MAA5B,CAAmCC,KAAnC,CAAyCC,MAAzC,CAAgDP,CALtC,EAMVQ,IAAI,CAACC,KAAL,CAAW,KAAKvB,OAAL,CAAaU,CAAb,EAAgBQ,WAAhB,CAA4BC,MAA5B,CAAmCC,KAAnC,CAAyCI,IAAzC,CAA8Cb,CAA9C,GAAkD,CAA7D,CANU,CADd,EASE;AACA,iBAAKX,OAAL,CAAaU,CAAb,EAAgBQ,WAAhB,CAA4BO,MAA5B,IAAsC,KAAKzB,OAAL,CAAaU,CAAb,EAAgBN,KAAtD;;AACA,gBAAI,KAAKJ,OAAL,CAAaU,CAAb,EAAgBQ,WAAhB,CAA4BO,MAA5B,GAAqC,CAAzC,EAA4C;AAC1C,mBAAKzB,OAAL,CAAaU,CAAb,EAAgBQ,WAAhB,CAA4BO,MAA5B,GAAqC,CAArC;AACD;;AACD,iBAAKzB,OAAL,CAAagB,MAAb,CAAoBN,CAApB,EAAuB,CAAvB;AACA;AACD;;AACD,eAAKV,OAAL,CAAaU,CAAb,EAAgBgB,MAAhB,CAAuBnB,SAAvB;AACD,SA7BoC,CA8BrC;;AACD;;AAED,WAAKP,OAAL,CAAa2B,OAAb,CAAqB,UAACC,MAAD,EAAY,CAAE,CAAnC,EAnCgB,CAoChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;6BAEQ;AACP,WAAK5B,OAAL,CAAa2B,OAAb,CAAqB,UAACC,MAAD,EAAY;AAC/BA,QAAAA,MAAM,CAACC,IAAP;AACD,OAFD;AAGD","sourcesContent":["class BulletController {\r\n  constructor(enemies) {\r\n    this.bullets = [];\r\n    this.enemies = [];\r\n  }\r\n\r\n  addBullet(bulletStartX, bulletStartY, creep, power) {\r\n    this.bullets.push(new Bullet(bulletStartX, bulletStartY, creep, power));\r\n  }\r\n\r\n  update(timeStamp) {\r\n    let bulletLength = this.bullets.length;\r\n    for (let i = 0; i < bulletLength; i++) {\r\n      if (this.bullets[i]) {\r\n        if (\r\n          this.bullets[i].x < 0 ||\r\n          this.bullets[i].x > canvas.width ||\r\n          this.bullets[i].y < 0 ||\r\n          this.bullets[i].y > canvas.height\r\n        ) {\r\n          this.bullets.splice(i, 1);\r\n          continue;\r\n        }\r\n        if (\r\n          isColliding2(\r\n            this.bullets[i].x,\r\n            this.bullets[i].y,\r\n            5,\r\n            this.bullets[i].targetCreep.player.specs.center.x,\r\n            this.bullets[i].targetCreep.player.specs.center.y,\r\n            Math.floor(this.bullets[i].targetCreep.player.specs.size.x / 2)\r\n          )\r\n        ) {\r\n          this.bullets[i].targetCreep.health -= this.bullets[i].power;\r\n          if (this.bullets[i].targetCreep.health < 0) {\r\n            this.bullets[i].targetCreep.health = 0;\r\n          }\r\n          this.bullets.splice(i, 1);\r\n          continue;\r\n        }\r\n        this.bullets[i].update(timeStamp);\r\n      }\r\n      //if inside the boundary\r\n    }\r\n\r\n    this.bullets.forEach((bullet) => {});\r\n    // let bulletLength = this.bullets.length;\r\n    // console.log(this.bullets[bulletLength - 1]);\r\n    // let enemyLength = this.enemies.length;\r\n    // for (let i = 0; i < bulletLength; i++) {\r\n    //   this.bullets[i].update(timeStamp);\r\n    //   for (let j = 0; j < enemyLength; j++) {\r\n    //     if (\r\n    //       enemies[j] &&\r\n    //       this.bullets[i] &&\r\n    //       isEnemyColliding(this.bullets[i], this.enemies[j])\r\n    //     ) {\r\n    //       enemies[j].health -= this.bullets[i].power;\r\n    //       this.projectils.splice(i, 1);\r\n    //     }\r\n    //     if (this.bullets[i] && this.bullets[i].x > canvas.width - 10) {\r\n    //       this.projectils.splice(i, 1);\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n}\r\n"],"file":"bulletcontroller.dev.js"}