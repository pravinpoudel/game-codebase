{"version":3,"sources":["bulletcontroller.js"],"names":["BulletController","enemies","bullets","bulletStartX","bulletStartY","creep","power","type","push","Bullet","timeStamp","bulletLength","length","i","x","canvas","width","y","height","splice","isColliding2","targetCreep","player","specs","center","Math","floor","size","enemiesLength","m","bombAffectRadius","health","gameSound","playSound","update","forEach","bullet","draw"],"mappings":";;;;;;;;IAAMA,gB;;;AACJ,4BAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD;;;;8BAESE,Y,EAAcC,Y,EAAcC,K,EAAOC,K,EAAOC,I,EAAM;AACxD,WAAKL,OAAL,CAAaM,IAAb,CACE,IAAIC,MAAJ,CAAWN,YAAX,EAAyBC,YAAzB,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,IAArD,CADF;AAGD;;;2BAEMG,S,EAAW;AAChB,UAAIC,YAAY,GAAG,KAAKT,OAAL,CAAaU,MAAhC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;AACrC,YAAI,KAAKX,OAAL,CAAaW,CAAb,CAAJ,EAAqB;AACnB,cACE,KAAKX,OAAL,CAAaW,CAAb,EAAgBC,CAAhB,GAAoB,CAApB,IACA,KAAKZ,OAAL,CAAaW,CAAb,EAAgBC,CAAhB,GAAoBC,MAAM,CAACC,KAD3B,IAEA,KAAKd,OAAL,CAAaW,CAAb,EAAgBI,CAAhB,GAAoB,CAFpB,IAGA,KAAKf,OAAL,CAAaW,CAAb,EAAgBI,CAAhB,GAAoBF,MAAM,CAACG,MAJ7B,EAKE;AACA,iBAAKhB,OAAL,CAAaiB,MAAb,CAAoBN,CAApB,EAAuB,CAAvB;AACA;AACD;;AACD,cACEO,YAAY,CACV,KAAKlB,OAAL,CAAaW,CAAb,EAAgBC,CADN,EAEV,KAAKZ,OAAL,CAAaW,CAAb,EAAgBI,CAFN,EAGV,CAHU,EAIV,KAAKf,OAAL,CAAaW,CAAb,EAAgBQ,WAAhB,CAA4BC,MAA5B,CAAmCC,KAAnC,CAAyCC,MAAzC,CAAgDV,CAJtC,EAKV,KAAKZ,OAAL,CAAaW,CAAb,EAAgBQ,WAAhB,CAA4BC,MAA5B,CAAmCC,KAAnC,CAAyCC,MAAzC,CAAgDP,CALtC,EAMVQ,IAAI,CAACC,KAAL,CAAW,KAAKxB,OAAL,CAAaW,CAAb,EAAgBQ,WAAhB,CAA4BC,MAA5B,CAAmCC,KAAnC,CAAyCI,IAAzC,CAA8Cb,CAA9C,GAAkD,CAA7D,CANU,CADd,EASE;AACA;AAEA;AACA,gBAAI,KAAKZ,OAAL,CAAaW,CAAb,EAAgBN,IAAhB,IAAwB,CAA5B,EAA+B;AAC7B,kBAAIqB,aAAa,GAAG,KAAK3B,OAAL,CAAaW,MAAjC;;AACA,mBAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAApB,EAAmCC,CAAC,EAApC,EAAwC;AACtC,oBACET,YAAY,CACV,KAAKlB,OAAL,CAAaW,CAAb,EAAgBC,CADN,EAEV,KAAKZ,OAAL,CAAaW,CAAb,EAAgBI,CAFN,EAGVa,gBAHU,EAIV,KAAK7B,OAAL,CAAa4B,CAAb,EAAgBP,MAAhB,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoCV,CAJ1B,EAKV,KAAKb,OAAL,CAAa4B,CAAb,EAAgBP,MAAhB,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoCP,CAL1B,EAMVQ,IAAI,CAACC,KAAL,CAAW,KAAKzB,OAAL,CAAa4B,CAAb,EAAgBP,MAAhB,CAAuBC,KAAvB,CAA6BI,IAA7B,CAAkCb,CAAlC,GAAsC,CAAjD,CANU,CADd,EASE;AACA,uBAAKb,OAAL,CAAa4B,CAAb,EAAgBE,MAAhB,IAA0B,KAAK7B,OAAL,CAAaW,CAAb,EAAgBP,KAA1C;AACA,uBAAKL,OAAL,CAAa4B,CAAb,EAAgBE,MAAhB,GACE,KAAK9B,OAAL,CAAa4B,CAAb,EAAgBE,MAAhB,GAAyB,CAAzB,GAA6B,CAA7B,GAAiC,KAAK9B,OAAL,CAAa4B,CAAb,EAAgBE,MADnD;AAED;AACF;AACF,aAlBD,MAkBO;AACL,mBAAK7B,OAAL,CAAaW,CAAb,EAAgBQ,WAAhB,CAA4BU,MAA5B,IAAsC,KAAK7B,OAAL,CAAaW,CAAb,EAAgBP,KAAtD;;AACA,kBAAI,KAAKJ,OAAL,CAAaW,CAAb,EAAgBQ,WAAhB,CAA4BU,MAA5B,GAAqC,CAAzC,EAA4C;AAC1C,qBAAK7B,OAAL,CAAaW,CAAb,EAAgBQ,WAAhB,CAA4BU,MAA5B,GAAqC,CAArC;AACD;AACF,aA3BD,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,YAAAA,SAAS,CAACC,SAAV,CAAoB,WAApB;AACA,iBAAK/B,OAAL,CAAaiB,MAAb,CAAoBN,CAApB,EAAuB,CAAvB;AACAA,YAAAA,CAAC;AACDF,YAAAA,YAAY;AACZ;AACD;AACF;;AACD,aAAKT,OAAL,CAAaW,CAAb,EAAgBqB,MAAhB,CAAuBxB,SAAvB;AACD,OAjFe,CAkFhB;;AACD;;;6BAEQ;AACP,WAAKR,OAAL,CAAaiC,OAAb,CAAqB,UAACC,MAAD,EAAY;AAC/BA,QAAAA,MAAM,CAACC,IAAP;AACD,OAFD;AAGD","sourcesContent":["class BulletController {\r\n  constructor(enemies) {\r\n    this.bullets = [];\r\n    this.enemies = enemies;\r\n  }\r\n\r\n  addBullet(bulletStartX, bulletStartY, creep, power, type) {\r\n    this.bullets.push(\r\n      new Bullet(bulletStartX, bulletStartY, creep, power, type)\r\n    );\r\n  }\r\n\r\n  update(timeStamp) {\r\n    let bulletLength = this.bullets.length;\r\n    for (let i = 0; i < bulletLength; i++) {\r\n      if (this.bullets[i]) {\r\n        if (\r\n          this.bullets[i].x < 0 ||\r\n          this.bullets[i].x > canvas.width ||\r\n          this.bullets[i].y < 0 ||\r\n          this.bullets[i].y > canvas.height\r\n        ) {\r\n          this.bullets.splice(i, 1);\r\n          continue;\r\n        }\r\n        if (\r\n          isColliding2(\r\n            this.bullets[i].x,\r\n            this.bullets[i].y,\r\n            5,\r\n            this.bullets[i].targetCreep.player.specs.center.x,\r\n            this.bullets[i].targetCreep.player.specs.center.y,\r\n            Math.floor(this.bullets[i].targetCreep.player.specs.size.x / 2)\r\n          )\r\n        ) {\r\n          //it is not bomb\r\n        \r\n          //if guided missile; affect in radius of \"bombAffectRadius\"\r\n          if (this.bullets[i].type == 2) {\r\n            let enemiesLength = this.enemies.length;\r\n            for (let m = 0; m < enemiesLength; m++) {\r\n              if (\r\n                isColliding2(\r\n                  this.bullets[i].x,\r\n                  this.bullets[i].y,\r\n                  bombAffectRadius,\r\n                  this.enemies[m].player.specs.center.x,\r\n                  this.enemies[m].player.specs.center.y,\r\n                  Math.floor(this.enemies[m].player.specs.size.x / 2)\r\n                )\r\n              ) {\r\n                this.enemies[m].health -= this.bullets[i].power;\r\n                this.enemies[m].health =\r\n                  this.enemies[m].health < 0 ? 0 : this.enemies[m].health;\r\n              }\r\n            }\r\n          } else {\r\n            this.bullets[i].targetCreep.health -= this.bullets[i].power;\r\n            if (this.bullets[i].targetCreep.health < 0) {\r\n              this.bullets[i].targetCreep.health = 0;\r\n            }\r\n          }\r\n\r\n          // if (this.bullets[i].type == 3) {\r\n          //   let enemiesLength = this.enemies.length;\r\n          //   for (let m = 0; m < enemiesLength; m++) {\r\n          //     // if(enemy is flyover)\r\n          //     if (this.enemies[m].flying) {\r\n          //       isColliding2(\r\n          //         this.bullets[i].x,\r\n          //         this.bullets[i].y,\r\n          //         5,\r\n          //         this.enemies[m].player.specs.center.x,\r\n          //         this.enemies[m].player.specs.center.y,\r\n          //         Math.floor(this.enemies[m].player.specs.size.x / 2)\r\n          //       );\r\n          //       {\r\n          //         console.log(\"i am collided with\", m);\r\n          //         this.enemies[m].health -= this.bullets[i].power;\r\n          //         this.enemies[m].health =\r\n          //           this.enemies[m].health < 0 ? 0 : this.enemies[m].health;\r\n          //       }\r\n          //     }\r\n          //   }\r\n          // }\r\n          gameSound.playSound(\"explosion\");\r\n          this.bullets.splice(i, 1);\r\n          i--;\r\n          bulletLength--;\r\n          continue;\r\n        }\r\n      }\r\n      this.bullets[i].update(timeStamp);\r\n    }\r\n    //if inside the boundary\r\n  }\r\n\r\n  render() {\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n}\r\n"],"file":"bulletcontroller.dev.js"}