{"version":3,"sources":["enemyController.js"],"names":["EnemyController","spec","_classCallCheck","this","enemies","top","createRow","bind","thoseHit","doesIntersectintersect","render","positionX","positionY","score","enemy","Enemy","push","length","i","brick","bricksHit","row","bricks","elapsedTime","Constants","BrickHeight"],"mappings":"uZAAMA,2BACJ,SAAAA,EAAYC,GAAMC,gBAAAC,KAAAH,GAChBG,KAAKC,QAAU,GACfD,KAAKE,IAAM,IACXF,KAAKG,UAAYH,KAAKG,UAAUC,KAAKJ,MACrCA,KAAKK,SAAW,GAChBL,KAAKM,uBAAyBN,KAAKM,uBAAuBF,KAAKJ,MAC/DA,KAAKO,OAASP,KAAKO,OAAOH,KAAKJ,+DAGrBQ,EAAWC,EAAWC,GATlC,IAAAC,EAAA,IAAAC,MAAAJ,EAAkBC,EAAAC,GAAAV,KAAAC,QAAAY,KAAAF,oCAIhB,IADA,IAAAG,EAAKX,KAAYF,QAAKE,OACjBE,EAAL,EAAgBU,EAAhBD,EAAAC,IAEA,IADKT,uBAALN,KAA8BC,QAAKK,GAAAA,YAC9BC,MAAS,EAAAS,MAAYZ,UAA1BU,OAAAE,OAAA,EACDN,OAAAV,KAAAiB,UAAAD,OAAAN,MAeKV,KAAKK,SAASS,wCAKlB,IAAII,EAAKF,EACT,IAAKE,EAAM,EAAGA,EAAMC,OAAOL,OAAQI,GAAO,EACxC,IAAKF,EAAQ,EAAGA,EAfbI,OAAAA,GAAaN,OAAAE,GAAA,EAClBG,OAAIL,GAASE,GAAKf,kBAKfE,UAAAD,IAAA,EAAA,wBACFC,UAAAgB,OAAA,GAAA,GAAAjB,IAAAmB,UAAAC,YAAA,EAAA,wBAkBLnB,UAAUgB,OAAO,GAAG,GAAGjB,IAAMmB,UAAUC,YAAa,EAAG,wBAjBnDnB,UAAIgB,OAAKd,GAAAA,GAALH,IAAcY,UACjBQ,YAAA,EAAA,wBACFnB,UAAAgB,OAAA,GAAA,GAAAjB,IAAAmB,UAAAC,YAAA,EAAA,sBAkBHnB,UAAUgB,OAAO,GAAG,GAAGjB,IAAMmB,UAAUC,YAAa,EAAG,sBACvDnB,UAAUgB,OAAO,GAAG,GAAGjB,IAAMmB,UAAUC,YAAa,EAAG,sBACvDnB,UAAUgB,OAAO,GAAG,GAAGjB,IAlBZmB,UAAAC,YAAA,EAAA","file":"enemyController.min.js","sourcesContent":["class EnemyController {\r\n  constructor(spec) {\r\n    this.enemies = [];\r\n    this.top = 50 + 8 * 15;\r\n    this.createRow = this.createRow.bind(this);\r\n    this.thoseHit = [];\r\n    this.doesIntersectintersect = this.doesIntersectintersect.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  createEnemy(positionX, positionY, score) {\r\n    let enemy = new Enemy(positionX, positionY, score);\r\n    this.enemies.push(enemy);\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    let length = this.enemies.length;\r\n    for (let i = 0; i < length; i++) {\r\n      if (doesIntersectintersect(this.enemies[i], gameObject));\r\n      for (brick = 0; brick < bricksHit.length; brick += 1) {\r\n        score += this.bricksHit[brick].score;\r\n      }\r\n    }\r\n    if (this.thoseHit.length > 0) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var row, brick;\r\n    for (row = 0; row < bricks.length; row += 1) {\r\n      for (brick = 0; brick < bricks[row].length; brick += 1) {\r\n        bricks[row][brick].render();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//code to make this row\r\ncreateRow(top, 1, \"rgba(255, 255, 0, 1)\");\r\ncreateRow(bricks[0][0].top - Constants.BrickHeight, 1, \"rgba(255, 255, 0, 1)\");\r\ncreateRow(bricks[1][0].top - Constants.BrickHeight, 2, \"rgba(255, 165, 0, 1)\");\r\ncreateRow(bricks[2][0].top - Constants.BrickHeight, 2, \"rgba(255, 165, 0, 1)\");\r\ncreateRow(bricks[3][0].top - Constants.BrickHeight, 3, \"rgba(0, 0, 255, 1)\");\r\ncreateRow(bricks[4][0].top - Constants.BrickHeight, 3, \"rgba(0, 0, 255, 1)\");\r\ncreateRow(bricks[5][0].top - Constants.BrickHeight, 5, \"rgba(0, 255, 0, 1)\");\r\ncreateRow(bricks[6][0].top - Constants.BrickHeight, 5, \"rgba(0, 255, 0, 1)\");\r\n"]}