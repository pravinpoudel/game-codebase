{"version":3,"sources":["gameModel.js"],"names":["gameModel","specs","playerEvent","continousMotion","player","animationTime","subImageIndex","subTextureWidth","image","Image","isReady","loadedImage","secondTime","images","index","spriteSheet","forEach","src","onload","spriteCount","push","collided","elapsedTime","spriteTime","update","center","rotation","size","context","save","translate","x","y","rotate","drawImage","width","height","restore","drawSubTexture"],"mappings":"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","sourcesContent":["class gameModel {\r\n  constructor(specs, playerEvent, continousMotion) {\r\n    this.specs = specs;\r\n    this.player = playerEvent;\r\n\r\n    this.animationTime = 0;\r\n    this.subImageIndex = 0;\r\n    this.subTextureWidth = 0;\r\n\r\n    this.image = new Image();\r\n    this.isReady = false;\r\n    this.loadedImage = 0;\r\n    this.secondTime = false;\r\n\r\n    this.images = [];\r\n    this.index = 0;\r\n    specs.spriteSheet.forEach((src) => {\r\n      let image = new Image();\r\n      image.src = src;\r\n      image.onload = () => {\r\n        this.loadedImage++;\r\n        if (this.loadedImage == this.specs.spriteCount) this.isReady = true;\r\n      };\r\n      this.images.push(image);\r\n    });\r\n\r\n    // this.image.src = this.specs.spriteSheet;\r\n    this.continousMotion = continousMotion;\r\n    this.collided = false;\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    this.animationTime += elapsedTime;\r\n    if (this.animationTime >= this.specs.spriteTime[this.subImageIndex]) {\r\n      this.animationTime -= this.specs.spriteTime[this.subImageIndex];\r\n      this.subImageIndex += 1;\r\n      this.subImageIndex = this.subImageIndex % this.specs.spriteCount;\r\n    }\r\n    if (this.continousMotion) {\r\n      this.player.update(elapsedTime);\r\n    }\r\n  }\r\n\r\n  drawSubTexture(image, index, subTextureWidth, center, rotation, size) {\r\n    context.save();\r\n    context.translate(center.x, center.y);\r\n    context.rotate(rotation);\r\n    context.translate(-center.x, -center.y);\r\n    // context.drawImage(image, this.x, this.y, image.width, image.height);\r\n    context.drawImage(\r\n      image,\r\n      center.x - image.width / 2, // Where to draw the sub-texture\r\n      center.y - image.height / 2,\r\n      image.width,\r\n      image.height\r\n    );\r\n    context.restore();\r\n  }\r\n\r\n  render() {\r\n    if (this.isReady) {\r\n      let image = this.images[this.subImageIndex];\r\n      this.drawSubTexture(\r\n        image,\r\n        this.subImageIndex,\r\n        this.subTextureWidth,\r\n        this.player.specs.center,\r\n        this.player.specs.rotation,\r\n        this.player.specs.size\r\n      );\r\n      this.secondTime = true;\r\n    }\r\n  }\r\n}\r\n"],"file":"gameModel.dev.js"}