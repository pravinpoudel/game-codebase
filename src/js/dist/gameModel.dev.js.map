{"version":3,"sources":["gameModel.js"],"names":["gameModel","specs","playerEvent","continousMotion","player","animationTime","subImageIndex","subTextureWidth","image","Image","isReady","loadedImage","secondTime","images","index","spriteSheet","forEach","src","onload","spriteCount","push","collided","health","maxHealth","meterWidth","yoffsetBar","elapsedTime","spriteTime","update","reachRight","center","width","height","currentHealth","barHeight","context","fillStyle","left","x","top","y","fillRect","lifeWidth","Math","floor","rotation","size","save","translate","rotate","drawImage","restore","drawSubTexture","drawBar"],"mappings":"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","sourcesContent":["class gameModel {\r\n  constructor(specs, playerEvent, continousMotion) {\r\n    this.specs = specs;\r\n    this.player = playerEvent;\r\n\r\n    this.animationTime = 0;\r\n    this.subImageIndex = 0;\r\n    this.subTextureWidth = 0;\r\n\r\n    this.image = new Image();\r\n    this.isReady = false;\r\n    this.loadedImage = 0;\r\n    this.secondTime = false;\r\n\r\n    this.images = [];\r\n    this.index = 0;\r\n    specs.spriteSheet.forEach((src) => {\r\n      let image = new Image();\r\n      image.src = src;\r\n      image.onload = () => {\r\n        this.loadedImage++;\r\n        if (this.loadedImage == this.specs.spriteCount) this.isReady = true;\r\n      };\r\n      this.images.push(image);\r\n    });\r\n\r\n    // this.image.src = this.specs.spriteSheet;\r\n    this.continousMotion = continousMotion;\r\n    this.collided = false;\r\n    this.health = specs.health;\r\n    this.maxHealth = specs.health;\r\n    this.meterWidth = 40;\r\n    this.yoffsetBar = 20;\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    this.animationTime += elapsedTime;\r\n    if (this.animationTime >= this.specs.spriteTime[this.subImageIndex]) {\r\n      this.animationTime -= this.specs.spriteTime[this.subImageIndex];\r\n      this.subImageIndex += 1;\r\n      this.subImageIndex = this.subImageIndex % this.specs.spriteCount;\r\n    }\r\n    if (this.continousMotion) {\r\n      this.player.update(elapsedTime);\r\n    }\r\n  }\r\n\r\n  reachRight() {\r\n    return this.player.reachRight();\r\n  }\r\n\r\n  drawBar(center, width, height, currentHealth, maxHealth) {\r\n    let barHeight = 5;\r\n    context.fillStyle = \"red\";\r\n    let left = center.x - this.meterWidth / 2;\r\n    let top = center.y - height / 2 - this.yoffsetBar - barHeight;\r\n    context.fillRect(left, top, this.meterWidth, barHeight);\r\n    context.fillStyle = \"green\";\r\n    let lifeWidth = Math.floor((currentHealth / maxHealth) * this.meterWidth);\r\n    context.fillRect(left, top, lifeWidth, barHeight);\r\n  }\r\n\r\n  drawSubTexture(image, index, subTextureWidth, center, rotation, size) {\r\n    context.save();\r\n    context.translate(center.x, center.y);\r\n    context.rotate(rotation);\r\n    context.translate(-center.x, -center.y);\r\n    // context.drawImage(image, this.x, this.y, image.width, image.height);\r\n    context.drawImage(\r\n      image,\r\n      center.x - image.width / 2, // Where to draw the sub-texture\r\n      center.y - image.height / 2,\r\n      image.width,\r\n      image.height\r\n    );\r\n    context.restore();\r\n  }\r\n\r\n  render() {\r\n    if (this.isReady) {\r\n      let image = this.images[this.subImageIndex];\r\n      this.drawSubTexture(\r\n        image,\r\n        this.subImageIndex,\r\n        this.subTextureWidth,\r\n        this.player.specs.center,\r\n        this.player.specs.rotation,\r\n        this.player.specs.size\r\n      );\r\n      this.drawBar(\r\n        this.player.specs.center,\r\n        image.width,\r\n        image.height,\r\n        this.health,\r\n        this.maxHealth\r\n      );\r\n      this.secondTime = true;\r\n    }\r\n  }\r\n}\r\n"],"file":"gameModel.dev.js"}