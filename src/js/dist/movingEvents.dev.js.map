{"version":3,"sources":["movingevents.js"],"names":["MovingEvents","specs","moveForward","bind","rotateLeft","rotateRight","moveRight","moveLeft","moveTop","moveDown","runTop","runDown","runRight","runLeft","update","yDirection","xDirection","elapsedTime","center","x","moveRate","y","vectorX","Math","cos","rotation","vectorY","sin","console","log","rotateRate","canvas","width","size","height","continousSpeed"],"mappings":"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","sourcesContent":["class MovingEvents {\r\n  constructor(specs) {\r\n    this.specs = specs;\r\n    this.moveForward = this.moveForward.bind(this);\r\n    this.rotateLeft = this.rotateLeft.bind(this);\r\n    this.rotateRight = this.rotateRight.bind(this);\r\n    this.moveRight = this.moveRight.bind(this);\r\n    this.moveLeft = this.moveLeft.bind(this);\r\n    this.moveTop = this.moveTop.bind(this);\r\n    this.moveDown = this.moveDown.bind(this);\r\n    this.runTop = this.runTop.bind(this);\r\n    this.runDown = this.runDown.bind(this);\r\n    this.runRight = this.runRight.bind(this);\r\n    this.runLeft = this.runLeft.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.yDirection = specs.yDirection;\r\n    this.xDirection = specs.xDirection;\r\n  }\r\n\r\n  moveRight(elapsedTime) {\r\n    this.specs.center.x += this.specs.moveRate * elapsedTime;\r\n  }\r\n\r\n  moveLeft(elapsedTime) {\r\n    this.specs.center.x -= this.specs.moveRate * elapsedTime;\r\n  }\r\n\r\n  moveTop(elapsedTime) {\r\n    this.specs.center.y -= this.specs.moveRate * elapsedTime;\r\n  }\r\n\r\n  moveDown(elapsedTime) {\r\n    this.specs.center.y += this.specs.moveRate * elapsedTime;\r\n  }\r\n\r\n  runTop(elapsedTime) {\r\n    this.yDirection = -1;\r\n    this.xDirection = 0;\r\n  }\r\n\r\n  runDown(elapsedTime) {\r\n    this.yDirection = 1;\r\n    this.xDirection = 0;\r\n  }\r\n\r\n  runRight(elapsedTime) {\r\n    this.xDirection = 1.0;\r\n    this.yDirection = 0;\r\n  }\r\n\r\n  runLeft(elapsedTime) {\r\n    this.xDirection = -1.0;\r\n    this.yDirection = 0.0;\r\n  }\r\n\r\n  //gaze direction movement\r\n  moveForward(elapsedTime) {\r\n    let vectorX = Math.cos(this.specs.rotation);\r\n    let vectorY = Math.sin(this.specs.rotation);\r\n    this.specs.center.x += vectorX * this.specs.moveRate * elapsedTime;\r\n    this.specs.center.y += vectorY * this.specs.moveRate * elapsedTime;\r\n    //limiting the movement in each direction\r\n    //  this.specs.center.x =\r\n    //     this.specs.center.x >= canvas.clientWidth - 50\r\n    //       ? canvas.clientWidth - 50\r\n    //       : this.specs.center.x;\r\n    //   this.specs.center.x = this.specs.center.x <= 10 ? 10 : this.specs.center.x;\r\n    //   this.specs.center.y =\r\n    //     this.specs.center.y >= canvas.clientHeight - 50\r\n    //       ? canvas.clientHeight - 50\r\n    //       : this.specs.center.x;\r\n    //   this.specs.center.y = this.specs.center.y <= 20 ? 20 : this.specs.center.x;\r\n  }\r\n\r\n  rotateLeft(elapsedTime) {\r\n    console.log(\"rotating left\");\r\n    this.specs.rotation -= this.specs.rotateRate * elapsedTime;\r\n  }\r\n\r\n  rotateRight(elapsedTime) {\r\n    console.log(\"rotating right\");\r\n    this.specs.rotation += this.specs.rotateRate * elapsedTime;\r\n  }\r\n\r\n  reachRight() {\r\n    if (this.specs.center.x > canvas.width - this.specs.size.x / 2) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  reachBottom() {\r\n    if (this.specs.center.y > canvas.height - this.specs.size.y / 2) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    if (this.specs.continousSpeed > 0) {\r\n      this.specs.center.x +=\r\n        this.xDirection * this.specs.continousSpeed * elapsedTime * 0.001;\r\n      this.specs.center.y +=\r\n        this.yDirection * this.specs.continousSpeed * elapsedTime * 0.001;\r\n    }\r\n\r\n    if (this.specs.center.x < this.specs.size.x / 2) {\r\n      this.specs.center.x = this.specs.size.x / 2;\r\n    }\r\n\r\n    // if (this.specs.center.x > canvas.width - this.specs.size.x / 2) {\r\n    //   this.specs.center.x = canvas.width - this.specs.size.x / 2;\r\n    // }\r\n\r\n    // if (this.specs.center.y > canvas.height - this.specs.size.y / 2) {\r\n    //   this.specs.center.y = canvas.height - this.specs.size.y / 2;\r\n    // }\r\n\r\n    if (this.specs.center.y < this.specs.size.y / 2) {\r\n      this.specs.center.y = this.specs.size.y / 2;\r\n    }\r\n\r\n    // if (that.right > spec.view.width) {\r\n    //   spec.direction.x *= -1;\r\n    // }\r\n\r\n    // if (that.left < 0) {\r\n    //   spec.direction.x *= -1;\r\n    // }\r\n\r\n    // if (that.top < 0) {\r\n    //   spec.direction.y *= -1;\r\n    // }\r\n\r\n    // if (that.bottom > spec.view.height) {\r\n    //   //\r\n    //   // Indicate the ball fell through the bottom\r\n    //   missed = true;\r\n    // }\r\n  }\r\n}\r\n"],"file":"movingevents.dev.js"}