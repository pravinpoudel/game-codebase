{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","assetOrder","key","source","loadScripts","length","entry","require","console","log","shift","loadAssets","assets","onSuccess","onError","loadAsset","asset","error","xhr","XMLHttpRequest","fileExtension","substr","lastIndexOf","open","responseType","onload","status","Image","Audio","window","URL","revokeObjectURL","src","createObjectURL","response","send","mainComplete","game1","Game","GameState","menu","initialize","loaderInitiate","totalItems","Math","floor","document","getElementById","timerId","setTimeout","loop","clearInterval","style","width","loaderHide","loaderParent","display"],"mappings":"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","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/index\"],\r\n      message: \"utility is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"modelAnimation\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"player\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n    {\r\n      scripts: [\"game\"],\r\n      message: \"game class is loaded\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n\r\n  let assetOrder = [\r\n    {\r\n      key: \"fire\",\r\n      source: \"/assets/fire.png\",\r\n    },\r\n    {\r\n      key: \"smoke\",\r\n      source: \"/assets/smoke.png\",\r\n    },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        console.log(entry.message);\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    console.log(\"It is all loaded up\");\r\n    const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"],"file":"loader.dev.js"}