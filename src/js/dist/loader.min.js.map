{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","key","source","loadScripts","console","entry","shift","loadAsset","loaderHide","loaderParent","style","loaderInitiate","loadAssets","assetOrder","length","Math","floor","totalItems","GameState","assets","timerId","error","clearInterval","width","log","fileExtension","onSuccess","onError","xhr","responseType","XMLHttpRequest","substr","lastIndexOf","asset","open","onload","status","Image","Audio","mainComplete","URL","revokeObjectURL","src","menu","setTimeout","send","document","getElementById","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/index\"],\r\n      message: \"utility is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"modelAnimation\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"player\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n    {\r\n      scripts: [\"game\"],\r\n      message: \"game class is loaded\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n\r\n  let assetOrder = [\r\n    {\r\n      key: \"fire\",\r\n      source: \"/assets/fire.png\",\r\n    },\r\n    {\r\n      key: \"smoke\",\r\n      source: \"/assets/smoke.png\",\r\n    },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        console.log(entry.message);\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    console.log(\"It is all loaded up\");\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}