{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","href","window","dir","assetOrder","require","entry","length","onSuccess","assets","shift","console","error","onError","lastIndexOf","mainComplete","canvas","document","getElementById","context","getContext","GameState","menu","initialize","totalItems","log","Math","floor","timerId","setTimeout","clearInterval","style","width","loaderInitiate","revokeObjectURL","asset","xhr","XMLHttpRequest","substr","source","fileExtension","open","status","Image","onload","URL","src","loaderHide","createObjectURL","response","loadScripts","send","loadAsset","loadAssets","key","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"highscore\"],\r\n      message: \"highscore intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"particleSystem\"],\r\n      message: \"particle system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/enemyCreator\"],\r\n      message: \"enemy creator system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/turretCreator\"],\r\n      message: \"tower creation system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"bullet\"],\r\n      message: \"bullet is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"bulletcontroller\"],\r\n      message: \"bulletcontroller is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/control\"],\r\n      message: \"control is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/text\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"tower\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sprite\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemy\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemyController\"],\r\n      message: \"enemyController is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/mouse\"],\r\n      message: \"Mouse inputHandler is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"gamemodel\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"movingevents\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sound\"],\r\n      message: \"sound intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n  var href = window.location.href;\r\n  var dir = href.substring(0, href.lastIndexOf(\"/\")) + \"/\";\r\n\r\n  let assetOrder = [\r\n    // {\r\n    //   key: \"fire\",\r\n    //   source: dir + \"assets/fire.png\",\r\n    // },\r\n    // {\r\n    //   key: \"smoke\",\r\n    //   source: dir + \"assets/smoke.png\",\r\n    // },\r\n    // {\r\n    //   key: \"end audio\",\r\n    //   source: dir + \"assets/sounds/game_end.mp3\",\r\n    // },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          console.log(error.message);\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    canvas = document.getElementById(\"canvas-main\");\r\n    context = canvas.getContext(\"2d\");\r\n    // const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    console.log(\"hello\");\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}