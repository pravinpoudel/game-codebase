{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","href","window","dir","assetOrder","require","entry","location","substring","lastIndexOf","loaderParent","getElementById","context","canvas","getContext","loaderInitiate","initialize","GameState","totalItems","length","console","log","error","Math","floor","loadScripts","timerId","setTimeout","clearInterval","style","width","xhr","open","source","onSuccess","onError","onload","assets","asset","URL","createObjectURL","XMLHttpRequest","fileExtension","substr","responseType","status","Image","Audio","mainComplete","document","menu","revokeObjectURL","src","response","send","loadAsset","shift","loadAssets","key","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"highscore\"],\r\n      message: \"highscore intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"particleSystem\"],\r\n      message: \"particle system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemy\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemyController\"],\r\n      message: \"enemyController is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"gamemodel\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"movingevents\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sound\"],\r\n      message: \"sound intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n  var href = window.location.href;\r\n  var dir = href.substring(0, href.lastIndexOf(\"/\")) + \"/\";\r\n\r\n  let assetOrder = [\r\n    // {\r\n    //   key: \"fire\",\r\n    //   source: dir + \"assets/fire.png\",\r\n    // },\r\n    // {\r\n    //   key: \"smoke\",\r\n    //   source: dir + \"assets/smoke.png\",\r\n    // },\r\n    // {\r\n    //   key: \"end audio\",\r\n    //   source: dir + \"assets/sounds/game_end.mp3\",\r\n    // },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          console.log(error.message);\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    canvas = document.getElementById(\"canvas-main\");\r\n    context = canvas.getContext(\"2d\");\r\n    // const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    console.log(\"hello\");\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}