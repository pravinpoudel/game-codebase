{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","href","window","dir","assetOrder","require","entry","loadAssets","substring","lastIndexOf","length","mainComplete","GameState","document","source","asset","context","canvas","getContext","menu","initialize","loaderHide","totalItems","console","log","Math","floor","getElementById","timerId","setTimeout","clearInterval","style","width","loaderInitiate","assets","onSuccess","onError","fileExtension","Audio","xhr","XMLHttpRequest","substr","open","responseType","onload","src","URL","createObjectURL","response","send","loadAsset","shift","error","key","loadScripts","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"highscore\"],\r\n      message: \"highscore intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"particleSystem\"],\r\n      message: \"particle system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/control\"],\r\n      message: \"control is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"tower\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sprite\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemy\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemyController\"],\r\n      message: \"enemyController is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"gamemodel\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"movingevents\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sound\"],\r\n      message: \"sound intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n  var href = window.location.href;\r\n  var dir = href.substring(0, href.lastIndexOf(\"/\")) + \"/\";\r\n\r\n  let assetOrder = [\r\n    // {\r\n    //   key: \"fire\",\r\n    //   source: dir + \"assets/fire.png\",\r\n    // },\r\n    // {\r\n    //   key: \"smoke\",\r\n    //   source: dir + \"assets/smoke.png\",\r\n    // },\r\n    // {\r\n    //   key: \"end audio\",\r\n    //   source: dir + \"assets/sounds/game_end.mp3\",\r\n    // },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          console.log(error.message);\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    canvas = document.getElementById(\"canvas-main\");\r\n    context = canvas.getContext(\"2d\");\r\n    // const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    console.log(\"hello\");\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}