{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","href","window","dir","substring","length","entry","shift","loadScripts","loadAssets","loadAsset","assetOrder","onSuccess","asset","lastIndexOf","canvas","document","getElementById","loaderHide","getContext","GameState","menu","initialize","totalItems","console","log","Math","floor","timerId","setTimeout","clearInterval","style","width","loaderInitiate","assets","onError","source","xhr","XMLHttpRequest","send","substr","fileExtension","open","mainComplete","responseType","onload","status","Audio","src","URL","createObjectURL","response","error","key","require","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"highscore\"],\r\n      message: \"highscore intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"particleSystem\"],\r\n      message: \"particle system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/enemyCreator\"],\r\n      message: \"enemy creator system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"bullet\"],\r\n      message: \"bullet is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"bulletcontroller\"],\r\n      message: \"bulletcontroller is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/control\"],\r\n      message: \"control is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n    {\r\n      scripts: [\"tower\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sprite\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemy\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemyController\"],\r\n      message: \"enemyController is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"gamemodel\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"movingevents\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sound\"],\r\n      message: \"sound intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n  var href = window.location.href;\r\n  var dir = href.substring(0, href.lastIndexOf(\"/\")) + \"/\";\r\n\r\n  let assetOrder = [\r\n    // {\r\n    //   key: \"fire\",\r\n    //   source: dir + \"assets/fire.png\",\r\n    // },\r\n    // {\r\n    //   key: \"smoke\",\r\n    //   source: dir + \"assets/smoke.png\",\r\n    // },\r\n    // {\r\n    //   key: \"end audio\",\r\n    //   source: dir + \"assets/sounds/game_end.mp3\",\r\n    // },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          console.log(error.message);\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    canvas = document.getElementById(\"canvas-main\");\r\n    context = canvas.getContext(\"2d\");\r\n    // const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    console.log(\"hello\");\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}