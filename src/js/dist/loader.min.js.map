{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","assetOrder","key","source","loadScripts","require","entry","console","mainComplete","log","GameState","loaderParent","loaderInitiate","length","loadAssets","floor","document","getElementById","assets","loaderHide","style","width","asset","XMLHttpRequest","onError","fileExtension","xhr","open","onSuccess","substr","lastIndexOf","window","URL","responseType","status","Image","Audio","onload","revokeObjectURL","src","createObjectURL","response","totalItems","Math","clearInterval","send","shift","error","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/index\"],\r\n      message: \"utility is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"modelAnimation\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"player\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n\r\n  let assetOrder = [\r\n    {\r\n      key: \"fire\",\r\n      source: \"/assets/fire.png\",\r\n    },\r\n    {\r\n      key: \"smoke\",\r\n      source: \"/assets/smoke.png\",\r\n    },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        console.log(entry.message);\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    console.log(\"It is all loaded up\");\r\n    // const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}