{"version":3,"sources":["loader.js"],"names":["progressSlice","loaderWidth","loader","scriptOrder","scripts","message","onComplete","assetOrder","loadScripts","require","entry","location","href","substring","lastIndexOf","mainComplete","canvas","document","getElementById","loaderInitiate","getContext","GameState","menu","initialize","console","totalItems","length","Math","floor","loaderHide","timerId","setTimeout","clearInterval","style","width","log","loadAssets","assets","onSuccess","onError","status","source","fileExtension","substr","xhr","open","onload","asset","Image","Audio","src","loop","createObjectURL","response","send","loadAsset","shift","error","window","key","display"],"mappings":"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","file":"loader.min.js","sourcesContent":["let progressSlice;\r\nlet loaderWidth = 1;\r\n\r\nloader = (function () {\r\n  \"use strict\";\r\n  let scriptOrder = [\r\n    {\r\n      scripts: [\"random\"],\r\n      message: \"Random number generator loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"highscore\"],\r\n      message: \"highscore intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"particleSystem\"],\r\n      message: \"particle system is intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/about\"],\r\n      message: \"about is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/game-play\"],\r\n      message: \" game-play is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/help\"],\r\n      message: \"help is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/highscores\"],\r\n      message: \"highscore is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/control\"],\r\n      message: \"control is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/mainmenu\"],\r\n      message: \"mainmenu is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"screens/menumanager\"],\r\n      message: \"menumanager is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemy\"],\r\n      message: \"enemy is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"enemyController\"],\r\n      message: \"enemyController is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"input/input\"],\r\n      message: \"input is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"gamemodel\"],\r\n      message: \"modelAnimation is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"movingevents\"],\r\n      message: \"moving object is loaded\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"sound\"],\r\n      message: \"sound intialized\",\r\n      onComplete: null,\r\n    },\r\n\r\n    {\r\n      scripts: [\"utility/initialize\"],\r\n      message: \"game menu intialized\",\r\n      onComplete: null,\r\n    },\r\n  ];\r\n  var href = window.location.href;\r\n  var dir = href.substring(0, href.lastIndexOf(\"/\")) + \"/\";\r\n\r\n  let assetOrder = [\r\n    // {\r\n    //   key: \"fire\",\r\n    //   source: dir + \"assets/fire.png\",\r\n    // },\r\n    // {\r\n    //   key: \"smoke\",\r\n    //   source: dir + \"assets/smoke.png\",\r\n    // },\r\n    // {\r\n    //   key: \"end audio\",\r\n    //   source: dir + \"assets/sounds/game_end.mp3\",\r\n    // },\r\n  ];\r\n\r\n  function loadScripts(scripts, onComplete) {\r\n    if (scripts.length > 0) {\r\n      let entry = scripts[0];\r\n      require(entry.scripts, function () {\r\n        if (entry.onComplete) {\r\n          entry.onComplete();\r\n        }\r\n        scripts.shift(); // Alternatively: scripts.splice(0, 1);\r\n        loaderWidth += progressSlice;\r\n        loadScripts(scripts, onComplete);\r\n      });\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAssets(assets, onSuccess, onError, onComplete) {\r\n    //\r\n    // When we run out of things to load, that is when we call onComplete.\r\n    if (assets.length > 0) {\r\n      let entry = assets[0];\r\n      loadAsset(\r\n        entry.source,\r\n        function (asset) {\r\n          onSuccess(entry, asset);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loaderWidth += progressSlice;\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        },\r\n        function (error) {\r\n          console.log(error.message);\r\n          onError(error);\r\n          assets.shift(); // Alternatively: assets.splice(0, 1);\r\n          loadAssets(assets, onSuccess, onError, onComplete);\r\n        }\r\n      );\r\n    } else {\r\n      onComplete();\r\n    }\r\n  }\r\n\r\n  function loadAsset(source, onSuccess, onError) {\r\n    let xhr = new XMLHttpRequest();\r\n    let fileExtension = source.substr(source.lastIndexOf(\".\") + 1); // Source: http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\r\n\r\n    if (fileExtension) {\r\n      xhr.open(\"GET\", source, true);\r\n      xhr.responseType = \"blob\";\r\n\r\n      xhr.onload = function () {\r\n        let asset = null;\r\n        if (xhr.status === 200) {\r\n          if (fileExtension === \"png\" || fileExtension === \"jpg\") {\r\n            asset = new Image();\r\n          } else if (fileExtension === \"mp3\") {\r\n            asset = new Audio();\r\n          } else {\r\n            if (onError) {\r\n              onError(\"Unknown file extension: \" + fileExtension);\r\n            }\r\n          }\r\n          asset.onload = function () {\r\n            window.URL.revokeObjectURL(asset.src);\r\n            if (onSuccess) {\r\n              onSuccess(asset);\r\n            }\r\n          };\r\n          asset.src = window.URL.createObjectURL(xhr.response);\r\n        } else {\r\n          if (onError) {\r\n            onError(\"Failed to retrieve: \" + source);\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      if (onError) {\r\n        onError(\"Unknown file extension: \" + fileExtension);\r\n      }\r\n    }\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function mainComplete() {\r\n    canvas = document.getElementById(\"canvas-main\");\r\n    context = canvas.getContext(\"2d\");\r\n    // const game1 = new Game();\r\n    GameState.menu.initialize();\r\n  }\r\n\r\n  function loaderInitiate() {\r\n    let totalItems = assetOrder.length + scriptOrder.length;\r\n    console.log(\"hello\");\r\n    progressSlice = Math.floor(100 / totalItems);\r\n    let loader = document.getElementById(\"loader\");\r\n    let timerId = setTimeout(loop, 1000);\r\n\r\n    function loop() {\r\n      if (loaderWidth >= 100) {\r\n        clearInterval(timerId);\r\n      } else {\r\n        loader.style.width = loaderWidth + \"%\";\r\n      }\r\n      console.log(loaderWidth);\r\n    }\r\n  }\r\n\r\n  function loaderHide() {\r\n    let loaderParent = document.getElementById(\"loader_wrapper\");\r\n    loaderParent.style.display = \"none\";\r\n  }\r\n\r\n  loaderInitiate();\r\n  loadAssets(\r\n    assetOrder,\r\n    function (source, asset) {\r\n      // Store it on success\r\n      GameState.assets[source.key] = asset;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n    },\r\n    function () {\r\n      loadScripts(scriptOrder, mainComplete);\r\n    }\r\n  );\r\n  loaderHide();\r\n})();\r\n"]}