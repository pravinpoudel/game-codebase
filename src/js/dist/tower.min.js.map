{"version":3,"sources":["tower.js"],"names":["Tower","spec","_classCallCheck","this","specs","baseSprite","Sprite","sprite","center","rotation","weaponSprite","update","bind","render","delay","y","target","x","elapsedTime","result","computeAngle","crossProduct","rotateRight","rotateRate","rotateLeft","canShoot","isFirst","animationTime","testTolerance","angle","draw"],"mappings":"uZAAMA,iBACJ,SAAAA,EAAYC,GAAMC,gBAAAC,KAAAH,GAChBG,KAAKC,MAAQH,EACbE,KAAKE,WAAa,IAAIC,OAAO,CAC3BC,OAAQN,EAAKI,WACbG,OAAQP,EAAKO,OACbC,SAAU,IANVT,KAQGU,aAAe,IAAIJ,OAAO,CAC7BC,OAAQN,EAAKS,aACbF,OAAQP,EAAKO,OATjBC,SAAA,IAYEN,KAAKC,MAAMK,SAAW,EAXtBN,KAAKC,OAAQH,KAAbU,OAAAC,KAAAT,MACAA,KAAKE,OAAAA,KAAaQ,OAAIP,KAAOH,MAC3BI,KAAAA,UAAaF,KAAAA,UADcO,KAAAT,MAE3BK,KAAAA,UAAaA,EACbC,KAAAA,cAAU,EAHiBN,KAA7BW,MAAAX,KAAAC,MAAAU,MAKAX,KAAKO,SAAAA,yDAGHD,EAAQM,GAHqBZ,KAA/BC,MAAAY,OAAA,CAKAC,EAAKb,EACLW,EAAKJ,0CAKLR,KAAKW,UAAQ,iCAeRI,GACL,IAAIC,EAASC,aACXjB,KAAKC,MAAMK,SACXN,KAAKC,MAAMI,OAbbL,KAAKC,MAAMY,SAEND,IAAHA,cAAGA,EAAAA,MAAAA,EAAAA,OAFL,EAAAI,EAAAE,cAIDlB,KAAAO,aAAAY,YAAAnB,KAAAC,MAAAmB,YAeKpB,KAAKC,MAAMK,UAAYN,KAAKC,MAAMmB,aAElCpB,KAAKO,aAAac,WAfTrB,KAAAC,MAAAmB,YACbpB,KAAKsB,MAALhB,UAAAN,KAAAC,MAAAmB,aAkBIpB,KAAKuB,UAGTvB,KAAKwB,eAAiBT,EAZtBf,KAAIyB,cAAcT,KAAOU,MAARf,OACfX,KAAAwB,eAAWN,KAAPjB,MAAyBU,MAC3BX,KAAAsB,UAAKf,GAENP,KAHDsB,UAGO,oCAIRtB,KAAAE,WAAAyB,OAcD3B,KAAKO,aAAaoB","file":"tower.min.js","sourcesContent":["class Tower {\r\n  constructor(spec) {\r\n    this.specs = spec;\r\n    this.baseSprite = new Sprite({\r\n      sprite: spec.baseSprite,\r\n      center: spec.center,\r\n      rotation: 0,\r\n    });\r\n    this.weaponSprite = new Sprite({\r\n      sprite: spec.weaponSprite,\r\n      center: spec.center,\r\n      rotation: 0,\r\n    });\r\n    this.specs.rotation = 0;\r\n    this.update = this.update.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.setTarget = this.setTarget.bind(this);\r\n    this.canShoot = true;\r\n    this.animationTime = 0;\r\n    this.delay = this.specs.delay;\r\n    this.isFirst = true;\r\n  }\r\n\r\n  setTarget(x, y) {\r\n    this.specs.target = {\r\n      x: x,\r\n      y: y,\r\n    };\r\n  }\r\n\r\n  removeTarget() {\r\n    this.canShoot = false;\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    let result = computeAngle(\r\n      this.specs.rotation,\r\n      this.specs.center,\r\n      this.specs.target\r\n    );\r\n    if (testTolerance(result.angle, 0, 0.01) === false) {\r\n      if (result.crossProduct > 0) {\r\n        this.weaponSprite.rotateRight(this.specs.rotateRate);\r\n        this.specs.rotation += this.specs.rotateRate;\r\n      } else {\r\n        this.weaponSprite.rotateLeft(this.specs.rotateRate);\r\n        this.specs.rotation -= this.specs.rotateRate;\r\n      }\r\n    }\r\n    if (this.isFirst) {\r\n      return;\r\n    }\r\n    this.animationTime += elapsedTime;\r\n    if (this.animationTime > this.specs.delay) {\r\n      this.animationTime -= this.specs.delay;\r\n      this.canShoot = true;\r\n    } else {\r\n      this.canShoot = false;\r\n    }\r\n  }\r\n  render() {\r\n    this.baseSprite.draw();\r\n    this.weaponSprite.draw();\r\n  }\r\n}\r\n"]}