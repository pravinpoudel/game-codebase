{"version":3,"sources":["shortestPath.js"],"names":["shortestPathBinaryMatrix","grid","length","queue","visited","Map","push","row","col","lastRow","lastCol","neighbors","totalLength","Infinity","shift","currentRow","currentCol","currentLength","key","Math","min","has","set","newLength","i","nextRow","nextCol"],"mappings":"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","sourcesContent":["var shortestPathBinaryMatrix = function (grid) {\r\n  if (grid.length === 0) return -1;\r\n  const queue = [];\r\n  const visited = new Map();\r\n  if (grid[0][0] !== 0) return -1;\r\n  queue.push({ row: 0, col: 0, length: 0 });\r\n  const lastRow = grid.length - 1,\r\n    lastCol = grid[grid.length - 1].length - 1;\r\n  if (grid[lastRow][lastCol] !== 0) return -1;\r\n  const neighbors = [\r\n    [-1, -1],\r\n    [-1, 0],\r\n    [-1, 1],\r\n    [0, -1],\r\n    [1, -1],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, 1],\r\n  ];\r\n  let totalLength = Infinity;\r\n\r\n  while (queue.length > 0) {\r\n    const {\r\n      row: currentRow,\r\n      col: currentCol,\r\n      length: currentLength,\r\n    } = queue.shift();\r\n    const key = `${currentRow}::${currentCol}`;\r\n    if (\r\n      currentRow === lastRow &&\r\n      currentCol === lastCol &&\r\n      grid[currentRow][currentCol] === 0\r\n    ) {\r\n      totalLength = Math.min(totalLength, currentLength + 1);\r\n      continue;\r\n    }\r\n    if (visited.has(key) === true) continue;\r\n    visited.set(key, true);\r\n    const newLength = currentLength + 1;\r\n    for (let i = 0; i < neighbors.length; i++) {\r\n      const nextRow = currentRow + neighbors[i][0];\r\n      const nextCol = currentCol + neighbors[i][1];\r\n      if (grid[nextRow] && grid[nextRow][nextCol] === 0) {\r\n        queue.push({ row: nextRow, col: nextCol, length: newLength });\r\n      }\r\n    }\r\n  }\r\n  return totalLength === Infinity ? -1 : totalLength;\r\n};\r\n"],"file":"shortestPath.dev.js"}