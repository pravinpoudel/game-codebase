{"version":3,"sources":["particleSystem.js"],"names":["ParticleSystem","spec","specs","image","nextName","particles","createEffect","bind","makeParticle","drawTexture","update","render","self","x","y","deltaX","right","left","deltaY","bottom","top","posX","posY","speed","mean","stdev","lifetime","Math","trunc","p","size","abs","Random","nextGaussian","center","direction","rotation","alive","context","translate","rotate","drawImage","restore","elapsedTime","removeMe","value","particle","hasOwnProperty","push","length","Object","getOwnPropertyNames","forEach"],"mappings":"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","sourcesContent":["class ParticleSystem {\r\n  constructor(spec) {\r\n    this.specs = spec;\r\n    this.image = this.specs.image;\r\n    this.nextName = 1;\r\n    this.particles = {};\r\n    this.createEffect = this.createEffect.bind(this);\r\n    this.makeParticle = this.makeParticle.bind(this);\r\n    this.drawTexture = this.drawTexture.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  createEffect() {\r\n    let self = this;\r\n    var x,\r\n      y,\r\n      deltaX = (self.specs.right - self.specs.left) / 10,\r\n      deltaY = (self.specs.bottom - self.specs.top) / 10,\r\n      posX,\r\n      posY;\r\n\r\n    self.specs.speed = {\r\n      mean: 40,\r\n      stdev: 25,\r\n    };\r\n\r\n    self.specs.lifetime = {\r\n      mean: 2000,\r\n      stdev: 500,\r\n    };\r\n    for (x = 0; x < 10; x++) {\r\n      posX = Math.trunc(self.specs.left + x * deltaX);\r\n      for (y = 0; y < 10; y++) {\r\n        posY = Math.trunc(self.specs.top + y * deltaY);\r\n        self.particles[self.nextName++] = self.makeParticle(\r\n          self.specs,\r\n          posX,\r\n          posY\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  makeParticle(specs, x, y) {\r\n    let self = this;\r\n    var p = {\r\n      image: self.image,\r\n      size: Math.abs(Random.nextGaussian(10, 4)),\r\n      center: { x: x, y: y },\r\n      direction: { x: 0, y: Math.abs(Random.nextGaussian(1, 0.25)) },\r\n      speed: Math.abs(Random.nextGaussian(specs.speed.mean, specs.speed.stdev)), // pixels per second\r\n      rotation: 0,\r\n      lifetime: Math.abs(\r\n        Random.nextGaussian(specs.lifetime.mean, specs.lifetime.stdev)\r\n      ), // How long the particle should live, in milliseconds\r\n      alive: 0, // How long the particle has been alive, in milliseconds\r\n    };\r\n\r\n    return p;\r\n  }\r\n\r\n  drawTexture(image, center, rotation, size) {\r\n    context.translate(center.x, center.y);\r\n    context.rotate(rotation);\r\n    context.translate(-center.x, -center.y);\r\n    context.drawImage(\r\n      image,\r\n      center.x - size.x / 2,\r\n      center.y - size.y / 2,\r\n      size.x,\r\n      size.y\r\n    );\r\n    context.restore();\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    var removeMe = [],\r\n      value,\r\n      particle;\r\n    for (value in this.particles) {\r\n      if (this.particles.hasOwnProperty(value)) {\r\n        particle = this.particles[value];\r\n        particle.center.x +=\r\n          (elapsedTime / 1000) * particle.speed * particle.direction.x;\r\n        particle.center.y +=\r\n          (elapsedTime / 1000) * particle.speed * particle.direction.y;\r\n\r\n        particle.rotation += particle.speed / 500;\r\n        particle.alive += elapsedTime;\r\n        if (particle.alive > particle.lifetime) {\r\n          removeMe.push(value);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (particle = 0; particle < removeMe.length; particle++) {\r\n      delete this.particles[removeMe[particle]];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    Object.getOwnPropertyNames(self.particles).forEach(function (value) {\r\n      let particle = self.particles[value];\r\n      self.drawTexture(\r\n        self.specs.image,\r\n        particle.center,\r\n        particle.rotation,\r\n        particle.size\r\n      );\r\n    });\r\n  }\r\n}\r\n"],"file":"particleSystem.dev.js"}