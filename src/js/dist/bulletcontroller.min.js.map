{"version":3,"sources":["bulletcontroller.js"],"names":["BulletController","enemies","_classCallCheck","this","bullets","bulletStartX","bulletStartY","creep","power","push","Bullet","timeStamp","bulletLength","length","i","x","canvas","width","y","height","splice","isColliding2","specs","center","targetCreep","player","Math","floor","health","update","forEach","bullet","draw"],"mappings":"uZAAMA,4BACJ,SAAAA,EAAYC,GAASC,gBAAAC,KAAAH,GACnBG,KAAKC,QAAU,GACfD,KAAKF,QAAU,0DAGPI,EAAcC,EAAcC,EAAOC,GAC3CL,KAAKC,QAAQK,KAAK,IAAIC,OAAOL,EAAcC,EAAcC,EAAOC,mCAG3DG,GATc,IAArB,IAAAC,EAAAT,KAAYF,QAAZY,OAAqBC,EAAA,EAAAA,EAAAF,EAAAE,IAYjB,GAAIX,KAAKC,QAAQU,GAAI,CAXvB,GACKb,KAAAA,QAALa,GAAAC,EAAA,GACDZ,KAAAC,QAAAU,GAAAC,EAAAC,OAAAC,OAaOd,KAAKC,QAAQU,GAAGI,EAAI,GACpBf,KAAKC,QAAQU,GAAGI,EAAIF,OAAOG,OAC3B,CACAhB,KAAKC,QAAQgB,OAdXf,EAAAA,GACR,SAgBI,GACEgB,aACElB,KAAKC,QAAQU,GAfhBH,EACDC,KAAAA,QAAeE,GAAAI,EAgBX,EAfHf,KAAKC,QAAOU,GAAGF,YAAcE,OAAKQ,MAAAC,OAAAR,EACjCZ,KAAKC,QAAQU,GAAjBU,YAAqBC,OAAAH,MAAAC,OAAAL,EACnBQ,KACEC,MAAKvB,KAALA,QAAAU,GACAU,YAAAC,OAAAH,MAAoBN,KAAOC,EAD3B,IAMA,CACDd,KAAAC,QAAAU,GAAAU,YAAAI,QAAAzB,KAAAC,QAAAU,GAAAN,MAYKL,KAAKC,QAAQU,GAAGU,YAAYI,OAAS,IAX3CzB,KACEkB,QAAAA,GACEG,YAAaV,OACb,GAWFX,KAAKC,QAAQgB,OAAON,EAAG,GAHvB,SAECX,KAAAC,QAAAU,GAAAe,OAAAlB,GASPR,KAAKC,QAAQ0B,QAAQ,SAACC,uCAkBtB5B,KAAAC,QAAA0B,QAAA,SAAAC,GACAA,EAAAC","file":"bulletcontroller.min.js","sourcesContent":["class BulletController {\r\n  constructor(enemies) {\r\n    this.bullets = [];\r\n    this.enemies = [];\r\n  }\r\n\r\n  addBullet(bulletStartX, bulletStartY, creep, power) {\r\n    this.bullets.push(new Bullet(bulletStartX, bulletStartY, creep, power));\r\n  }\r\n\r\n  update(timeStamp) {\r\n    let bulletLength = this.bullets.length;\r\n    for (let i = 0; i < bulletLength; i++) {\r\n      if (this.bullets[i]) {\r\n        if (\r\n          this.bullets[i].x < 0 ||\r\n          this.bullets[i].x > canvas.width ||\r\n          this.bullets[i].y < 0 ||\r\n          this.bullets[i].y > canvas.height\r\n        ) {\r\n          this.bullets.splice(i, 1);\r\n          continue;\r\n        }\r\n        if (\r\n          isColliding2(\r\n            this.bullets[i].x,\r\n            this.bullets[i].y,\r\n            5,\r\n            this.bullets[i].targetCreep.player.specs.center.x,\r\n            this.bullets[i].targetCreep.player.specs.center.y,\r\n            Math.floor(this.bullets[i].targetCreep.player.specs.size.x / 2)\r\n          )\r\n        ) {\r\n          this.bullets[i].targetCreep.health -= this.bullets[i].power;\r\n          if (this.bullets[i].targetCreep.health < 0) {\r\n            this.bullets[i].targetCreep.health = 0;\r\n          }\r\n          this.bullets.splice(i, 1);\r\n          continue;\r\n        }\r\n        this.bullets[i].update(timeStamp);\r\n      }\r\n      //if inside the boundary\r\n    }\r\n\r\n    this.bullets.forEach((bullet) => {});\r\n    // let bulletLength = this.bullets.length;\r\n    // console.log(this.bullets[bulletLength - 1]);\r\n    // let enemyLength = this.enemies.length;\r\n    // for (let i = 0; i < bulletLength; i++) {\r\n    //   this.bullets[i].update(timeStamp);\r\n    //   for (let j = 0; j < enemyLength; j++) {\r\n    //     if (\r\n    //       enemies[j] &&\r\n    //       this.bullets[i] &&\r\n    //       isEnemyColliding(this.bullets[i], this.enemies[j])\r\n    //     ) {\r\n    //       enemies[j].health -= this.bullets[i].power;\r\n    //       this.projectils.splice(i, 1);\r\n    //     }\r\n    //     if (this.bullets[i] && this.bullets[i].x > canvas.width - 10) {\r\n    //       this.projectils.splice(i, 1);\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n}\r\n"]}