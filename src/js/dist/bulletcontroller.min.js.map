{"version":3,"sources":["bulletcontroller.js"],"names":["BulletController","enemies","_classCallCheck","this","bullets","bulletStartX","bulletStartY","creep","power","type","push","timeStamp","bulletLength","length","i","x","canvas","width","y","splice","targetCreep","player","center","specs","Math","floor","size","enemiesLength","m","isColliding2","health","bombAffectRadius","bombHit","gameSound","playSound","update","forEach","bullet","draw"],"mappings":"uZAAMA,4BACJ,SAAAA,EAAYC,GAASC,gBAAAC,KAAAH,GACnBG,KAAKC,QAAU,GACfD,KAAKF,QAAUA,yDAGPI,EAAcC,EAAcC,EAAOC,EAAOC,GAClDN,KAAKC,QAAQM,KAPXV,IAAAA,OAAAA,EAQyBM,EAAcC,EAAOC,EAAOC,mCAPpCE,GACnB,IAWA,IAAIC,EAAeT,KAAKC,QAAQS,OAX3BT,EAAL,EAAeU,EAAfF,EAAAE,IAAA,CACA,GAAKb,KAAAA,QAAUA,GAAf,CACD,GAaOE,KAAKC,QAAQU,GAAGC,EAAI,GACpBZ,KAAKC,QAAQU,GAAGC,EAAIC,OAAOC,OAC3Bd,KAAKC,QAAQU,GAAGI,EAAI,GACpBf,KAAKC,QAAQU,GAAGI,EAddb,OAAAA,OACR,CAGDF,KAAAC,QAAAe,OAAAL,EAAA,GAaO,SAEF,GAZAF,aAcIT,KAAKC,QAAQU,GAAGC,EAbnBZ,KAAKC,QAAOU,GAAGF,EACd,EACFT,KACEC,QAAKA,GAALgB,YACAC,OAAKjB,MAALkB,OAAoBN,EAIpBb,KAAKC,QAAQe,GAAAA,YAAbE,OAAAE,MAAAD,OAAAJ,EACAM,KAAAC,MAAAtB,KAAAC,QAAAU,GAAAM,YAAAC,OAAAE,MAAAG,KAAAX,EAAA,IAEF,CAeI,GAAoB,GAApBZ,KAAIwB,QAAAA,GAAAA,KAAqB1B,CACzB,IADA,IAAI0B,EAAgBxB,KAAKF,QAAQY,OAC5Be,EAAK,EAAVA,EAAiBD,EAAjBC,IAWIC,aACA1B,KAAKF,QAAQ2B,GAAGE,EAEjB3B,KAAAC,QAAAU,GAAAI,EACFa,iBATK5B,KAAKF,QAAQ2B,GAAGP,OAAOE,MAAMD,OAAOP,EAU1CiB,KAAQ/B,QAAKG,GAALiB,OAAmBE,MAAKnB,OAAQU,EAlB1CU,KAmBOC,MAAAtB,KAAAF,QAAA2B,GAAAP,OAAAE,MAAAG,KAAAX,EAAA,MAELZ,KAAIF,QAAKG,GAAL0B,QAAgBV,KAAYU,QAAShB,GAAGN,MAC1CL,KAAGF,QAAKG,GAAL0B,OACDE,KAAAA,QAAa5B,GAAAA,OAAN,EAAoB,EAAKA,KAAAA,QAAcwB,GAA9CE,QAEFE,QAAA7B,KAAKC,QAAWgB,GAAAA,EAAAA,KAAYU,QAA5BhB,GAAAI,EAAAa,uBAEH5B,KAEDC,QAAAU,GAAAM,YAAAU,QAAA3B,KAAAC,QAAAU,GAAAN,MACAL,KAAAC,QAAAU,GAAAM,YAAAU,OAAA,IACA,GAAA3B,KAAAC,QAAAU,GAAAL,MACAuB,QAAA7B,KAAAC,QAAAU,GAAAC,EAAAZ,KAAAC,QAAAU,GAAAI,EAAA,IAEAf,KAAAC,QAAAU,GAAAM,YAAAU,OAAA,GAiBAG,UAAUC,UAAU,aAOxB/B,KAAKC,QAALe,OAAAL,EAAuBH,GAEzBG,IANMF,IAOP,UAHGT,KAAKC,QAAQU,GAAGqB,OAKXxB,qCACPR,KAAKC,QAAQgC,QAAQ,SAACC,GACpBA,EAAOC","file":"bulletcontroller.min.js","sourcesContent":["class BulletController {\r\n  constructor(enemies) {\r\n    this.bullets = [];\r\n    this.enemies = enemies;\r\n  }\r\n\r\n  addBullet(bulletStartX, bulletStartY, creep, power, type) {\r\n    this.bullets.push(\r\n      new Bullet(bulletStartX, bulletStartY, creep, power, type)\r\n    );\r\n  }\r\n\r\n  update(timeStamp) {\r\n    let bulletLength = this.bullets.length;\r\n    for (let i = 0; i < bulletLength; i++) {\r\n      if (this.bullets[i]) {\r\n        if (\r\n          this.bullets[i].x < 0 ||\r\n          this.bullets[i].x > canvas.width ||\r\n          this.bullets[i].y < 0 ||\r\n          this.bullets[i].y > canvas.height\r\n        ) {\r\n          this.bullets.splice(i, 1);\r\n          continue;\r\n        }\r\n        if (\r\n          isColliding2(\r\n            this.bullets[i].x,\r\n            this.bullets[i].y,\r\n            5,\r\n            this.bullets[i].targetCreep.player.specs.center.x,\r\n            this.bullets[i].targetCreep.player.specs.center.y,\r\n            Math.floor(this.bullets[i].targetCreep.player.specs.size.x / 2)\r\n          )\r\n          \r\n        ) {\r\n          //it is not bomb\r\n        \r\n          //if guided missile; affect in radius of \"bombAffectRadius\"\r\n          if (this.bullets[i].type == 2) {\r\n            let enemiesLength = this.enemies.length;\r\n            for (let m = 0; m < enemiesLength; m++) {\r\n              if (\r\n                isColliding2(\r\n                  this.bullets[i].x,\r\n                  this.bullets[i].y,\r\n                  bombAffectRadius,\r\n                  this.enemies[m].player.specs.center.x,\r\n                  this.enemies[m].player.specs.center.y,\r\n                  Math.floor(this.enemies[m].player.specs.size.x / 2)\r\n                )\r\n              ) {\r\n                this.enemies[m].health -= this.bullets[i].power;\r\n                this.enemies[m].health =\r\n                  this.enemies[m].health < 0 ? 0 : this.enemies[m].health;\r\n              }\r\n            }\r\n            bombHit(this.bullets[i].x, this.bullets[i].y, bombAffectRadius);\r\n          } else {\r\n            this.bullets[i].targetCreep.health -= this.bullets[i].power;\r\n            if (this.bullets[i].targetCreep.health < 0) {\r\n              if(this.bullets[i].type ==3){\r\n                bombHit(this.bullets[i].x, this.bullets[i].y, 10);\r\n              }\r\n              this.bullets[i].targetCreep.health = 0;\r\n            }\r\n          }\r\n\r\n          // if (this.bullets[i].type == 3) {\r\n          //   let enemiesLength = this.enemies.length;\r\n          //   for (let m = 0; m < enemiesLength; m++) {\r\n          //     // if(enemy is flyover)\r\n          //     if (this.enemies[m].flying) {\r\n          //       isColliding2(\r\n          //         this.bullets[i].x,\r\n          //         this.bullets[i].y,\r\n          //         5,\r\n          //         this.enemies[m].player.specs.center.x,\r\n          //         this.enemies[m].player.specs.center.y,\r\n          //         Math.floor(this.enemies[m].player.specs.size.x / 2)\r\n          //       );\r\n          //       {\r\n          //         console.log(\"i am collided with\", m);\r\n          //         this.enemies[m].health -= this.bullets[i].power;\r\n          //         this.enemies[m].health =\r\n          //           this.enemies[m].health < 0 ? 0 : this.enemies[m].health;\r\n          //       }\r\n          //     }\r\n          //   }\r\n          // }\r\n          gameSound.playSound(\"explosion\");\r\n          this.bullets.splice(i, 1);\r\n          i--;\r\n          bulletLength--;\r\n          continue;\r\n        }\r\n      }\r\n      this.bullets[i].update(timeStamp);\r\n    }\r\n    //if inside the boundary\r\n  }\r\n\r\n  render() {\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.draw();\r\n    });\r\n  }\r\n}\r\n"]}