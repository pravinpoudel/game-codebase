"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var s=0;s<t.length;s++){var a=t[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,s){return t&&_defineProperties(e.prototype,t),s&&_defineProperties(e,s),e}var ParticleSystem=function(){function t(e){_classCallCheck(this,t),this.specs=e,this.image=this.specs.image,this.nextName=1,this.particles={},this.createEffect=this.createEffect.bind(this),this.makeParticle=this.makeParticle.bind(this),this.drawTexture=this.drawTexture.bind(this),this.update=this.update.bind(this),this.render=this.render.bind(this)}return _createClass(t,[{key:"createEffect",value:function(){var e,t,s,a,i=this,r=(i.specs.right-i.specs.left)/10,n=(i.specs.bottom-i.specs.top)/10;for(i.specs.speed={mean:40,stdev:25},i.specs.lifetime={mean:2e3,stdev:500},e=0;e<10;e++)for(s=Math.trunc(i.specs.left+e*r),t=0;t<10;t++)a=Math.trunc(i.specs.top+t*n),i.particles[i.nextName++]=i.makeParticle(i.specs,s,a)}},{key:"makeParticle",value:function(e,t,s){return{image:this.image,size:Math.abs(Random.nextGaussian(10,4)),center:{x:t,y:s},direction:{x:0,y:Math.abs(Random.nextGaussian(1,.25))},speed:Math.abs(Random.nextGaussian(e.speed.mean,e.speed.stdev)),rotation:0,lifetime:Math.abs(Random.nextGaussian(e.lifetime.mean,e.lifetime.stdev)),alive:0}}},{key:"drawTexture",value:function(e,t,s,a){context.translate(t.x,t.y),context.rotate(s),context.translate(-t.x,-t.y),context.drawImage(e,t.x-a.x/2,t.y-a.y/2,a.x,a.y),context.restore()}},{key:"update",value:function(e){var t,s,a=[];for(t in this.particles)this.particles.hasOwnProperty(t)&&((s=this.particles[t]).center.x+=e/1e3*s.speed*s.direction.x,s.center.y+=e/1e3*s.speed*s.direction.y,s.rotation+=s.speed/500,s.alive+=e,s.alive>s.lifetime&&a.push(t));for(s=0;s<a.length;s++)delete this.particles[a[s]]}},{key:"render",value:function(){var s=this;Object.getOwnPropertyNames(s.particles).forEach(function(e){var t=s.particles[e];s.drawTexture(s.specs.image,t.center,t.rotation,t.size)})}}]),t}();
//# sourceMappingURL=particleSystem.min.js.map
