{"version":3,"sources":["enemy.js"],"names":["Enemy","spec","alive","width","Math","trunc","canvas","left","position","right","top","bottom","Constants","BrickHeight","score","gameObject","intersect","collided","isColliding","drawRectangle","x","that","y","brickWidth","height","fill","color","stroke"],"mappings":";;;;;;;;IAAMA,K;;;AACJ,iBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAY,IAAI,GAAL,GAAYC,MAAM,CAACH,KAA9B,CAAb;AACA,SAAKI,IAAL,GAAYN,IAAI,CAACO,QAAL,CAAcD,IAA1B;AACA,SAAKE,KAAL,GAAaR,IAAI,CAACO,QAAL,CAAcD,IAAd,GAAqB,KAAKJ,KAAvC;AACA,SAAKO,GAAL,GAAWT,IAAI,CAACO,QAAL,CAAcE,GAAzB;AACA,SAAKC,MAAL,GAAcV,IAAI,CAACO,QAAL,CAAcE,GAAd,GAAoBE,SAAS,CAACC,WAA5C;AACA,SAAKC,KAAL,GAAab,IAAI,CAACa,KAAlB;AACD;;;;kCAEaC,U,EAAY;AACxB,UAAIC,SAAS,GAAG,KAAhB;;AACA,UAAI,KAAKd,KAAT,EAAgB;AACd;AACA;AACA,YAAI,CAACa,UAAU,CAACE,QAAZ,IAAwBC,WAAW,CAAC,IAAD,EAAOH,UAAP,CAAvC,EAA2D;AACzD,eAAKb,KAAL,GAAa,KAAb;AACAc,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF;;AACDD,MAAAA,UAAU,CAACE,QAAX,GAAsBD,SAAtB;AACA,aAAOA,SAAP;AACD;;;6BAEQ,CACP;AACD;;;6BAEQ;AACP,UAAI,KAAKd,KAAT,EAAgB;AACdiB,QAAAA,aAAa,CAAC;AACZC,UAAAA,CAAC,EAAEC,IAAI,CAACd,IADI;AAEZe,UAAAA,CAAC,EAAED,IAAI,CAACX,GAFI;AAGZP,UAAAA,KAAK,EAAEoB,UAHK;AAIZC,UAAAA,MAAM,EAAEZ,SAAS,CAACC,WAJN;AAKZY,UAAAA,IAAI,EAAExB,IAAI,CAACyB,KALC;AAMZC,UAAAA,MAAM,EAAE;AANI,SAAD,CAAb;AAQD;AACF","sourcesContent":["class Enemy {\r\n  constructor(spec) {\r\n    this.alive = true;\r\n    this.width = Math.trunc((7 / 100) * canvas.width);\r\n    this.left = spec.position.left;\r\n    this.right = spec.position.left + this.width;\r\n    this.top = spec.position.top;\r\n    this.bottom = spec.position.top + Constants.BrickHeight;\r\n    this.score = spec.score;\r\n  }\r\n\r\n  doesIntersect(gameObject) {\r\n    var intersect = false;\r\n    if (this.alive) {\r\n      // if there is another enemy as well and is collided with other\r\n      //we dont care\r\n      if (!gameObject.collided && isColliding(this, gameObject)) {\r\n        this.alive = false;\r\n        intersect = true;\r\n      }\r\n    }\r\n    gameObject.collided = intersect;\r\n    return intersect;\r\n  }\r\n\r\n  update() {\r\n    //if anything is needed to be updated\r\n  }\r\n\r\n  render() {\r\n    if (this.alive) {\r\n      drawRectangle({\r\n        x: that.left,\r\n        y: that.top,\r\n        width: brickWidth,\r\n        height: Constants.BrickHeight,\r\n        fill: spec.color,\r\n        stroke: \"rgba(0, 0, 0, 1)\",\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"file":"enemy.dev.js"}