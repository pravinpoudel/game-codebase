{"version":3,"sources":["enemy.js"],"names":["Enemy","specs","enemyImage","Image","falling","score","subTextureWidth","width","spriteCount","drawSprite","bind","onload","isReady","image","src","spriteSheet","center","rotation","size","context","translate","x","y","rotate","drawImage","restore","index","save","height","timeStamp","animationTime","elapsedTime","spriteTime","subImageIndex","filLStyle","color","drawSubTexture","player"],"mappings":"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","sourcesContent":["class Enemy {\r\n  constructor(specs) {\r\n    this.specs = specs;\r\n    this.enemyImage = new Image();\r\n    this.falling = specs.falling;\r\n    this.score = specs.score;\r\n    this.subTextureWidth = this.enemyImage.width / this.specs.spriteCount;\r\n    this.drawSprite = this.drawSprite.bind(this);\r\n    this.enemyImage.onload = () => {\r\n      this.isReady = true;\r\n      this.subTextureWidth = this.image.width / this.specs.spriteCount;\r\n    };\r\n    this.image.src = this.specs.spriteSheet;\r\n  }\r\n\r\n  drawTexture(image, center, rotation, size) {\r\n    context.translate(center.x, center.y);\r\n    context.rotate(rotation);\r\n    context.translate(-center.x, -center.y);\r\n    context.drawImage(\r\n      image,\r\n      center.x - size.x / 2,\r\n      center.y - size.y / 2,\r\n      size.x,\r\n      size.y\r\n    );\r\n    context.restore();\r\n  }\r\n\r\n  drawSubTexture(image, index, subTextureWidth, center, rotation, size) {\r\n    context.save();\r\n    context.translate(center.x, center.y);\r\n    context.rotate(rotation);\r\n    context.translate(-center.x, -center.y);\r\n\r\n    context.drawImage(\r\n      image,\r\n      subTextureWidth * index,\r\n      0, // Which sub-texture to pick out\r\n      subTextureWidth,\r\n      image.height, // The size of the sub-texture\r\n      center.x - size.x / 2, // Where to draw the sub-texture\r\n      center.y - size.y / 2,\r\n      size.x,\r\n      size.y\r\n    );\r\n    context.restore();\r\n  }\r\n  //update the position of scorpion and spider with each frame\r\n  update(timeStamp) {\r\n    this.animationTime += elapsedTime;\r\n    if (this.animationTime >= this.specs.spriteTime[this.subImageIndex]) {\r\n      this.animationTime -= this.specs.spriteTime[this.subImageIndex];\r\n      this.subImageIndex += 1;\r\n      this.subImageIndex = this.subImageIndex % this.specs.spriteCount;\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    context.filLStyle = this.color;\r\n    this.drawSubTexture(\r\n      this.image,\r\n      this.subImageIndex,\r\n      this.subTextureWidth,\r\n      this.player.specs.center,\r\n      this.player.specs.rotation,\r\n      this.player.specs.size\r\n    );\r\n  }\r\n}\r\n"],"file":"enemy.dev.js"}