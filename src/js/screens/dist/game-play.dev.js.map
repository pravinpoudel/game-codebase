{"version":3,"sources":["game-play.js"],"names":["GamePlay","manager","input","myKeyboard","myMouse","lastTimeStamp","model","initialize","bind","run","playerModel","self","wallModel","renderCircle","sound","particlesSmoke","creeps","towers","registerKey","flyingScores","tower1","Image","src","render","firstTime","downHandler","enemyCreator","canPlace","upgrade","sell","renderScore","startNewWave","level","towerType","elapsedTime","moneyRequired","Math","floor","towerClicked","specs","cost","console","log","money","totalElapsedTime","undefined","upgradeCount","delay","power","gameSound","playSound","towerLength","length","i","isColliding2","center","x","cellWidth","y","towerSold","splice","selectedTower","getAttribute","towerRadius","parseInt","towerTypeSelected","mouse","isActive","e","decision","canCreated","levels","enemyCreators","position","isColliding3","push","createTower","GameState","assets","canvasPosition","canvas","getBoundingClientRect","clientX","left","clientY","top","findSelectedTower","preventDefault","towerElements","document","getElementsByClassName","style","display","myId","getElementById","stopAllSound","unMuteSound","sendNextWave","wave","nextWave","cancelNextRequest","life","add","score","createLevels","makeParticle2","Mouse","register","showScreen","rows","row","j","cols","cellSet","addEventListener","createElement","towerElements2","muteVolume","startButton","bulletController","BulletController","update","localStorage","start","particleSystem","creepsLength","creep","player","reachRight","reachBottom","health","maxHealth","creepDied","totalCreepKilled","textEvent","MovingEvents","size","rotation","moveRate","rotateRate","PI","continousSpeed","yDirection","xDirection","FlyingScore","towersLength","tower","flying","type","isColliding","radius","setTarget","canShoot","direction","target","normalize","bulletStartX","bulletStartY","addBullet","scorelength","isVisible","newEnemy","createEnemy","innerHTML","waveString","maxWave","totalTowerValues","forEach","context","clearRect","width","height","fillStyle","fillRect","placementFlag","x1","y1","leftOffset","topOffset","beginPath","rect","stroke","moveTo","lineTo","drawTower","drawRectangle","fill","Sound","loadAudio","performance","now","gameLoop","time","totalEnemy","processInput","requestAnimationFrame","font","textAlign","fillText","setTimeout"],"mappings":"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","sourcesContent":["class GamePlay {\r\n  constructor(manager, input) {\r\n    this.myKeyboard = input;\r\n    this.myMouse = null;\r\n    this.lastTimeStamp;\r\n    this.manager = manager;\r\n    this.model = null;\r\n    this.initialize = this.initialize.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.playerModel = null;\r\n    self.wallModel = null;\r\n    this.renderCircle = false;\r\n    this.sound = null;\r\n    this.particlesSmoke = null;\r\n    this.creeps = [];\r\n    this.towers = [];\r\n    this.registerKey = this.registerKey.bind(this);\r\n    this.flyingScores = [];\r\n    this.tower1 = new Image();\r\n    this.tower1.src = \"assets/turret/turret-5-3.png\";\r\n    this.render = this.render.bind(this);\r\n    this.firstTime = true;\r\n    this.downHandler = this.downHandler.bind(this);\r\n    this.enemyCreator = null;\r\n    this.canPlace = false;\r\n    this.upgrade = this.upgrade.bind(this);\r\n    this.sell = this.sell.bind(this);\r\n    this.renderScore = this.renderScore.bind(this);\r\n    this.startNewWave = this.startNewWave.bind(this);\r\n    this.level = 0;\r\n    this.towerType = [\"Gun\", \"Missile\", \"Air\", \"Mix (Air + Ground)\"];\r\n  }\r\n\r\n  upgrade(elapsedTime) {\r\n    let moneyRequired = Math.floor(0.5 * towerClicked.specs.cost);\r\n    console.log(towerClicked)\r\n    if (moneyRequired <= money) {\r\n      if (towerClicked) {\r\n        if (towerClicked.totalElapsedTime == undefined) {\r\n          towerClicked.totalElapsedTime = 0;\r\n        } else {\r\n          towerClicked.totalElapsedTime += elapsedTime;\r\n          if (towerClicked.totalElapsedTime >= 200) {\r\n            console.log(\"upgraded\");\r\n            towerClicked.totalElapsedTime -= 200;\r\n            if (!towerClicked.upgradeCount) {\r\n              towerClicked.upgradeCount = 1;\r\n            } else {\r\n              if (towerClicked.upgradeCount >= 3) {\r\n                return;\r\n              } else {\r\n                towerClicked.upgradeCount = towerClicked.upgradeCount + 1;\r\n                towerClicked.delay = Math.floor(towerClicked.delay * 0.7);\r\n                towerClicked.specs.power = towerClicked.specs.power + 1;\r\n                money -= moneyRequired;\r\n                gameSound.playSound(\"add\");\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  sell() {\r\n    if (towerClicked) {\r\n      let towerLength = this.towers.length;\r\n      for (let i = 0; i < towerLength; i++) {\r\n        if (\r\n          isColliding2(\r\n            this.towers[i].specs.center.x - cellWidth / 2,\r\n            this.towers[i].specs.center.y - cellWidth / 2,\r\n            cellWidth,\r\n            towerClicked.specs.center.x - cellWidth / 2,\r\n            towerClicked.specs.center.y - cellWidth / 2,\r\n            cellWidth\r\n          )\r\n        ) {\r\n          money += Math.floor(0.7 * towerClicked.specs.cost);\r\n          towerSold(this.towers[i].specs.center.x - cellWidth / 2, this.towers[i].specs.center.y - cellWidth / 2);\r\n          this.towers.splice(i, 1);\r\n          gameSound.playSound(\"die\");\r\n          towerClicked = null;\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createElement() {\r\n    selectedTower = this.getAttribute(\"data-myName\");\r\n    towerRadius = this.getAttribute(\"data-radius\");\r\n    moneyRequired = parseInt(this.getAttribute(\"data-cost\"));\r\n    towerTypeSelected = parseInt(this.getAttribute(\"data-type\"));\r\n    if (moneyRequired <= money) {\r\n      renderCircle = true;\r\n      mouse.isActive = true;\r\n    }\r\n  }\r\n\r\n  downHandler(e, elapsedTime) {\r\n    if (mouse.isActive) {\r\n      firstTime = true;\r\n      mouse.isActive = false;\r\n      renderCircle = false;\r\n      let decision = canCreated(this.towers) && this.canPlace;\r\n      if (decision) {\r\n        if (levels[this.level].enemyCreators[0].position == \"top\") {\r\n          if (\r\n            isColliding3(\r\n              Math.floor(mouse.x / cellWidth) * cellWidth,\r\n              Math.floor((mouse.y - 200) / cellWidth) * cellWidth + 200,\r\n              10,\r\n              10,\r\n              175,\r\n              200,\r\n              225,\r\n              600\r\n            )\r\n          ) {\r\n            console.log(\"it is blocking the path\");\r\n            return;\r\n          }\r\n        } else if (levels[this.level].enemyCreators[0].position == \"left\") {\r\n          if (\r\n            isColliding3(\r\n              Math.floor(mouse.x / cellWidth) * cellWidth,\r\n              Math.floor((mouse.y - 200) / cellWidth) * cellWidth + 200,\r\n              10,\r\n              10,\r\n              0,\r\n              400,\r\n              600,\r\n              200\r\n            )\r\n          ) {\r\n            console.log(\"it is blocking\");\r\n            return;\r\n          }\r\n        }\r\n        this.towers.push(\r\n          createTower(\r\n            GameState.assets[selectedTower],\r\n            Math.floor(mouse.x / cellWidth) * cellWidth,\r\n            Math.floor((mouse.y - 200) / cellWidth) * cellWidth + 200,\r\n            2500,\r\n            1,\r\n            towerRadius,\r\n            moneyRequired,\r\n            towerTypeSelected\r\n          )\r\n        );\r\n        money = money - moneyRequired;\r\n        moneyRequired = 0;\r\n        towerTypeSelected = 0;\r\n        gameSound.playSound(\"add\");\r\n      }\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n    } else {\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n      mouse.x = e.clientX - canvasPosition.left;\r\n      mouse.y = e.clientY - canvasPosition.top;\r\n      findSelectedTower(this.towers);\r\n    }\r\n  }\r\n\r\n  muteVolume(e) {\r\n    e.preventDefault();\r\n    var towerElements = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].style.display = \"block\";\r\n    }\r\n    let myId = this.getAttribute(\"data-myId\");\r\n    document.getElementById(myId).style.display = \"none\";\r\n    if (myId == \"muteButton\") {\r\n      gameSound.stopAllSound();\r\n    }\r\n    if (myId == \"unmuteButton\") {\r\n      gameSound.unMuteSound();\r\n    }\r\n  }\r\n\r\n  startNewWave(e) {\r\n    e.preventDefault();\r\n    console.log(\"start button clicked\");\r\n    this.enemyCreator = levels[this.level].sendNextWave();\r\n    if (levels[this.level].wave >= levels[this.level].enemyCreators.length) {\r\n      this.level++;\r\n      this.towers = [];\r\n    }\r\n    nextWave = false;\r\n    GameState.cancelNextRequest = false;\r\n  }\r\n\r\n  checkCanProceed() {\r\n    if (this.level > 2 || GameState.life <= 0) {\r\n      GameState.cancelNextRequest = true;\r\n      add(score);\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    let self = this;\r\n    createLevels();\r\n    makeParticle2();\r\n    this.myMouse = new Mouse();\r\n    GameState.cancelNextRequest = false;\r\n    GameState.life = 10;\r\n    self.myKeyboard.register(\"Escape\", function () {\r\n      GameState.cancelNextRequest = true;\r\n      self.manager.showScreen(\"mainmenu\");\r\n    });\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < cols; j++) {\r\n        row.push({\r\n          x: i,\r\n          y: j,\r\n        });\r\n      }\r\n      cellSet.push(row);\r\n    }\r\n\r\n    towerElements = document.getElementsByClassName(\"tower\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].addEventListener(\"click\", this.createElement, false);\r\n    }\r\n\r\n    towerElements2 = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements2.length; i++) {\r\n      towerElements2[i].addEventListener(\"click\", this.muteVolume, false);\r\n    }\r\n    startButton = document.getElementById(\"startButton\");\r\n    startButton.addEventListener(\"click\", this.startNewWave);\r\n\r\n    this.bulletController = new BulletController(this.creeps);\r\n\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-5-3.png\", 300, 500, 1000, 1)\r\n    // );\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-3-3.png\", 600, 500, 2000, 2)\r\n    // );\r\n\r\n    this.myMouse.register(\"mousedown\", this.downHandler);\r\n\r\n    // this.myMouse.register('mouseup', function(e, elapsedTime) {\r\n    //   mouse.isActive = false;\r\n    // });\r\n\r\n    this.myMouse.register(\"mousemove\", function (e, elapsedTime) {\r\n      if (mouse.isActive) {\r\n        const canvasPosition = canvas.getBoundingClientRect();\r\n        mouse.x = e.clientX - canvasPosition.left;\r\n        mouse.y = e.clientY - canvasPosition.top;\r\n        if (mouse.y < 200) {\r\n          mouse.y = 200;\r\n        }\r\n        this.renderCircle = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  processInput(elapsedTime) {\r\n    this.myKeyboard.update(elapsedTime);\r\n    this.myMouse.update(elapsedTime);\r\n  }\r\n\r\n  registerKey() {\r\n    let self = this;\r\n    let upgrade = localStorage[\"upgrade\"];\r\n    let sell = localStorage[\"sell\"];\r\n    let start = localStorage[\"start\"];\r\n\r\n    self.myKeyboard.register(upgrade, function (elapsedTime) {\r\n      self.upgrade(elapsedTime);\r\n    });\r\n\r\n    self.myKeyboard.register(sell, function (elapsedTime) {\r\n      self.sell(elapsedTime);\r\n    });\r\n\r\n    self.myKeyboard.register(start, function (elapsedTime) {\r\n      self.startNewWave(elapsedTime);\r\n    });\r\n\r\n    // self.myKeyboard.cleanAll();\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    if (GameState.life <= 0) {\r\n      GameState.cancelNextRequest = true;\r\n      // this.particlesSmoke.update(elapsedTime);\r\n      return;\r\n    }\r\n\r\n    particleSystem.update(elapsedTime);\r\n    let creepsLength = this.creeps.length;\r\n    for (let i = 0; i < creepsLength; i++) {\r\n      let creep = this.creeps[i];\r\n      if (creep) {\r\n        if (creep.player.reachRight() || creep.player.reachBottom()) {\r\n          this.creeps.splice(i, 1);\r\n          GameState.life--;\r\n          continue;\r\n        }\r\n        if (creep.health == 0) {\r\n          let x = creep.player.specs.center.x;\r\n          let y = creep.player.specs.center.y;\r\n          score += creep.maxHealth;\r\n          this.creeps.splice(i, 1);\r\n          creepDied(x, y);\r\n          totalCreepKilled++;\r\n          money += creep.maxHealth;\r\n          gameSound.playSound(\"die\");\r\n          let textEvent = new MovingEvents({\r\n            size: { x: 50, y: 50 }, // Size in pixels\r\n            center: { x: x, y: y },\r\n            rotation: 0,\r\n            moveRate: 125 / 1000, // Pixels per second\r\n            rotateRate: Math.PI / 1000, // Radians per second\r\n            continousSpeed: 50,\r\n            yDirection: -1,\r\n            xDirection: 0,\r\n          });\r\n          this.flyingScores.push(\r\n            new FlyingScore(creep.maxHealth, textEvent, true)\r\n          );\r\n          continue;\r\n        }\r\n        creep.update(elapsedTime);\r\n        let towersLength = this.towers.length;\r\n        for (let i = 0; i < towersLength; i++) {\r\n          let tower = this.towers[i];\r\n          // console.log(i+\"th index count is\" + tower.specs.delay)\r\n          if (typeof creep.flying == \"undefined\" && tower.specs.type == 3) {\r\n            console.log(\"flying\" + \" \" + i);\r\n          } else if (\r\n            typeof creep.flying != \"undefined\" &&\r\n            tower.specs.type < 3\r\n          ) {\r\n            console.log(\"flying\" + \" \" + i);\r\n          } else {\r\n            if (isColliding(creep, tower, tower.specs.radius)) {\r\n              tower.setTarget(\r\n                creep.player.specs.center.x,\r\n                creep.player.specs.center.y\r\n              );\r\n              if (tower.canShoot) {\r\n                let direction = {\r\n                  x: tower.specs.target.x - tower.specs.center.x,\r\n                  y: tower.specs.target.y - tower.specs.center.y,\r\n                };\r\n                direction = normalize(direction);\r\n                let bulletStartX = tower.specs.center.x;\r\n                let bulletStartY = tower.specs.center.y;\r\n\r\n                this.bulletController.addBullet(\r\n                  bulletStartX,\r\n                  bulletStartY,\r\n                  creep,\r\n                  tower.specs.power,\r\n                  tower.specs.type\r\n                );\r\n                gameSound.playSound(\"shoot\");\r\n              }\r\n            }\r\n          }\r\n\r\n          tower.update(elapsedTime);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.bulletController.update(elapsedTime);\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].update(elapsedTime);\r\n      if (!this.flyingScores[i].isVisible) {\r\n        this.flyingScores.splice(i, 1);\r\n        i--;\r\n        scorelength--;\r\n      }\r\n    }\r\n    if (this.enemyCreator) {\r\n      let newEnemy = this.enemyCreator.createEnemy(elapsedTime);\r\n      if (newEnemy) {\r\n        this.creeps.push(newEnemy);\r\n      }\r\n    }\r\n  }\r\n\r\n  renderScore() {\r\n    document.getElementById(\"currentScore\").innerHTML = score;\r\n    document.getElementById(\"lives\").innerHTML = GameState.life;\r\n    document.getElementById(\"money\").innerHTML = money;\r\n    let waveString = levels[this.level].wave + 1 + \"/\" + maxWave;\r\n    document.getElementById(\"wave\").innerHTML = waveString;\r\n    var startButton = document.getElementById(\"startButton\");\r\n    document.getElementById(\"level\").innerHTML = this.level + 1;\r\n    document.getElementById(\"killed\").innerHTML = totalCreepKilled;\r\n    // startButton.style.display = \"none\";\r\n    if (nextWave) {\r\n      startButton.style.display = \"block\";\r\n    }\r\n    let totalTowerValues = 0;\r\n    this.towers.forEach((tower) => {\r\n      totalTowerValues += tower.specs.cost;\r\n    });\r\n    document.getElementById(\"towerValue\").innerHTML = totalTowerValues;\r\n\r\n    if (moneyRequired > 0) {\r\n      document.getElementById(\"selectedInfo\").style.display = \"block\";\r\n      document.getElementById(\"moneyRequired\").innerHTML = moneyRequired;\r\n      document.getElementById(\"power\").innerHTML =\r\n        this.towerType[parseInt(towerTypeSelected) - 1];\r\n    } else {\r\n      document.getElementById(\"selectedInfo\").style.display = \"none\";\r\n      document.getElementById(\"moneyRequired\").innerHTML = \"\";\r\n      document.getElementById(\"power\").innerHTML = \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.fillStyle = \"green\";\r\n    context.fillRect(0, 0 + 200, 600, 800);\r\n    context.clearRect(50, 250, 500, 500);\r\n    context.clearRect(0, 400, 50, 200);\r\n    context.clearRect(550, 400, 50, 200);\r\n    context.clearRect(175, 200, 225, 50);\r\n    context.clearRect(175, 750, 225, 50);\r\n\r\n    if (mouse.isActive) {\r\n      let placementFlag = false;\r\n      for (let i = 0; i < rows; i++) {\r\n        for (let j = 0; j < cols; j++) {\r\n          let x1 = cellSet[i][j].x;\r\n          let y1 = cellSet[i][j].y;\r\n          if (\r\n            Math.floor((mouse.x - leftOffset) / cellWidth) == x1 &&\r\n            Math.floor((mouse.y - topOffset) / cellWidth) == y1\r\n          ) {\r\n            this.canPlace = true;\r\n            placementFlag = true;\r\n            context.beginPath();\r\n            context.rect(\r\n              x1 * cellWidth + leftOffset,\r\n              y1 * cellWidth + topOffset,\r\n              cellWidth,\r\n              cellWidth\r\n            );\r\n            context.stroke();\r\n          }\r\n        }\r\n      }\r\n      if (!placementFlag) {\r\n        this.canPlace = false;\r\n      }\r\n    }\r\n\r\n    // ctx.strokeRect(50, 50, 50, 50);\r\n\r\n    context.beginPath();\r\n    context.moveTo(0, 200);\r\n    context.lineTo(canvas.width, 200);\r\n    context.stroke();\r\n    if (renderCircle) {\r\n      drawTower(towerRadius);\r\n    }\r\n    this.renderScore();\r\n    this.creeps.forEach((creep) => {\r\n      creep.render();\r\n    });\r\n    let towersLength = this.towers.length;\r\n    for (let i = 0; i < towersLength; i++) {\r\n      let tower = this.towers[i];\r\n      tower.render();\r\n    }\r\n    if (towerClicked) {\r\n      drawRectangle({\r\n        x: towerClicked.specs.center.x - cellWidth / 2,\r\n        y: towerClicked.specs.center.y - cellWidth / 2,\r\n        width: 50,\r\n        height: 50,\r\n        fill: \"#ffd63f9e\",\r\n        stroke: \"red\",\r\n      });\r\n    }\r\n\r\n    this.bulletController.render();\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].render();\r\n    }\r\n    particleSystem.render();\r\n  }\r\n\r\n  run() {\r\n    let self = this;\r\n    gameSound = new Sound();\r\n    gameSound.loadAudio();\r\n    // this.sound.playSound(\"end\");\r\n    this.registerKey();\r\n    let lastTimeStamp = performance.now();\r\n    GameState.cancelNextRequest = false;\r\n\r\n    function gameLoop(time) {\r\n      if (\r\n        self.enemyCreator &&\r\n        self.enemyCreator.totalEnemy <= 0 &&\r\n        self.creeps.length == 0 &&\r\n        wave > 0\r\n      ) {\r\n        nextWave = true;\r\n        wave--;\r\n      } else {\r\n        self.processInput(time - lastTimeStamp);\r\n        self.update(time - lastTimeStamp);\r\n      }\r\n      // self.checkCanProceed();\r\n      if (!GameState.cancelNextRequest) {\r\n        requestAnimationFrame(gameLoop);\r\n        self.processInput(time - lastTimeStamp);\r\n        self.update(time - lastTimeStamp);\r\n        lastTimeStamp = time;\r\n        self.render();\r\n      } else {\r\n        if (score > 0) {\r\n          add(score);\r\n        }\r\n        context.font = \"70px roboto\";\r\n        context.textAlign = \"center\";\r\n        context.fillText(\"Game Over\", canvas.width / 2, canvas.height * 0.8);\r\n        // for (var i = 0; i < towerElements.length; i++) {\r\n        //   towerElements[i].removeEventListener(\r\n        //     \"click\",\r\n        //     this.createElement,\r\n        //     false\r\n        //   );\r\n        // }\r\n\r\n        // for (var i = 0; i < towerElements2.length; i++) {\r\n        //   towerElements2[i].removeEventListener(\r\n        //     \"click\",\r\n        //     this.muteVolume,\r\n        //     false\r\n        //   );\r\n        // }\r\n        // startButton.removeEventListener(\"click\", self.startNewWave);\r\n        setTimeout(() => {\r\n          self.manager.showScreen(\"mainmenu\");\r\n        }, 2000);\r\n      }\r\n      lastTimeStamp = time;\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n}\r\n"],"file":"game-play.dev.js"}