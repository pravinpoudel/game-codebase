{"version":3,"sources":["game-play.js"],"names":["GamePlay","manager","input","myKeyboard","lastTimeStamp","model","initialize","bind","run","playerModel","sound","particlesSmoke","registerKey","self","register","GameState","cancelNextRequest","showScreen","ParticleSystem","center","x","y","size","mean","stdev","speed","lifetime","left","right","top","bottom","image","assets","createEffect","playerEvent","MovingEvents","rotation","moveRate","rotateRate","Math","PI","continousSpeed","playerSpecs","spriteSheet","dir","spriteCount","spriteTime","gameModel","enemycontroller","EnemyController","elapsedTime","update","upgrade","localStorage","sell","start","cleanAll","moveForward","rotateLeft","rotateRight","life","document","getElementById","innerHTML","score","context","clearRect","canvas","width","height","renderScore","render","Sound","loadAudio","playSound","player","moveTop","moveDown","moveLeft","moveRight","performance","now","gameLoop","time","processInput","requestAnimationFrame"],"mappings":"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","sourcesContent":["class GamePlay {\r\n  constructor(manager, input) {\r\n    this.myKeyboard = input;\r\n    this.lastTimeStamp;\r\n    this.manager = manager;\r\n    this.model = null;\r\n    this.initialize = this.initialize.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.playerModel = null;\r\n    this.sound = null;\r\n    this.particlesSmoke = null;\r\n    this.registerKey = this.registerKey.bind(this);\r\n  }\r\n\r\n  initialize() {\r\n    let self = this;\r\n    self.myKeyboard.register(\"Escape\", function () {\r\n      GameState.cancelNextRequest = true;\r\n      self.manager.showScreen(\"mainmenu\");\r\n    });\r\n\r\n    this.particlesSmoke = new ParticleSystem({\r\n      center: { x: 300, y: 300 },\r\n      size: { mean: 10, stdev: 4 },\r\n      speed: { mean: 50, stdev: 25 },\r\n      lifetime: { mean: 4, stdev: 1 },\r\n      left: 100,\r\n      right: 100,\r\n      top: 100,\r\n      bottom: 100,\r\n      image: GameState.assets[\"fire\"],\r\n    });\r\n\r\n    this.particlesSmoke.createEffect();\r\n\r\n    //all the event to handle movement\r\n    this.playerEvent = new MovingEvents({\r\n      size: { x: 50, y: 50 }, // Size in pixels\r\n      center: { x: 50, y: 150 },\r\n      rotation: 0,\r\n      moveRate: 125 / 1000, // Pixels per second\r\n      rotateRate: Math.PI / 1000, // Radians per second\r\n      continousSpeed: 100,\r\n    });\r\n\r\n    // all the specs of the player sprite\r\n    let playerSpecs = {\r\n      spriteSheet: dir + \"assets/spritesheet-bird.png\",\r\n      spriteCount: 14,\r\n      spriteTime: [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],\r\n    };\r\n\r\n    //make a playerModel\r\n    self.playerModel = new gameModel(playerSpecs, this.playerEvent, true);\r\n    //register that event to event handler\r\n    self.enemycontroller = new EnemyController(self.playerModel);\r\n    // self.enemycontroller.createEnemy({\r\n    //   size: { x: 50, y: 50 }, // Size in pixels\r\n    //   center: { x: 50, y: 150 },\r\n    //   rotation: 0,\r\n    //   moveRate: 125 / 1000,\r\n    //   rotateRate: Math.PI / 1000,\r\n    //   continousSpeed: 100,\r\n    //   image: GameState.assets[\"bird\"],\r\n    //   spriteSheet: dir + \"assets/spritesheet-bird.png\",\r\n    //   spriteCount: 14,\r\n    //   spriteTime: [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],\r\n    // });\r\n  }\r\n\r\n  processInput(elapsedTime) {\r\n    this.myKeyboard.update(elapsedTime);\r\n  }\r\n\r\n  registerKey() {\r\n    let self = this;\r\n    let upgrade = localStorage[\"upgrade\"];\r\n    let sell = localStorage[\"sell\"];\r\n    let start = localStorage[\"start\"];\r\n    self.myKeyboard.cleanAll();\r\n    \r\n    self.myKeyboard.register(upgrade, self.playerEvent.moveForward);\r\n    self.myKeyboard.register(sell, self.playerEvent.rotateLeft);\r\n    self.myKeyboard.register(start, self.playerEvent.rotateRight);\r\n\r\n    // self.myKeyboard.register(\"3\", playerEvent.runRight);\r\n    // self.myKeyboard.register(\"1\", playerEvent.runLeft);\r\n    // self.myKeyboard.register(\"5\", playerEvent.runTop);\r\n    // self.myKeyboard.register(\"2\", playerEvent.runDown);\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    if (GameState.life <= 0) {\r\n      GameState.cancelNextRequest = true;\r\n      this.particlesSmoke.update(elapsedTime);\r\n      return;\r\n    }\r\n    this.playerModel.update(elapsedTime);\r\n    // this.enemycontroller.update(elapsedTime);\r\n    // model.update(elapsedTime);\r\n  }\r\n\r\n  renderScore() {\r\n    document.getElementById(\"currentScore\").innerHTML = score;\r\n    document.getElementById(\"lives\").innerHTML = GameState.life;\r\n  }\r\n\r\n  render() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    this.renderScore();\r\n    this.playerModel.render();\r\n  }\r\n\r\n  run() {\r\n    let self = this;\r\n    this.sound = new Sound();\r\n    this.sound.loadAudio();\r\n    this.sound.playSound(\"end\");\r\n    this.registerKey();\r\n\r\n    this.myKeyboard.register(\"ArrowUp\", self.playerModel.player.moveTop);\r\n    this.myKeyboard.register(\"ArrowDown\", self.playerModel.player.moveDown);\r\n    this.myKeyboard.register(\"ArrowLeft\", self.playerModel.player.moveLeft);\r\n    this.myKeyboard.register(\"ArrowRight\", self.playerModel.player.moveRight);\r\n    // console.log(self.playerModel.moveRight);\r\n\r\n    let lastTimeStamp = performance.now();\r\n    GameState.cancelNextRequest = false;\r\n\r\n    function gameLoop(time) {\r\n      self.processInput(time - lastTimeStamp);\r\n      self.update(time - lastTimeStamp);\r\n      lastTimeStamp = time;\r\n      self.render();\r\n      if (!GameState.cancelNextRequest) {\r\n        requestAnimationFrame(gameLoop);\r\n      }\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n}\r\n"],"file":"game-play.dev.js"}