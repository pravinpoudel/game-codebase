{"version":3,"sources":["game-play.js"],"names":["GamePlay","manager","input","myKeyboard","myMouse","lastTimeStamp","model","initialize","bind","run","playerModel","self","wallModel","renderCircle","sound","particlesSmoke","creeps","towers","registerKey","flyingScores","tower1","Image","src","render","firstTime","downHandler","enemyCreator","EnemyCreator","canPlace","myTower","getAttribute","selectedTower","console","log","mouse","isActive","e","elapsedTime","decision","canCreated","push","createTower","Math","floor","x","cellWidth","y","canvasPosition","canvas","getBoundingClientRect","clientX","left","clientY","top","findSelectedTower","towerElements","document","getElementsByClassName","i","length","style","display","myId","getElementById","Mouse","register","GameState","cancelNextRequest","showScreen","rows","row","j","cols","cellSet","addEventListener","createElement","towerElements2","muteVolume","bulletController","BulletController","update","upgrade","localStorage","sell","start","cleanAll","life","creepsLength","creep","reachRight","splice","health","player","specs","center","score","maxHealth","textEvent","MovingEvents","size","rotation","moveRate","rotateRate","PI","continousSpeed","yDirection","xDirection","FlyingScore","towersLength","tower","isColliding","setTarget","canShoot","direction","target","normalize","bulletStartX","bulletStartY","addBullet","power","scorelength","isVisible","newEnemy","createEnemy","innerHTML","money","wave","wavesDeno","wavesNeno","context","clearRect","width","height","fillStyle","fillRect","placementFlag","x1","y1","leftOffset","topOffset","beginPath","rect","stroke","moveTo","lineTo","drawTower","renderScore","forEach","Sound","loadAudio","performance","now","gameLoop","time","processInput","requestAnimationFrame"],"mappings":"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","sourcesContent":["class GamePlay {\r\n  constructor(manager, input) {\r\n    this.myKeyboard = input;\r\n    this.myMouse = null;\r\n    this.lastTimeStamp;\r\n    this.manager = manager;\r\n    this.model = null;\r\n    this.initialize = this.initialize.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.playerModel = null;\r\n    self.wallModel = null;\r\n    this.renderCircle = false;\r\n    this.sound = null;\r\n    this.particlesSmoke = null;\r\n    this.creeps = [\r\n      ];\r\n    this.towers = [];\r\n    this.registerKey = this.registerKey.bind(this);\r\n    this.flyingScores = [];\r\n    this.tower1 = new Image();\r\n    this.tower1.src = \"assets/turret/turret-5-3.png\";\r\n    this.render = this.render.bind(this);\r\n    this.firstTime = true;\r\n    this.downHandler = this.downHandler.bind(this);\r\n    this.enemyCreator = new EnemyCreator(10);\r\n    this.canPlace = false;\r\n  }\r\n\r\n  createElement() {\r\n    let myTower = this.getAttribute(\"data-myName\");\r\n    selectedTower = \"assets/turret/\" + myTower;\r\n    console.log(selectedTower);\r\n    renderCircle = true;\r\n    mouse.isActive = true;\r\n  }\r\n\r\n  downHandler(e, elapsedTime) {\r\n    if (mouse.isActive) {\r\n      firstTime = true;\r\n      mouse.isActive = false;\r\n      renderCircle = false;\r\n      console.log(selectedTower);\r\n      let decision= canCreated(this.towers)&& this.canPlace;\r\n      if(decision){\r\n      this.towers.push(createTower(selectedTower, Math.floor(mouse.x/cellWidth)*cellWidth, Math.floor((mouse.y-200)/cellWidth)*cellWidth +200, 1000, 1));\r\n      }\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n      \r\n    }\r\n    else{\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n      mouse.x = e.clientX - canvasPosition.left;\r\n      mouse.y = e.clientY - canvasPosition.top;\r\n      findSelectedTower(this.towers)\r\n    }\r\n  }\r\n\r\n  muteVolume(e) {\r\n    var towerElements = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].style.display = \"block\";\r\n    }\r\n    let myId = this.getAttribute(\"data-myId\");\r\n    document.getElementById(myId).style.display = \"none\";\r\n  }\r\n\r\n  initialize() {\r\n    let self = this;\r\n    this.myMouse = new Mouse();\r\n    self.myKeyboard.register(\"Escape\", function () {\r\n      GameState.cancelNextRequest = true;\r\n      self.manager.showScreen(\"mainmenu\");\r\n    });\r\n\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < cols; j++) {\r\n        row.push(\r\n          {\r\n            x: i,\r\n            y: j ,\r\n          },\r\n        );\r\n      }\r\n      cellSet.push(row);\r\n    }\r\n\r\n    var towerElements = document.getElementsByClassName(\"tower\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].addEventListener(\"click\", this.createElement, false);\r\n    }\r\n\r\n    var towerElements2 = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements2.length; i++) {\r\n      towerElements2[i].addEventListener(\"click\", this.muteVolume, false);\r\n    }\r\n\r\n    this.bulletController = new BulletController();\r\n\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-5-3.png\", 300, 500, 1000, 1)\r\n    // );\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-3-3.png\", 600, 500, 2000, 2)\r\n    // );\r\n\r\n    this.myMouse.register(\"mousedown\", this.downHandler);\r\n\r\n    // this.myMouse.register('mouseup', function(e, elapsedTime) {\r\n    //   mouse.isActive = false;\r\n    // });\r\n\r\n\r\n\r\n    this.myMouse.register(\"mousemove\", function (e, elapsedTime) {\r\n      if (mouse.isActive) {\r\n        const canvasPosition = canvas.getBoundingClientRect();\r\n        mouse.x = e.clientX - canvasPosition.left;\r\n        mouse.y = e.clientY - canvasPosition.top;\r\n        if (mouse.y < 200) {\r\n          mouse.y = 200;\r\n        }\r\n        this.renderCircle = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  processInput(elapsedTime) {\r\n    this.myKeyboard.update(elapsedTime);\r\n    this.myMouse.update(elapsedTime);\r\n  }\r\n\r\n  registerKey() {\r\n    let self = this;\r\n    let upgrade = localStorage[\"upgrade\"];\r\n    let sell = localStorage[\"sell\"];\r\n    let start = localStorage[\"start\"];\r\n    self.myKeyboard.cleanAll();\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    if (GameState.life <= 0) {\r\n      GameState.cancelNextRequest = true;\r\n      // this.particlesSmoke.update(elapsedTime);\r\n      return;\r\n    }\r\n    let creepsLength = this.creeps.length;\r\n    for (let i = 0; i < creepsLength; i++) {\r\n      let creep = this.creeps[i];\r\n      if (creep) {\r\n        if (creep.reachRight()) {\r\n          this.creeps.splice(i, 1);\r\n          GameState.life--;\r\n          console.log(GameState.life);\r\n          continue;\r\n        }\r\n        if (creep.health == 0) {\r\n          let x = creep.player.specs.center.x;\r\n          let y = creep.player.specs.center.y;\r\n          score += creep.maxHealth;\r\n          this.creeps.splice(i, 1);\r\n          let textEvent = new MovingEvents({\r\n            size: { x: 50, y: 50 }, // Size in pixels\r\n            center: { x: x, y: y },\r\n            rotation: 0,\r\n            moveRate: 125 / 1000, // Pixels per second\r\n            rotateRate: Math.PI / 1000, // Radians per second\r\n            continousSpeed: 50,\r\n            yDirection: -1,\r\n            xDirection: 0,\r\n          });\r\n          this.flyingScores.push(\r\n            new FlyingScore(creep.maxHealth, textEvent, true)\r\n          );\r\n          continue;\r\n        }\r\n        creep.update(elapsedTime);\r\n        let towersLength = this.towers.length;\r\n        for (let i = 0; i < towersLength; i++) {\r\n          let tower = this.towers[i];\r\n          if (isColliding(creep, tower, 100)) {\r\n            tower.setTarget(\r\n              creep.player.specs.center.x,\r\n              creep.player.specs.center.y\r\n            );\r\n            if (tower.canShoot) {\r\n              let direction = {\r\n                x: tower.specs.target.x - tower.specs.center.x,\r\n                y: tower.specs.target.y - tower.specs.center.y,\r\n              };\r\n              direction = normalize(direction);\r\n              let bulletStartX = tower.specs.center.x;\r\n              let bulletStartY = tower.specs.center.y;\r\n\r\n              this.bulletController.addBullet(\r\n                bulletStartX,\r\n                bulletStartY,\r\n                creep,\r\n                tower.specs.power\r\n              );\r\n            }\r\n          }\r\n\r\n          tower.update(elapsedTime);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.bulletController.update(elapsedTime);\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].update(elapsedTime);\r\n      if (!this.flyingScores[i].isVisible) {\r\n        this.flyingScores.splice(i, 1);\r\n        i--;\r\n        scorelength--;\r\n      }\r\n    }\r\n    let newEnemy = this.enemyCreator.createEnemy(elapsedTime);\r\n    if (newEnemy) {\r\n      this.creeps.push(newEnemy);\r\n    }\r\n  }\r\n\r\n  renderScore() {\r\n    document.getElementById(\"currentScore\").innerHTML = score;\r\n    document.getElementById(\"lives\").innerHTML = GameState.life;\r\n    document.getElementById(\"money\").innerHTML = money;\r\n    let wave = wavesDeno + \"/\" + wavesNeno;\r\n    document.getElementById(\"wave\").innerHTML = wave;\r\n  }\r\n  render() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.fillStyle = \"green\";\r\n    context.fillRect(0, 0+200, 600, 800);\r\n    context.clearRect(50, 250, 500, 500);\r\n    context.clearRect(0, 400, 50, 200);\r\n    context.clearRect(550, 400, 50, 200);\r\n\r\n    if (mouse.isActive) {\r\n      let placementFlag = false;\r\n      for (let i = 0; i < rows; i++) {\r\n        for (let j = 0; j < cols; j++) {\r\n          let x1 = cellSet[i][j].x;\r\n          let y1 = cellSet[i][j].y;\r\n          if (\r\n            Math.floor((mouse.x -leftOffset) / cellWidth) == x1 &&\r\n            Math.floor((mouse.y - topOffset) / cellWidth) == y1\r\n          ) {\r\n            this.canPlace = true;\r\n            placementFlag = true;\r\n            context.beginPath();\r\n            context.rect(\r\n              x1 * cellWidth + leftOffset,\r\n              y1 * cellWidth + topOffset,\r\n              cellWidth,\r\n              cellWidth\r\n            );\r\n            context.stroke();\r\n          }\r\n        }\r\n      }\r\n      if(!placementFlag){\r\n        this.canPlace = false;\r\n      }\r\n    }\r\n\r\n    // ctx.strokeRect(50, 50, 50, 50);\r\n\r\n    context.beginPath();\r\n    context.moveTo(0, 200);\r\n    context.lineTo(canvas.width, 200);\r\n    context.stroke();\r\n    if (renderCircle) {\r\n      drawTower(100);\r\n    }\r\n    this.renderScore();\r\n    this.creeps.forEach((creep) => {\r\n      creep.render();\r\n    });\r\n    let towersLength = this.towers.length;\r\n    for (let i = 0; i < towersLength; i++) {\r\n      let tower = this.towers[i];\r\n      tower.render();\r\n    }\r\n    this.bulletController.render();\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].render();\r\n    }\r\n  }\r\n\r\n  run() {\r\n    let self = this;\r\n    this.sound = new Sound();\r\n    this.sound.loadAudio();\r\n    // this.sound.playSound(\"end\");\r\n    this.registerKey();\r\n\r\n    let lastTimeStamp = performance.now();\r\n    GameState.cancelNextRequest = false;\r\n\r\n    function gameLoop(time) {\r\n      self.processInput(time - lastTimeStamp);\r\n      self.update(time - lastTimeStamp);\r\n      lastTimeStamp = time;\r\n      self.render();\r\n      if (!GameState.cancelNextRequest) {\r\n        requestAnimationFrame(gameLoop);\r\n      }\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n}\r\n"],"file":"game-play.dev.js"}