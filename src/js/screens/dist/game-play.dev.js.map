{"version":3,"sources":["game-play.js"],"names":["GamePlay","manager","input","myKeyboard","myMouse","lastTimeStamp","model","initialize","bind","run","playerModel","self","wallModel","renderCircle","sound","particlesSmoke","creeps","towers","registerKey","flyingScores","tower1","Image","src","render","firstTime","downHandler","enemyCreator","EnemyCreator","canPlace","upgrade","sell","elapsedTime","moneyRequired","Math","floor","towerClicked","specs","cost","money","lotalElapsedTime","undefined","console","log","delay","power","towerLength","length","i","isColliding2","center","x","cellWidth","y","splice","myTower","getAttribute","parseInt","selectedTower","mouse","isActive","e","decision","canCreated","push","createTower","canvasPosition","canvas","getBoundingClientRect","clientX","left","clientY","top","findSelectedTower","towerElements","document","getElementsByClassName","style","display","myId","getElementById","Mouse","register","GameState","cancelNextRequest","showScreen","rows","row","j","cols","cellSet","addEventListener","createElement","towerElements2","muteVolume","bulletController","BulletController","update","localStorage","start","life","creepsLength","creep","reachRight","health","player","score","maxHealth","textEvent","MovingEvents","size","rotation","moveRate","rotateRate","PI","continousSpeed","yDirection","xDirection","FlyingScore","towersLength","tower","isColliding","setTarget","canShoot","direction","target","normalize","bulletStartX","bulletStartY","addBullet","scorelength","isVisible","newEnemy","createEnemy","innerHTML","wave","wavesDeno","wavesNeno","context","clearRect","width","height","fillStyle","fillRect","placementFlag","x1","y1","leftOffset","topOffset","beginPath","rect","stroke","moveTo","lineTo","drawTower","renderScore","forEach","drawRectangle","fill","Sound","loadAudio","performance","now","gameLoop","time","processInput","requestAnimationFrame"],"mappings":"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","sourcesContent":["class GamePlay {\r\n  constructor(manager, input) {\r\n    this.myKeyboard = input;\r\n    this.myMouse = null;\r\n    this.lastTimeStamp;\r\n    this.manager = manager;\r\n    this.model = null;\r\n    this.initialize = this.initialize.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.playerModel = null;\r\n    self.wallModel = null;\r\n    this.renderCircle = false;\r\n    this.sound = null;\r\n    this.particlesSmoke = null;\r\n    this.creeps = [];\r\n    this.towers = [];\r\n    this.registerKey = this.registerKey.bind(this);\r\n    this.flyingScores = [];\r\n    this.tower1 = new Image();\r\n    this.tower1.src = \"assets/turret/turret-5-3.png\";\r\n    this.render = this.render.bind(this);\r\n    this.firstTime = true;\r\n    this.downHandler = this.downHandler.bind(this);\r\n    this.enemyCreator = new EnemyCreator(10);\r\n    this.canPlace = false;\r\n    this.upgrade = this.upgrade.bind(this);\r\n    this.sell = this.sell.bind(this);\r\n  }\r\n\r\n  upgrade(elapsedTime) {\r\n    let moneyRequired = Math.floor(0.5*towerClicked.specs.cost);\r\n    if(moneyRequired<=money){\r\n      if(towerClicked){\r\n        if(towerClicked.lotalElapsedTime == undefined){\r\n          towerClicked.lotalElapsedTime = 0;\r\n        }\r\n        else{\r\n          towerClicked.lotalElapsedTime += elapsedTime;\r\n          if(towerClicked.lotalElapsedTime >=500){    \r\n            console.log(\"upgraded\")\r\n            towerClicked.lotalElapsedTime -= 500;\r\n            towerClicked.delay = Math.floor(towerClicked.delay * 0.7);\r\n            towerClicked.specs.power = towerClicked.specs.power + 1;  \r\n            money -= moneyRequired;  \r\n          }\r\n        }\r\n      }  \r\n    }\r\n  }\r\n\r\n   sell() {\r\n     if(towerClicked){\r\n      let towerLength = this.towers.length;\r\n      for(let i=0; i<towerLength; i++){\r\n        if(isColliding2(this.towers[i].specs.center.x - cellWidth/2,this.towers[i].specs.center.y- cellWidth/2, cellWidth,towerClicked.specs.center.x - cellWidth/2, towerClicked.specs.center.y- cellWidth/2, cellWidth)){\r\n         money += Math.floor(0.7*towerClicked.specs.cost);\r\n         this.towers.splice(i, 1);\r\n         towerClicked = null;\r\n        }\r\n      }\r\n     }\r\n\r\n    }\r\n\r\n  createElement() {\r\n    let myTower = this.getAttribute(\"data-myName\");\r\n    moneyRequired = parseInt(this.getAttribute(\"data-cost\"));\r\n    selectedTower = \"assets/turret/\" + myTower;\r\n    if(moneyRequired<=money){\r\n      renderCircle = true;\r\n      mouse.isActive = true;  \r\n    }\r\n  }\r\n\r\n  downHandler(e, elapsedTime) {\r\n    if (mouse.isActive) {\r\n      firstTime = true;\r\n      mouse.isActive = false;\r\n      renderCircle = false;\r\n      let decision = canCreated(this.towers) && this.canPlace;\r\n      if (decision) {\r\n        this.towers.push(\r\n          createTower(\r\n            selectedTower,\r\n            Math.floor(mouse.x / cellWidth) * cellWidth,\r\n            Math.floor((mouse.y - 200) / cellWidth) * cellWidth + 200,\r\n            1000,\r\n            1,\r\n            moneyRequired\r\n          )\r\n        );\r\n        money = money- moneyRequired;\r\n        console.log(moneyRequired)\r\n      }\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n    } else {\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n      mouse.x = e.clientX - canvasPosition.left;\r\n      mouse.y = e.clientY - canvasPosition.top;\r\n      findSelectedTower(this.towers);\r\n    }\r\n  }\r\n\r\n  muteVolume(e) {\r\n    var towerElements = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].style.display = \"block\";\r\n    }\r\n    let myId = this.getAttribute(\"data-myId\");\r\n    document.getElementById(myId).style.display = \"none\";\r\n  }\r\n\r\n  initialize() {\r\n    let self = this;\r\n    this.myMouse = new Mouse();\r\n    self.myKeyboard.register(\"Escape\", function () {\r\n      GameState.cancelNextRequest = true;\r\n      self.manager.showScreen(\"mainmenu\");\r\n    });\r\n\r\n    self.myKeyboard.register(\"s\", function(elapsedTime){\r\n      self.sell(elapsedTime);\r\n    });\r\n\r\n    self.myKeyboard.register(\"u\", function(elapsedTime){\r\n      self.upgrade(elapsedTime);\r\n    });\r\n\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < cols; j++) {\r\n        row.push({\r\n          x: i,\r\n          y: j,\r\n        });\r\n      }\r\n      cellSet.push(row);\r\n    }\r\n\r\n    var towerElements = document.getElementsByClassName(\"tower\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].addEventListener(\"click\", this.createElement, false);\r\n    }\r\n\r\n    var towerElements2 = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements2.length; i++) {\r\n      towerElements2[i].addEventListener(\"click\", this.muteVolume, false);\r\n    }\r\n\r\n    this.bulletController = new BulletController();\r\n\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-5-3.png\", 300, 500, 1000, 1)\r\n    // );\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-3-3.png\", 600, 500, 2000, 2)\r\n    // );\r\n\r\n    this.myMouse.register(\"mousedown\", this.downHandler);\r\n\r\n    // this.myMouse.register('mouseup', function(e, elapsedTime) {\r\n    //   mouse.isActive = false;\r\n    // });\r\n\r\n    this.myMouse.register(\"mousemove\", function (e, elapsedTime) {\r\n      if (mouse.isActive) {\r\n        const canvasPosition = canvas.getBoundingClientRect();\r\n        mouse.x = e.clientX - canvasPosition.left;\r\n        mouse.y = e.clientY - canvasPosition.top;\r\n        if (mouse.y < 200) {\r\n          mouse.y = 200;\r\n        }\r\n        this.renderCircle = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  processInput(elapsedTime) {\r\n    this.myKeyboard.update(elapsedTime);\r\n    this.myMouse.update(elapsedTime);\r\n  }\r\n\r\n  registerKey() {\r\n    let self = this;\r\n    let upgrade = localStorage[\"upgrade\"];\r\n    let sell = localStorage[\"sell\"];\r\n    let start = localStorage[\"start\"];\r\n    // self.myKeyboard.cleanAll();\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    if (GameState.life <= 0) {\r\n      GameState.cancelNextRequest = true;\r\n      // this.particlesSmoke.update(elapsedTime);\r\n      return;\r\n    }\r\n    let creepsLength = this.creeps.length;\r\n    for (let i = 0; i < creepsLength; i++) {\r\n      let creep = this.creeps[i];\r\n      if (creep) {\r\n        if (creep.reachRight()) {\r\n          this.creeps.splice(i, 1);\r\n          GameState.life--;\r\n          console.log(GameState.life);\r\n          continue;\r\n        }\r\n        if (creep.health == 0) {\r\n          let x = creep.player.specs.center.x;\r\n          let y = creep.player.specs.center.y;\r\n          score += creep.maxHealth;\r\n          this.creeps.splice(i, 1);\r\n          let textEvent = new MovingEvents({\r\n            size: { x: 50, y: 50 }, // Size in pixels\r\n            center: { x: x, y: y },\r\n            rotation: 0,\r\n            moveRate: 125 / 1000, // Pixels per second\r\n            rotateRate: Math.PI / 1000, // Radians per second\r\n            continousSpeed: 50,\r\n            yDirection: -1,\r\n            xDirection: 0,\r\n          });\r\n          this.flyingScores.push(\r\n            new FlyingScore(creep.maxHealth, textEvent, true)\r\n          );\r\n          continue;\r\n        }\r\n        creep.update(elapsedTime);\r\n        let towersLength = this.towers.length;\r\n        for (let i = 0; i < towersLength; i++) {\r\n          let tower = this.towers[i];\r\n          if (isColliding(creep, tower, 100)) {\r\n            tower.setTarget(\r\n              creep.player.specs.center.x,\r\n              creep.player.specs.center.y\r\n            );\r\n            if (tower.canShoot) {\r\n              let direction = {\r\n                x: tower.specs.target.x - tower.specs.center.x,\r\n                y: tower.specs.target.y - tower.specs.center.y,\r\n              };\r\n              direction = normalize(direction);\r\n              let bulletStartX = tower.specs.center.x;\r\n              let bulletStartY = tower.specs.center.y;\r\n\r\n              this.bulletController.addBullet(\r\n                bulletStartX,\r\n                bulletStartY,\r\n                creep,\r\n                tower.specs.power\r\n              );\r\n            }\r\n          }\r\n\r\n          tower.update(elapsedTime);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.bulletController.update(elapsedTime);\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].update(elapsedTime);\r\n      if (!this.flyingScores[i].isVisible) {\r\n        this.flyingScores.splice(i, 1);\r\n        i--;\r\n        scorelength--;\r\n      }\r\n    }\r\n    let newEnemy = this.enemyCreator.createEnemy(elapsedTime);\r\n    if (newEnemy) {\r\n      this.creeps.push(newEnemy);\r\n    }\r\n  }\r\n\r\n  renderScore() {\r\n    document.getElementById(\"currentScore\").innerHTML = score;\r\n    document.getElementById(\"lives\").innerHTML = GameState.life;\r\n    document.getElementById(\"money\").innerHTML = money;\r\n    let wave = wavesDeno + \"/\" + wavesNeno;\r\n    document.getElementById(\"wave\").innerHTML = wave;\r\n  }\r\n\r\n  render() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.fillStyle = \"green\";\r\n    context.fillRect(0, 0 + 200, 600, 800);\r\n    context.clearRect(50, 250, 500, 500);\r\n    context.clearRect(0, 400, 50, 200);\r\n    context.clearRect(550, 400, 50, 200);\r\n\r\n    if (mouse.isActive) {\r\n      let placementFlag = false;\r\n      for (let i = 0; i < rows; i++) {\r\n        for (let j = 0; j < cols; j++) {\r\n          let x1 = cellSet[i][j].x;\r\n          let y1 = cellSet[i][j].y;\r\n          if (\r\n            Math.floor((mouse.x - leftOffset) / cellWidth) == x1 &&\r\n            Math.floor((mouse.y - topOffset) / cellWidth) == y1\r\n          ) {\r\n            this.canPlace = true;\r\n            placementFlag = true;\r\n            context.beginPath();\r\n            context.rect(\r\n              x1 * cellWidth + leftOffset,\r\n              y1 * cellWidth + topOffset,\r\n              cellWidth,\r\n              cellWidth\r\n            );\r\n            context.stroke();\r\n          }\r\n        }\r\n      }\r\n      if (!placementFlag) {\r\n        this.canPlace = false;\r\n      }\r\n    }\r\n\r\n    // ctx.strokeRect(50, 50, 50, 50);\r\n\r\n    context.beginPath();\r\n    context.moveTo(0, 200);\r\n    context.lineTo(canvas.width, 200);\r\n    context.stroke();\r\n    if (renderCircle) {\r\n      drawTower(100);\r\n    }\r\n    this.renderScore();\r\n    this.creeps.forEach((creep) => {\r\n      creep.render();\r\n    });\r\n    let towersLength = this.towers.length;\r\n    for (let i = 0; i < towersLength; i++) {\r\n      let tower = this.towers[i];\r\n      tower.render();\r\n    }\r\n    if (towerClicked) {\r\n      drawRectangle({\r\n        x: towerClicked.specs.center.x - cellWidth / 2,\r\n        y: towerClicked.specs.center.y - cellWidth / 2,\r\n        width: 50,\r\n        height: 50,\r\n        fill: \"#ffd63f9e\",\r\n        stroke: \"red\",\r\n      });\r\n    }\r\n\r\n    this.bulletController.render();\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].render();\r\n    }\r\n  }\r\n\r\n  run() {\r\n    let self = this;\r\n    this.sound = new Sound();\r\n    this.sound.loadAudio();\r\n    // this.sound.playSound(\"end\");\r\n    this.registerKey();\r\n\r\n    let lastTimeStamp = performance.now();\r\n    GameState.cancelNextRequest = false;\r\n\r\n    function gameLoop(time) {\r\n      self.processInput(time - lastTimeStamp);\r\n      self.update(time - lastTimeStamp);\r\n      lastTimeStamp = time;\r\n      self.render();\r\n      if (!GameState.cancelNextRequest) {\r\n        requestAnimationFrame(gameLoop);\r\n      }\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n}\r\n"],"file":"game-play.dev.js"}