{"version":3,"sources":["game-play.js"],"names":["GamePlay","manager","input","myKeyboard","cancelNextRequest","lastTimeStamp","model","initialize","bind","run","playerModel","self","register","showScreen","player","MovingObject","size","x","y","center","rotation","moveRate","rotateRate","Math","PI","playerSpecs","spriteSheet","spriteCount","spriteTime","ModelAnimation","moveForward","rotateLeft","rotateRight","elapsedTime","console","log","update","render","turnUp","turnDown","turnLeft","turnRight","performance","now","gameLoop","time","processInput","requestAnimationFrame"],"mappings":"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","sourcesContent":["class GamePlay {\r\n  constructor(manager, input) {\r\n    this.myKeyboard = input;\r\n    this.cancelNextRequest = false;\r\n    this.lastTimeStamp;\r\n    this.manager = manager;\r\n    this.model = null;\r\n    this.initialize = this.initialize.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.playerModel = null;\r\n  }\r\n\r\n  initialize() {\r\n    let self = this;\r\n    self.myKeyboard.register(\"Escape\", function () {\r\n      cancelNextRequest = true;\r\n      self.manager.showScreen(\"mainmenu\");\r\n    });\r\n\r\n    let player = new MovingObject({\r\n      size: { x: 50, y: 50 }, // Size in pixels\r\n      center: { x: 50, y: 150 },\r\n      rotation: 0,\r\n      moveRate: 125 / 1000, // Pixels per second\r\n      rotateRate: Math.PI / 1000, // Radians per second\r\n    });\r\n\r\n    let playerSpecs = {\r\n      spriteSheet: \"assets/spritesheet-bird.png\",\r\n      spriteCount: 14,\r\n      spriteTime: [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],\r\n    };\r\n\r\n    self.playerModel = new ModelAnimation(playerSpecs, player);\r\n    self.myKeyboard.register(\"w\", player.moveForward);\r\n    self.myKeyboard.register(\"a\", player.rotateLeft);\r\n    self.myKeyboard.register(\"d\", player.rotateRight);\r\n  }\r\n\r\n  processInput(elapsedTime) {\r\n    console.log(\"input pressed\");\r\n    self.myKeyboard.update(elapsedTime);\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    this.playerModel.update(elapsedTime);\r\n    // model.update(elapsedTime);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"i am rendering\");\r\n    this.playerModel.render();\r\n    //draw things\r\n    // graphics.clear();\r\n    // renderGame(model, graphics); // draw background, obstacles, scene and player here\r\n  }\r\n\r\n  run() {\r\n    let self = this;\r\n    this.myKeyboard.register(\"ArrowUp\", self.playerModel.turnUp);\r\n    this.myKeyboard.register(\"ArrowDown\", self.playerModel.turnDown);\r\n    this.myKeyboard.register(\"ArrowLeft\", self.playerModel.turnLeft);\r\n    this.myKeyboard.register(\"ArrowRight\", self.playerModel.turnRight);\r\n\r\n    lastTimeStamp = performance.now();\r\n    this.cancelNextRequest = false;\r\n\r\n    function gameLoop(time) {\r\n      processInput(time - lastTimeStamp);\r\n      update(time - lastTimeStamp);\r\n      lastTimeStamp = time;\r\n      render();\r\n      if (!cancelNextRequest) {\r\n        requestAnimationFrame(gameLoop);\r\n      }\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n}\r\n"],"file":"game-play.dev.js"}