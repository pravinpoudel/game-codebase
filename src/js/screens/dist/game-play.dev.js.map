{"version":3,"sources":["game-play.js"],"names":["GamePlay","manager","input","myKeyboard","myMouse","lastTimeStamp","model","initialize","bind","run","playerModel","self","wallModel","renderCircle","sound","particlesSmoke","creeps","towers","registerKey","flyingScores","tower1","Image","src","render","firstTime","downHandler","enemyCreator","EnemyCreator","creepGoing","canPlace","upgrade","sell","elapsedTime","moneyRequired","Math","floor","towerClicked","specs","cost","money","totalElapsedTime","undefined","console","log","upgradeCount","delay","power","gameSound","playSound","towerLength","length","i","isColliding2","center","x","cellWidth","y","splice","selectedTower","getAttribute","parseInt","towerTypeSelected","mouse","isActive","e","decision","canCreated","push","createTower","GameState","assets","canvasPosition","canvas","getBoundingClientRect","clientX","left","clientY","top","findSelectedTower","towerElements","document","getElementsByClassName","style","display","myId","getElementById","stopAllSound","unMuteSound","Mouse","register","cancelNextRequest","showScreen","rows","row","j","cols","cellSet","addEventListener","createElement","towerElements2","muteVolume","bulletController","BulletController","update","localStorage","start","life","creepsLength","creep","player","reachRight","reachBottom","health","score","maxHealth","textEvent","MovingEvents","size","rotation","moveRate","rotateRate","PI","continousSpeed","yDirection","xDirection","FlyingScore","towersLength","tower","flying","type","isColliding","setTarget","canShoot","direction","target","normalize","bulletStartX","bulletStartY","addBullet","scorelength","isVisible","newEnemy","createEnemy","innerHTML","wave","wavesDeno","wavesNeno","context","clearRect","width","height","fillStyle","fillRect","placementFlag","x1","y1","leftOffset","topOffset","beginPath","rect","stroke","moveTo","lineTo","drawTower","renderScore","forEach","drawRectangle","fill","Sound","loadAudio","performance","now","gameLoop","time","processInput","requestAnimationFrame"],"mappings":";;;;;;;;IAAMA,Q;;;AACJ,oBAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAAA;;AAC1B,SAAKC,UAAL,GAAkBD,KAAlB;AACA,SAAKE,OAAL,GAAe,IAAf;AACA,SAAKC,aAAL;AACA,SAAKJ,OAAL,GAAeA,OAAf;AACA,SAAKK,KAAL,GAAa,IAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,GAAL,GAAW,KAAKA,GAAL,CAASD,IAAT,CAAc,IAAd,CAAX;AACA,SAAKE,WAAL,GAAmB,IAAnB;AACAC,IAAAA,IAAI,CAACC,SAAL,GAAiB,IAAjB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBV,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKW,YAAL,GAAoB,EAApB;AACA,SAAKC,MAAL,GAAc,IAAIC,KAAJ,EAAd;AACA,SAAKD,MAAL,CAAYE,GAAZ,GAAkB,8BAAlB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYf,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKgB,SAAL,GAAiB,IAAjB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBjB,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKkB,YAAL,GAAoB,IAAIC,YAAJ,CAAiB,EAAjB,EAAqBC,UAArB,EAAiC,CAAjC,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAatB,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKuB,IAAL,GAAY,KAAKA,IAAL,CAAUvB,IAAV,CAAe,IAAf,CAAZ;AACD;;;;4BAEOwB,W,EAAa;AACnB,UAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAW,MAAMC,YAAY,CAACC,KAAb,CAAmBC,IAApC,CAApB;;AACA,UAAIL,aAAa,IAAIM,KAArB,EAA4B;AAC1B,YAAIH,YAAJ,EAAkB;AAChB,cAAIA,YAAY,CAACI,gBAAb,IAAiCC,SAArC,EAAgD;AAC9CL,YAAAA,YAAY,CAACI,gBAAb,GAAgC,CAAhC;AACD,WAFD,MAEO;AACLJ,YAAAA,YAAY,CAACI,gBAAb,IAAiCR,WAAjC;;AACA,gBAAII,YAAY,CAACI,gBAAb,IAAiC,GAArC,EAA0C;AACxCE,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAP,cAAAA,YAAY,CAACI,gBAAb,IAAiC,GAAjC;;AACA,kBAAI,CAACJ,YAAY,CAACQ,YAAlB,EAAgC;AAC9BR,gBAAAA,YAAY,CAACQ,YAAb,GAA4B,CAA5B;AACD,eAFD,MAEO;AACL,oBAAIR,YAAY,CAACQ,YAAb,IAA6B,CAAjC,EAAoC;AAClC;AACD,iBAFD,MAEO;AACLR,kBAAAA,YAAY,CAACQ,YAAb,GAA4BR,YAAY,CAACQ,YAAb,GAA4B,CAAxD;AACAR,kBAAAA,YAAY,CAACS,KAAb,GAAqBX,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACS,KAAb,GAAqB,GAAhC,CAArB;AACAT,kBAAAA,YAAY,CAACC,KAAb,CAAmBS,KAAnB,GAA2BV,YAAY,CAACC,KAAb,CAAmBS,KAAnB,GAA2B,CAAtD;AACAP,kBAAAA,KAAK,IAAIN,aAAT;AACAc,kBAAAA,SAAS,CAACC,SAAV,CAAoB,KAApB;AACD;AACF;AACF;AACF;AACF;AACF;AACF;;;2BAEM;AACL,UAAIZ,YAAJ,EAAkB;AAChB,YAAIa,WAAW,GAAG,KAAKhC,MAAL,CAAYiC,MAA9B;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;AACpC,cACEC,YAAY,CACV,KAAKnC,MAAL,CAAYkC,CAAZ,EAAed,KAAf,CAAqBgB,MAArB,CAA4BC,CAA5B,GAAgCC,SAAS,GAAG,CADlC,EAEV,KAAKtC,MAAL,CAAYkC,CAAZ,EAAed,KAAf,CAAqBgB,MAArB,CAA4BG,CAA5B,GAAgCD,SAAS,GAAG,CAFlC,EAGVA,SAHU,EAIVnB,YAAY,CAACC,KAAb,CAAmBgB,MAAnB,CAA0BC,CAA1B,GAA8BC,SAAS,GAAG,CAJhC,EAKVnB,YAAY,CAACC,KAAb,CAAmBgB,MAAnB,CAA0BG,CAA1B,GAA8BD,SAAS,GAAG,CALhC,EAMVA,SANU,CADd,EASE;AACAhB,YAAAA,KAAK,IAAIL,IAAI,CAACC,KAAL,CAAW,MAAMC,YAAY,CAACC,KAAb,CAAmBC,IAApC,CAAT;AACA,iBAAKrB,MAAL,CAAYwC,MAAZ,CAAmBN,CAAnB,EAAsB,CAAtB;AACAJ,YAAAA,SAAS,CAACC,SAAV,CAAoB,KAApB;AACAZ,YAAAA,YAAY,GAAG,IAAf;AACD;AACF;AACF;AACF;;;oCAEe;AACdsB,MAAAA,aAAa,GAAG,KAAKC,YAAL,CAAkB,aAAlB,CAAhB;AACA1B,MAAAA,aAAa,GAAG2B,QAAQ,CAAC,KAAKD,YAAL,CAAkB,WAAlB,CAAD,CAAxB;AACAE,MAAAA,iBAAiB,GAAGD,QAAQ,CAAC,KAAKD,YAAL,CAAkB,WAAlB,CAAD,CAA5B;;AACA,UAAI1B,aAAa,IAAIM,KAArB,EAA4B;AAC1B1B,QAAAA,YAAY,GAAG,IAAf;AACAiD,QAAAA,KAAK,CAACC,QAAN,GAAiB,IAAjB;AACD;AACF;;;gCAEWC,C,EAAGhC,W,EAAa;AAC1B,UAAI8B,KAAK,CAACC,QAAV,EAAoB;AAClBvC,QAAAA,SAAS,GAAG,IAAZ;AACAsC,QAAAA,KAAK,CAACC,QAAN,GAAiB,KAAjB;AACAlD,QAAAA,YAAY,GAAG,KAAf;AACA,YAAIoD,QAAQ,GAAGC,UAAU,CAAC,KAAKjD,MAAN,CAAV,IAA2B,KAAKY,QAA/C;;AACA,YAAIoC,QAAJ,EAAc;AACZ,eAAKhD,MAAL,CAAYkD,IAAZ,CACEC,WAAW,CACTC,SAAS,CAACC,MAAV,CAAiBZ,aAAjB,CADS,EAETxB,IAAI,CAACC,KAAL,CAAW2B,KAAK,CAACR,CAAN,GAAUC,SAArB,IAAkCA,SAFzB,EAGTrB,IAAI,CAACC,KAAL,CAAW,CAAC2B,KAAK,CAACN,CAAN,GAAU,GAAX,IAAkBD,SAA7B,IAA0CA,SAA1C,GAAsD,GAH7C,EAIT,IAJS,EAKT,CALS,EAMTtB,aANS,EAOT4B,iBAPS,CADb;AAWAnB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,MAAjB;AACAsB,UAAAA,KAAK,GAAGA,KAAK,GAAGN,aAAhB;AACAA,UAAAA,aAAa,GAAG,CAAhB;AACA4B,UAAAA,iBAAiB,GAAG,CAApB;AACAd,UAAAA,SAAS,CAACC,SAAV,CAAoB,KAApB;AACD;;AACD,YAAMuB,cAAc,GAAGC,MAAM,CAACC,qBAAP,EAAvB;AACD,OAxBD,MAwBO;AACL,YAAMF,eAAc,GAAGC,MAAM,CAACC,qBAAP,EAAvB;;AACAX,QAAAA,KAAK,CAACR,CAAN,GAAUU,CAAC,CAACU,OAAF,GAAYH,eAAc,CAACI,IAArC;AACAb,QAAAA,KAAK,CAACN,CAAN,GAAUQ,CAAC,CAACY,OAAF,GAAYL,eAAc,CAACM,GAArC;AACAC,QAAAA,iBAAiB,CAAC,KAAK7D,MAAN,CAAjB;AACD;AACF;;;+BAEU+C,C,EAAG;AACZ,UAAIe,aAAa,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAApB;;AACA,WAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,aAAa,CAAC7B,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC7C4B,QAAAA,aAAa,CAAC5B,CAAD,CAAb,CAAiB+B,KAAjB,CAAuBC,OAAvB,GAAiC,OAAjC;AACD;;AACD,UAAIC,IAAI,GAAG,KAAKzB,YAAL,CAAkB,WAAlB,CAAX;AACAqB,MAAAA,QAAQ,CAACK,cAAT,CAAwBD,IAAxB,EAA8BF,KAA9B,CAAoCC,OAApC,GAA8C,MAA9C;;AACA,UAAGC,IAAI,IAAI,YAAX,EAAwB;AACtBrC,QAAAA,SAAS,CAACuC,YAAV;AACD;;AACD,UAAGF,IAAI,IAAI,cAAX,EAA0B;AACxBrC,QAAAA,SAAS,CAACwC,WAAV;AACD;AACF;;;iCAEY;AACX,UAAI5E,IAAI,GAAG,IAAX;AACA,WAAKP,OAAL,GAAe,IAAIoF,KAAJ,EAAf;AACA7E,MAAAA,IAAI,CAACR,UAAL,CAAgBsF,QAAhB,CAAyB,QAAzB,EAAmC,YAAY;AAC7CpB,QAAAA,SAAS,CAACqB,iBAAV,GAA8B,IAA9B;AACA/E,QAAAA,IAAI,CAACV,OAAL,CAAa0F,UAAb,CAAwB,UAAxB;AACD,OAHD;;AAKA,WAAK,IAAIxC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGyC,IAApB,EAA0BzC,EAAC,EAA3B,EAA+B;AAC7B,YAAI0C,GAAG,GAAG,EAAV;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAApB,EAA0BD,CAAC,EAA3B,EAA+B;AAC7BD,UAAAA,GAAG,CAAC1B,IAAJ,CAAS;AACPb,YAAAA,CAAC,EAAEH,EADI;AAEPK,YAAAA,CAAC,EAAEsC;AAFI,WAAT;AAID;;AACDE,QAAAA,OAAO,CAAC7B,IAAR,CAAa0B,GAAb;AACD;;AAED,UAAId,aAAa,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAApB;;AACA,WAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,aAAa,CAAC7B,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC7C4B,QAAAA,aAAa,CAAC5B,CAAD,CAAb,CAAiB8C,gBAAjB,CAAkC,OAAlC,EAA2C,KAAKC,aAAhD,EAA+D,KAA/D;AACD;;AAED,UAAIC,cAAc,GAAGnB,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAArB;;AACA,WAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgD,cAAc,CAACjD,MAAnC,EAA2CC,CAAC,EAA5C,EAAgD;AAC9CgD,QAAAA,cAAc,CAAChD,CAAD,CAAd,CAAkB8C,gBAAlB,CAAmC,OAAnC,EAA4C,KAAKG,UAAjD,EAA6D,KAA7D;AACD;;AAED,WAAKC,gBAAL,GAAwB,IAAIC,gBAAJ,CAAqB,KAAKtF,MAA1B,CAAxB,CA7BW,CA+BX;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAKZ,OAAL,CAAaqF,QAAb,CAAsB,WAAtB,EAAmC,KAAKhE,WAAxC,EAtCW,CAwCX;AACA;AACA;;AAEA,WAAKrB,OAAL,CAAaqF,QAAb,CAAsB,WAAtB,EAAmC,UAAUzB,CAAV,EAAahC,WAAb,EAA0B;AAC3D,YAAI8B,KAAK,CAACC,QAAV,EAAoB;AAClB,cAAMQ,cAAc,GAAGC,MAAM,CAACC,qBAAP,EAAvB;AACAX,UAAAA,KAAK,CAACR,CAAN,GAAUU,CAAC,CAACU,OAAF,GAAYH,cAAc,CAACI,IAArC;AACAb,UAAAA,KAAK,CAACN,CAAN,GAAUQ,CAAC,CAACY,OAAF,GAAYL,cAAc,CAACM,GAArC;;AACA,cAAIf,KAAK,CAACN,CAAN,GAAU,GAAd,EAAmB;AACjBM,YAAAA,KAAK,CAACN,CAAN,GAAU,GAAV;AACD;;AACD,eAAK3C,YAAL,GAAoB,IAApB;AACD;AACF,OAVD;AAWD;;;iCAEYmB,W,EAAa;AACxB,WAAK7B,UAAL,CAAgBoG,MAAhB,CAAuBvE,WAAvB;AACA,WAAK5B,OAAL,CAAamG,MAAb,CAAoBvE,WAApB;AACD;;;kCAEa;AACZ,UAAIrB,IAAI,GAAG,IAAX;AACA,UAAImB,OAAO,GAAG0E,YAAY,CAAC,SAAD,CAA1B;AACA9D,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACA,UAAIC,IAAI,GAAGyE,YAAY,CAAC,MAAD,CAAvB;AACA,UAAIC,KAAK,GAAGD,YAAY,CAAC,OAAD,CAAxB;AAEA7F,MAAAA,IAAI,CAACR,UAAL,CAAgBsF,QAAhB,CAAyB3D,OAAzB,EAAkC,UAAUE,WAAV,EAAuB;AACvDrB,QAAAA,IAAI,CAACmB,OAAL,CAAaE,WAAb;AACD,OAFD;AAIArB,MAAAA,IAAI,CAACR,UAAL,CAAgBsF,QAAhB,CAAyB1D,IAAzB,EAA+B,UAAUC,WAAV,EAAuB;AACpDrB,QAAAA,IAAI,CAACoB,IAAL,CAAUC,WAAV;AACD,OAFD,EAXY,CAeZ;AACD;;;2BAEMA,W,EAAa;AAClB,UAAIqC,SAAS,CAACqC,IAAV,IAAkB,CAAtB,EAAyB;AACvBrC,QAAAA,SAAS,CAACqB,iBAAV,GAA8B,IAA9B,CADuB,CAEvB;;AACA;AACD;;AACD,UAAIiB,YAAY,GAAG,KAAK3F,MAAL,CAAYkC,MAA/B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwD,YAApB,EAAkCxD,CAAC,EAAnC,EAAuC;AACrC,YAAIyD,KAAK,GAAG,KAAK5F,MAAL,CAAYmC,CAAZ,CAAZ;;AACA,YAAIyD,KAAJ,EAAW;AACT,cAAIA,KAAK,CAACC,MAAN,CAAaC,UAAb,MAA6BF,KAAK,CAACC,MAAN,CAAaE,WAAb,EAAjC,EAA6D;AAC3D,iBAAK/F,MAAL,CAAYyC,MAAZ,CAAmBN,CAAnB,EAAsB,CAAtB;AACAkB,YAAAA,SAAS,CAACqC,IAAV;AACAhE,YAAAA,OAAO,CAACC,GAAR,CAAY0B,SAAS,CAACqC,IAAtB;AACA;AACD;;AACD,cAAIE,KAAK,CAACI,MAAN,IAAgB,CAApB,EAAuB;AACrB,gBAAI1D,CAAC,GAAGsD,KAAK,CAACC,MAAN,CAAaxE,KAAb,CAAmBgB,MAAnB,CAA0BC,CAAlC;AACA,gBAAIE,CAAC,GAAGoD,KAAK,CAACC,MAAN,CAAaxE,KAAb,CAAmBgB,MAAnB,CAA0BG,CAAlC;AACAyD,YAAAA,KAAK,IAAIL,KAAK,CAACM,SAAf;AACA,iBAAKlG,MAAL,CAAYyC,MAAZ,CAAmBN,CAAnB,EAAsB,CAAtB;AACAJ,YAAAA,SAAS,CAACC,SAAV,CAAoB,KAApB;AACA,gBAAImE,SAAS,GAAG,IAAIC,YAAJ,CAAiB;AAC/BC,cAAAA,IAAI,EAAE;AAAE/D,gBAAAA,CAAC,EAAE,EAAL;AAASE,gBAAAA,CAAC,EAAE;AAAZ,eADyB;AACP;AACxBH,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,CAAC,EAAEA,CAAL;AAAQE,gBAAAA,CAAC,EAAEA;AAAX,eAFuB;AAG/B8D,cAAAA,QAAQ,EAAE,CAHqB;AAI/BC,cAAAA,QAAQ,EAAE,MAAM,IAJe;AAIT;AACtBC,cAAAA,UAAU,EAAEtF,IAAI,CAACuF,EAAL,GAAU,IALS;AAKH;AAC5BC,cAAAA,cAAc,EAAE,EANe;AAO/BC,cAAAA,UAAU,EAAE,CAAC,CAPkB;AAQ/BC,cAAAA,UAAU,EAAE;AARmB,aAAjB,CAAhB;AAUA,iBAAKzG,YAAL,CAAkBgD,IAAlB,CACE,IAAI0D,WAAJ,CAAgBjB,KAAK,CAACM,SAAtB,EAAiCC,SAAjC,EAA4C,IAA5C,CADF;AAGA;AACD;;AACDP,UAAAA,KAAK,CAACL,MAAN,CAAavE,WAAb;AACA,cAAI8F,YAAY,GAAG,KAAK7G,MAAL,CAAYiC,MAA/B;;AACA,eAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG2E,YAApB,EAAkC3E,GAAC,EAAnC,EAAuC;AACrC,gBAAI4E,KAAK,GAAG,KAAK9G,MAAL,CAAYkC,GAAZ,CAAZ;;AACA,gBAAI,OAAOyD,KAAK,CAACoB,MAAb,IAAwB,WAAzB,IAAyCD,KAAK,CAAC1F,KAAN,CAAY4F,IAAZ,IAAoB,CAAhE,EAAkE;AAChEvF,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,GAAX,GAAiBQ,GAA7B;AACD,aAFD,MAIK,IAAI,OAAOyD,KAAK,CAACoB,MAAb,IAAwB,WAAzB,IAAyCD,KAAK,CAAC1F,KAAN,CAAY4F,IAAZ,GAAmB,CAA/D,EAAiE;AACpEvF,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,GAAX,GAAiBQ,GAA7B;AACD,aAFI,MAID;AACF,kBAAI+E,WAAW,CAACtB,KAAD,EAAQmB,KAAR,EAAe,GAAf,CAAf,EAAoC;AAClCA,gBAAAA,KAAK,CAACI,SAAN,CACEvB,KAAK,CAACC,MAAN,CAAaxE,KAAb,CAAmBgB,MAAnB,CAA0BC,CAD5B,EAEEsD,KAAK,CAACC,MAAN,CAAaxE,KAAb,CAAmBgB,MAAnB,CAA0BG,CAF5B;;AAIA,oBAAIuE,KAAK,CAACK,QAAV,EAAoB;AAClB,sBAAIC,SAAS,GAAG;AACd/E,oBAAAA,CAAC,EAAEyE,KAAK,CAAC1F,KAAN,CAAYiG,MAAZ,CAAmBhF,CAAnB,GAAuByE,KAAK,CAAC1F,KAAN,CAAYgB,MAAZ,CAAmBC,CAD/B;AAEdE,oBAAAA,CAAC,EAAEuE,KAAK,CAAC1F,KAAN,CAAYiG,MAAZ,CAAmB9E,CAAnB,GAAuBuE,KAAK,CAAC1F,KAAN,CAAYgB,MAAZ,CAAmBG;AAF/B,mBAAhB;AAIA6E,kBAAAA,SAAS,GAAGE,SAAS,CAACF,SAAD,CAArB;AACA,sBAAIG,YAAY,GAAGT,KAAK,CAAC1F,KAAN,CAAYgB,MAAZ,CAAmBC,CAAtC;AACA,sBAAImF,YAAY,GAAGV,KAAK,CAAC1F,KAAN,CAAYgB,MAAZ,CAAmBG,CAAtC;AAEA,uBAAK6C,gBAAL,CAAsBqC,SAAtB,CACEF,YADF,EAEEC,YAFF,EAGE7B,KAHF,EAIEmB,KAAK,CAAC1F,KAAN,CAAYS,KAJd,EAKEiF,KAAK,CAAC1F,KAAN,CAAY4F,IALd;AAOAlF,kBAAAA,SAAS,CAACC,SAAV,CAAoB,OAApB;AACD;AACF;AACF;;AAGD+E,YAAAA,KAAK,CAACxB,MAAN,CAAavE,WAAb;AACD;AACF;AACF;;AAED,WAAKqE,gBAAL,CAAsBE,MAAtB,CAA6BvE,WAA7B;AACA,UAAI2G,WAAW,GAAG,KAAKxH,YAAL,CAAkB+B,MAApC;;AACA,WAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGwF,WAApB,EAAiCxF,GAAC,EAAlC,EAAsC;AACpC,aAAKhC,YAAL,CAAkBgC,GAAlB,EAAqBoD,MAArB,CAA4BvE,WAA5B;;AACA,YAAI,CAAC,KAAKb,YAAL,CAAkBgC,GAAlB,EAAqByF,SAA1B,EAAqC;AACnC,eAAKzH,YAAL,CAAkBsC,MAAlB,CAAyBN,GAAzB,EAA4B,CAA5B;AACAA,UAAAA,GAAC;AACDwF,UAAAA,WAAW;AACZ;AACF;;AACD,UAAIE,QAAQ,GAAG,KAAKnH,YAAL,CAAkBoH,WAAlB,CAA8B9G,WAA9B,CAAf;;AACA,UAAI6G,QAAJ,EAAc;AACZ,aAAK7H,MAAL,CAAYmD,IAAZ,CAAiB0E,QAAjB;AACD;AACF;;;kCAEa;AACZ7D,MAAAA,QAAQ,CAACK,cAAT,CAAwB,cAAxB,EAAwC0D,SAAxC,GAAoD9B,KAApD;AACAjC,MAAAA,QAAQ,CAACK,cAAT,CAAwB,OAAxB,EAAiC0D,SAAjC,GAA6C1E,SAAS,CAACqC,IAAvD;AACA1B,MAAAA,QAAQ,CAACK,cAAT,CAAwB,OAAxB,EAAiC0D,SAAjC,GAA6CxG,KAA7C;AACA,UAAIyG,IAAI,GAAGC,SAAS,GAAG,GAAZ,GAAkBC,SAA7B;AACAlE,MAAAA,QAAQ,CAACK,cAAT,CAAwB,MAAxB,EAAgC0D,SAAhC,GAA4CC,IAA5C;;AACA,UAAI/G,aAAa,GAAG,CAApB,EAAuB;AACrB+C,QAAAA,QAAQ,CAACK,cAAT,CAAwB,cAAxB,EAAwCH,KAAxC,CAA8CC,OAA9C,GAAwD,OAAxD;AACAH,QAAAA,QAAQ,CAACK,cAAT,CAAwB,eAAxB,EAAyC0D,SAAzC,GAAqD9G,aAArD;AACA+C,QAAAA,QAAQ,CAACK,cAAT,CAAwB,OAAxB,EAAiC0D,SAAjC,GAA6ClF,iBAA7C;AACD,OAJD,MAKI;AACFmB,QAAAA,QAAQ,CAACK,cAAT,CAAwB,cAAxB,EAAwCH,KAAxC,CAA8CC,OAA9C,GAAwD,MAAxD;AACAH,QAAAA,QAAQ,CAACK,cAAT,CAAwB,OAAxB,EAAiC0D,SAAjC,GAA6C,EAA7C;AACA/D,QAAAA,QAAQ,CAACK,cAAT,CAAwB,OAAxB,EAAiC0D,SAAjC,GAA6C,EAA7C;AACD;AAEF;;;6BAEQ;AACPI,MAAAA,OAAO,CAACC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB5E,MAAM,CAAC6E,KAA/B,EAAsC7E,MAAM,CAAC8E,MAA7C;AACAH,MAAAA,OAAO,CAACI,SAAR,GAAoB,OAApB;AACAJ,MAAAA,OAAO,CAACK,QAAR,CAAiB,CAAjB,EAAoB,IAAI,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC;AACAL,MAAAA,OAAO,CAACC,SAAR,CAAkB,EAAlB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC;;AAEA,UAAIxH,UAAU,IAAI,MAAlB,EAA0B;AACxBuH,QAAAA,OAAO,CAACC,SAAR,CAAkB,CAAlB,EAAqB,GAArB,EAA0B,EAA1B,EAA8B,GAA9B;AACAD,QAAAA,OAAO,CAACC,SAAR,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,EAA5B,EAAgC,GAAhC;AACD;;AAED,UAAGxH,UAAU,IAAI,KAAjB,EAAuB;AACrBuH,QAAAA,OAAO,CAACC,SAAR,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC;AACAD,QAAAA,OAAO,CAACC,SAAR,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC;AACD;;AAED,UAAItF,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAI0F,aAAa,GAAG,KAApB;;AACA,aAAK,IAAItG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyC,IAApB,EAA0BzC,CAAC,EAA3B,EAA+B;AAC7B,eAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAApB,EAA0BD,CAAC,EAA3B,EAA+B;AAC7B,gBAAI4D,EAAE,GAAG1D,OAAO,CAAC7C,CAAD,CAAP,CAAW2C,CAAX,EAAcxC,CAAvB;AACA,gBAAIqG,EAAE,GAAG3D,OAAO,CAAC7C,CAAD,CAAP,CAAW2C,CAAX,EAActC,CAAvB;;AACA,gBACEtB,IAAI,CAACC,KAAL,CAAW,CAAC2B,KAAK,CAACR,CAAN,GAAUsG,UAAX,IAAyBrG,SAApC,KAAkDmG,EAAlD,IACAxH,IAAI,CAACC,KAAL,CAAW,CAAC2B,KAAK,CAACN,CAAN,GAAUqG,SAAX,IAAwBtG,SAAnC,KAAiDoG,EAFnD,EAGE;AACA,mBAAK9H,QAAL,GAAgB,IAAhB;AACA4H,cAAAA,aAAa,GAAG,IAAhB;AACAN,cAAAA,OAAO,CAACW,SAAR;AACAX,cAAAA,OAAO,CAACY,IAAR,CACEL,EAAE,GAAGnG,SAAL,GAAiBqG,UADnB,EAEED,EAAE,GAAGpG,SAAL,GAAiBsG,SAFnB,EAGEtG,SAHF,EAIEA,SAJF;AAMA4F,cAAAA,OAAO,CAACa,MAAR;AACD;AACF;AACF;;AACD,YAAI,CAACP,aAAL,EAAoB;AAClB,eAAK5H,QAAL,GAAgB,KAAhB;AACD;AACF,OA1CM,CA4CP;;;AAEAsH,MAAAA,OAAO,CAACW,SAAR;AACAX,MAAAA,OAAO,CAACc,MAAR,CAAe,CAAf,EAAkB,GAAlB;AACAd,MAAAA,OAAO,CAACe,MAAR,CAAe1F,MAAM,CAAC6E,KAAtB,EAA6B,GAA7B;AACAF,MAAAA,OAAO,CAACa,MAAR;;AACA,UAAInJ,YAAJ,EAAkB;AAChBsJ,QAAAA,SAAS,CAAC,GAAD,CAAT;AACD;;AACD,WAAKC,WAAL;AACA,WAAKpJ,MAAL,CAAYqJ,OAAZ,CAAoB,UAACzD,KAAD,EAAW;AAC7BA,QAAAA,KAAK,CAACrF,MAAN;AACD,OAFD;AAGA,UAAIuG,YAAY,GAAG,KAAK7G,MAAL,CAAYiC,MAA/B;;AACA,WAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG2E,YAApB,EAAkC3E,GAAC,EAAnC,EAAuC;AACrC,YAAI4E,KAAK,GAAG,KAAK9G,MAAL,CAAYkC,GAAZ,CAAZ;AACA4E,QAAAA,KAAK,CAACxG,MAAN;AACD;;AACD,UAAIa,YAAJ,EAAkB;AAChBkI,QAAAA,aAAa,CAAC;AACZhH,UAAAA,CAAC,EAAElB,YAAY,CAACC,KAAb,CAAmBgB,MAAnB,CAA0BC,CAA1B,GAA8BC,SAAS,GAAG,CADjC;AAEZC,UAAAA,CAAC,EAAEpB,YAAY,CAACC,KAAb,CAAmBgB,MAAnB,CAA0BG,CAA1B,GAA8BD,SAAS,GAAG,CAFjC;AAGZ8F,UAAAA,KAAK,EAAE,EAHK;AAIZC,UAAAA,MAAM,EAAE,EAJI;AAKZiB,UAAAA,IAAI,EAAE,WALM;AAMZP,UAAAA,MAAM,EAAE;AANI,SAAD,CAAb;AAQD;;AAED,WAAK3D,gBAAL,CAAsB9E,MAAtB;AACA,UAAIoH,WAAW,GAAG,KAAKxH,YAAL,CAAkB+B,MAApC;;AACA,WAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGwF,WAApB,EAAiCxF,GAAC,EAAlC,EAAsC;AACpC,aAAKhC,YAAL,CAAkBgC,GAAlB,EAAqB5B,MAArB;AACD;AACF;;;0BAEK;AACJ,UAAIZ,IAAI,GAAG,IAAX;AACAoC,MAAAA,SAAS,GAAG,IAAIyH,KAAJ,EAAZ;AACAzH,MAAAA,SAAS,CAAC0H,SAAV,GAHI,CAIJ;;AACA,WAAKvJ,WAAL;AAEA,UAAIb,aAAa,GAAGqK,WAAW,CAACC,GAAZ,EAApB;AACAtG,MAAAA,SAAS,CAACqB,iBAAV,GAA8B,KAA9B;;AAEA,eAASkF,QAAT,CAAkBC,IAAlB,EAAwB;AACtBlK,QAAAA,IAAI,CAACmK,YAAL,CAAkBD,IAAI,GAAGxK,aAAzB;AACAM,QAAAA,IAAI,CAAC4F,MAAL,CAAYsE,IAAI,GAAGxK,aAAnB;AACAA,QAAAA,aAAa,GAAGwK,IAAhB;AACAlK,QAAAA,IAAI,CAACY,MAAL;;AACA,YAAI,CAAC8C,SAAS,CAACqB,iBAAf,EAAkC;AAChCqF,UAAAA,qBAAqB,CAACH,QAAD,CAArB;AACD;AACF;;AACDG,MAAAA,qBAAqB,CAACH,QAAD,CAArB;AACD","sourcesContent":["class GamePlay {\r\n  constructor(manager, input) {\r\n    this.myKeyboard = input;\r\n    this.myMouse = null;\r\n    this.lastTimeStamp;\r\n    this.manager = manager;\r\n    this.model = null;\r\n    this.initialize = this.initialize.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.playerModel = null;\r\n    self.wallModel = null;\r\n    this.renderCircle = false;\r\n    this.sound = null;\r\n    this.particlesSmoke = null;\r\n    this.creeps = [];\r\n    this.towers = [];\r\n    this.registerKey = this.registerKey.bind(this);\r\n    this.flyingScores = [];\r\n    this.tower1 = new Image();\r\n    this.tower1.src = \"assets/turret/turret-5-3.png\";\r\n    this.render = this.render.bind(this);\r\n    this.firstTime = true;\r\n    this.downHandler = this.downHandler.bind(this);\r\n    this.enemyCreator = new EnemyCreator(10, creepGoing, 3);\r\n    this.canPlace = false;\r\n    this.upgrade = this.upgrade.bind(this);\r\n    this.sell = this.sell.bind(this);\r\n  }\r\n\r\n  upgrade(elapsedTime) {\r\n    let moneyRequired = Math.floor(0.5 * towerClicked.specs.cost);\r\n    if (moneyRequired <= money) {\r\n      if (towerClicked) {\r\n        if (towerClicked.totalElapsedTime == undefined) {\r\n          towerClicked.totalElapsedTime = 0;\r\n        } else {\r\n          towerClicked.totalElapsedTime += elapsedTime;\r\n          if (towerClicked.totalElapsedTime >= 200) {\r\n            console.log(\"upgraded\");\r\n            towerClicked.totalElapsedTime -= 200;\r\n            if (!towerClicked.upgradeCount) {\r\n              towerClicked.upgradeCount = 1;\r\n            } else {\r\n              if (towerClicked.upgradeCount >= 3) {\r\n                return;\r\n              } else {\r\n                towerClicked.upgradeCount = towerClicked.upgradeCount + 1;\r\n                towerClicked.delay = Math.floor(towerClicked.delay * 0.7);\r\n                towerClicked.specs.power = towerClicked.specs.power + 1;\r\n                money -= moneyRequired;\r\n                gameSound.playSound(\"add\");\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  sell() {\r\n    if (towerClicked) {\r\n      let towerLength = this.towers.length;\r\n      for (let i = 0; i < towerLength; i++) {\r\n        if (\r\n          isColliding2(\r\n            this.towers[i].specs.center.x - cellWidth / 2,\r\n            this.towers[i].specs.center.y - cellWidth / 2,\r\n            cellWidth,\r\n            towerClicked.specs.center.x - cellWidth / 2,\r\n            towerClicked.specs.center.y - cellWidth / 2,\r\n            cellWidth\r\n          )\r\n        ) {\r\n          money += Math.floor(0.7 * towerClicked.specs.cost);\r\n          this.towers.splice(i, 1);\r\n          gameSound.playSound(\"die\");\r\n          towerClicked = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createElement() {\r\n    selectedTower = this.getAttribute(\"data-myName\");\r\n    moneyRequired = parseInt(this.getAttribute(\"data-cost\"));\r\n    towerTypeSelected = parseInt(this.getAttribute(\"data-type\"));\r\n    if (moneyRequired <= money) {\r\n      renderCircle = true;\r\n      mouse.isActive = true;\r\n    }\r\n  }\r\n\r\n  downHandler(e, elapsedTime) {\r\n    if (mouse.isActive) {\r\n      firstTime = true;\r\n      mouse.isActive = false;\r\n      renderCircle = false;\r\n      let decision = canCreated(this.towers) && this.canPlace;\r\n      if (decision) {\r\n        this.towers.push(\r\n          createTower(\r\n            GameState.assets[selectedTower],\r\n            Math.floor(mouse.x / cellWidth) * cellWidth,\r\n            Math.floor((mouse.y - 200) / cellWidth) * cellWidth + 200,\r\n            2500,\r\n            1,\r\n            moneyRequired,\r\n            towerTypeSelected\r\n          )\r\n        );\r\n        console.log(this.towers)\r\n        money = money - moneyRequired;\r\n        moneyRequired = 0;\r\n        towerTypeSelected = 0;\r\n        gameSound.playSound(\"add\");\r\n      }\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n    } else {\r\n      const canvasPosition = canvas.getBoundingClientRect();\r\n      mouse.x = e.clientX - canvasPosition.left;\r\n      mouse.y = e.clientY - canvasPosition.top;\r\n      findSelectedTower(this.towers);\r\n    }\r\n  }\r\n\r\n  muteVolume(e) {\r\n    var towerElements = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].style.display = \"block\";\r\n    }\r\n    let myId = this.getAttribute(\"data-myId\");\r\n    document.getElementById(myId).style.display = \"none\";\r\n    if(myId == \"muteButton\"){\r\n      gameSound.stopAllSound();\r\n    }\r\n    if(myId == \"unmuteButton\"){\r\n      gameSound.unMuteSound();\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    let self = this;\r\n    this.myMouse = new Mouse();\r\n    self.myKeyboard.register(\"Escape\", function () {\r\n      GameState.cancelNextRequest = true;\r\n      self.manager.showScreen(\"mainmenu\");\r\n    });\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < cols; j++) {\r\n        row.push({\r\n          x: i,\r\n          y: j,\r\n        });\r\n      }\r\n      cellSet.push(row);\r\n    }\r\n\r\n    var towerElements = document.getElementsByClassName(\"tower\");\r\n    for (var i = 0; i < towerElements.length; i++) {\r\n      towerElements[i].addEventListener(\"click\", this.createElement, false);\r\n    }\r\n\r\n    var towerElements2 = document.getElementsByClassName(\"volumeButton\");\r\n    for (var i = 0; i < towerElements2.length; i++) {\r\n      towerElements2[i].addEventListener(\"click\", this.muteVolume, false);\r\n    }\r\n\r\n    this.bulletController = new BulletController(this.creeps);\r\n\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-5-3.png\", 300, 500, 1000, 1)\r\n    // );\r\n    // this.towers.push(\r\n    //   createTower(\"assets/turret/turret-3-3.png\", 600, 500, 2000, 2)\r\n    // );\r\n\r\n    this.myMouse.register(\"mousedown\", this.downHandler);\r\n\r\n    // this.myMouse.register('mouseup', function(e, elapsedTime) {\r\n    //   mouse.isActive = false;\r\n    // });\r\n\r\n    this.myMouse.register(\"mousemove\", function (e, elapsedTime) {\r\n      if (mouse.isActive) {\r\n        const canvasPosition = canvas.getBoundingClientRect();\r\n        mouse.x = e.clientX - canvasPosition.left;\r\n        mouse.y = e.clientY - canvasPosition.top;\r\n        if (mouse.y < 200) {\r\n          mouse.y = 200;\r\n        }\r\n        this.renderCircle = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  processInput(elapsedTime) {\r\n    this.myKeyboard.update(elapsedTime);\r\n    this.myMouse.update(elapsedTime);\r\n  }\r\n\r\n  registerKey() {\r\n    let self = this;\r\n    let upgrade = localStorage[\"upgrade\"];\r\n    console.log(upgrade);\r\n    let sell = localStorage[\"sell\"];\r\n    let start = localStorage[\"start\"];\r\n\r\n    self.myKeyboard.register(upgrade, function (elapsedTime) {\r\n      self.upgrade(elapsedTime);\r\n    });\r\n\r\n    self.myKeyboard.register(sell, function (elapsedTime) {\r\n      self.sell(elapsedTime);\r\n    });\r\n\r\n    // self.myKeyboard.cleanAll();\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    if (GameState.life <= 0) {\r\n      GameState.cancelNextRequest = true;\r\n      // this.particlesSmoke.update(elapsedTime);\r\n      return;\r\n    }\r\n    let creepsLength = this.creeps.length;\r\n    for (let i = 0; i < creepsLength; i++) {\r\n      let creep = this.creeps[i];\r\n      if (creep) {\r\n        if (creep.player.reachRight() || creep.player.reachBottom()) {\r\n          this.creeps.splice(i, 1);\r\n          GameState.life--;\r\n          console.log(GameState.life);\r\n          continue;\r\n        }\r\n        if (creep.health == 0) {\r\n          let x = creep.player.specs.center.x;\r\n          let y = creep.player.specs.center.y;\r\n          score += creep.maxHealth;\r\n          this.creeps.splice(i, 1);\r\n          gameSound.playSound(\"die\");\r\n          let textEvent = new MovingEvents({\r\n            size: { x: 50, y: 50 }, // Size in pixels\r\n            center: { x: x, y: y },\r\n            rotation: 0,\r\n            moveRate: 125 / 1000, // Pixels per second\r\n            rotateRate: Math.PI / 1000, // Radians per second\r\n            continousSpeed: 50,\r\n            yDirection: -1,\r\n            xDirection: 0,\r\n          });\r\n          this.flyingScores.push(\r\n            new FlyingScore(creep.maxHealth, textEvent, true)\r\n          );\r\n          continue;\r\n        }\r\n        creep.update(elapsedTime);\r\n        let towersLength = this.towers.length;\r\n        for (let i = 0; i < towersLength; i++) {\r\n          let tower = this.towers[i];\r\n          if((typeof creep.flying ==  \"undefined\") && tower.specs.type == 3){\r\n            console.log(\"flying\" + \" \" + i);\r\n          }\r\n\r\n          else if((typeof creep.flying !=  \"undefined\") && tower.specs.type < 3){\r\n            console.log(\"flying\" + \" \" + i);\r\n          }\r\n\r\n          else{\r\n            if (isColliding(creep, tower, 100)) {\r\n              tower.setTarget(\r\n                creep.player.specs.center.x,\r\n                creep.player.specs.center.y\r\n              );\r\n              if (tower.canShoot) {\r\n                let direction = {\r\n                  x: tower.specs.target.x - tower.specs.center.x,\r\n                  y: tower.specs.target.y - tower.specs.center.y,\r\n                };\r\n                direction = normalize(direction);\r\n                let bulletStartX = tower.specs.center.x;\r\n                let bulletStartY = tower.specs.center.y;\r\n\r\n                this.bulletController.addBullet(\r\n                  bulletStartX,\r\n                  bulletStartY,\r\n                  creep,\r\n                  tower.specs.power,\r\n                  tower.specs.type\r\n                );\r\n                gameSound.playSound(\"shoot\");\r\n              }\r\n            }\r\n          }\r\n         \r\n\r\n          tower.update(elapsedTime);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.bulletController.update(elapsedTime);\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].update(elapsedTime);\r\n      if (!this.flyingScores[i].isVisible) {\r\n        this.flyingScores.splice(i, 1);\r\n        i--;\r\n        scorelength--;\r\n      }\r\n    }\r\n    let newEnemy = this.enemyCreator.createEnemy(elapsedTime);\r\n    if (newEnemy) {\r\n      this.creeps.push(newEnemy);\r\n    }\r\n  }\r\n\r\n  renderScore() {\r\n    document.getElementById(\"currentScore\").innerHTML = score;\r\n    document.getElementById(\"lives\").innerHTML = GameState.life;\r\n    document.getElementById(\"money\").innerHTML = money;\r\n    let wave = wavesDeno + \"/\" + wavesNeno;\r\n    document.getElementById(\"wave\").innerHTML = wave;\r\n    if (moneyRequired > 0) {\r\n      document.getElementById(\"selectedInfo\").style.display = \"block\";\r\n      document.getElementById(\"moneyRequired\").innerHTML = moneyRequired;\r\n      document.getElementById(\"power\").innerHTML = towerTypeSelected;\r\n    }\r\n    else{\r\n      document.getElementById(\"selectedInfo\").style.display = \"none\";\r\n      document.getElementById(\"money\").innerHTML = \"\";\r\n      document.getElementById(\"power\").innerHTML = \"\";   \r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.fillStyle = \"green\";\r\n    context.fillRect(0, 0 + 200, 600, 800);\r\n    context.clearRect(50, 250, 500, 500);\r\n\r\n    if (creepGoing == \"left\") {\r\n      context.clearRect(0, 400, 50, 200);\r\n      context.clearRect(550, 400, 50, 200);\r\n    }\r\n\r\n    if(creepGoing == \"top\"){\r\n      context.clearRect(175, 200, 225, 50);\r\n      context.clearRect(175, 750, 225, 50);\r\n    }\r\n\r\n    if (mouse.isActive) {\r\n      let placementFlag = false;\r\n      for (let i = 0; i < rows; i++) {\r\n        for (let j = 0; j < cols; j++) {\r\n          let x1 = cellSet[i][j].x;\r\n          let y1 = cellSet[i][j].y;\r\n          if (\r\n            Math.floor((mouse.x - leftOffset) / cellWidth) == x1 &&\r\n            Math.floor((mouse.y - topOffset) / cellWidth) == y1\r\n          ) {\r\n            this.canPlace = true;\r\n            placementFlag = true;\r\n            context.beginPath();\r\n            context.rect(\r\n              x1 * cellWidth + leftOffset,\r\n              y1 * cellWidth + topOffset,\r\n              cellWidth,\r\n              cellWidth\r\n            );\r\n            context.stroke();\r\n          }\r\n        }\r\n      }\r\n      if (!placementFlag) {\r\n        this.canPlace = false;\r\n      }\r\n    }\r\n\r\n    // ctx.strokeRect(50, 50, 50, 50);\r\n\r\n    context.beginPath();\r\n    context.moveTo(0, 200);\r\n    context.lineTo(canvas.width, 200);\r\n    context.stroke();\r\n    if (renderCircle) {\r\n      drawTower(100);\r\n    }\r\n    this.renderScore();\r\n    this.creeps.forEach((creep) => {\r\n      creep.render();\r\n    });\r\n    let towersLength = this.towers.length;\r\n    for (let i = 0; i < towersLength; i++) {\r\n      let tower = this.towers[i];\r\n      tower.render();\r\n    }\r\n    if (towerClicked) {\r\n      drawRectangle({\r\n        x: towerClicked.specs.center.x - cellWidth / 2,\r\n        y: towerClicked.specs.center.y - cellWidth / 2,\r\n        width: 50,\r\n        height: 50,\r\n        fill: \"#ffd63f9e\",\r\n        stroke: \"red\",\r\n      });\r\n    }\r\n\r\n    this.bulletController.render();\r\n    let scorelength = this.flyingScores.length;\r\n    for (let i = 0; i < scorelength; i++) {\r\n      this.flyingScores[i].render();\r\n    }\r\n  }\r\n\r\n  run() {\r\n    let self = this;\r\n    gameSound = new Sound();\r\n    gameSound.loadAudio();\r\n    // this.sound.playSound(\"end\");\r\n    this.registerKey();\r\n\r\n    let lastTimeStamp = performance.now();\r\n    GameState.cancelNextRequest = false;\r\n\r\n    function gameLoop(time) {\r\n      self.processInput(time - lastTimeStamp);\r\n      self.update(time - lastTimeStamp);\r\n      lastTimeStamp = time;\r\n      self.render();\r\n      if (!GameState.cancelNextRequest) {\r\n        requestAnimationFrame(gameLoop);\r\n      }\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n}\r\n"],"file":"game-play.dev.js"}