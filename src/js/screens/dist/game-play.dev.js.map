{"version":3,"sources":["game-play.js"],"names":["GamePlay","manager","input","myKeyboard","lastTimeStamp","model","initialize","bind","run","playerModel","sound","particlesSmoke","self","register","GameState","cancelNextRequest","showScreen","ParticleSystem","center","x","y","size","mean","stdev","speed","lifetime","left","right","top","bottom","image","assets","createEffect","playerEvent","MovingEvents","rotation","moveRate","rotateRate","Math","PI","continousSpeed","playerSpecs","spriteSheet","dir","spriteCount","spriteTime","gameModel","enemycontroller","EnemyController","moveForward","rotateLeft","rotateRight","runRight","runLeft","runTop","runDown","elapsedTime","update","life","document","getElementById","innerHTML","score","context","clearRect","canvas","width","height","renderScore","render","Sound","loadAudio","playSound","console","log","player","moveTop","moveDown","moveLeft","moveRight","performance","now","gameLoop","time","processInput","requestAnimationFrame"],"mappings":"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","sourcesContent":["class GamePlay {\r\n  constructor(manager, input) {\r\n    this.myKeyboard = input;\r\n    this.lastTimeStamp;\r\n    this.manager = manager;\r\n    this.model = null;\r\n    this.initialize = this.initialize.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.playerModel = null;\r\n    this.sound = null;\r\n    this.particlesSmoke = null;\r\n  }\r\n\r\n  initialize() {\r\n    let self = this;\r\n    self.myKeyboard.register(\"Escape\", function () {\r\n      GameState.cancelNextRequest = true;\r\n      self.manager.showScreen(\"mainmenu\");\r\n    });\r\n\r\n    this.particlesSmoke = new ParticleSystem({\r\n      center: { x: 300, y: 300 },\r\n      size: { mean: 10, stdev: 4 },\r\n      speed: { mean: 50, stdev: 25 },\r\n      lifetime: { mean: 4, stdev: 1 },\r\n      left: 100,\r\n      right: 100,\r\n      top: 100,\r\n      bottom: 100,\r\n      image: GameState.assets[\"fire\"],\r\n    });\r\n\r\n    this.particlesSmoke.createEffect();\r\n\r\n    //all the event to handle movement\r\n    let playerEvent = new MovingEvents({\r\n      size: { x: 50, y: 50 }, // Size in pixels\r\n      center: { x: 50, y: 150 },\r\n      rotation: 0,\r\n      moveRate: 125 / 1000, // Pixels per second\r\n      rotateRate: Math.PI / 1000, // Radians per second\r\n      continousSpeed: 100,\r\n    });\r\n\r\n    // all the specs of the player sprite\r\n    let playerSpecs = {\r\n      spriteSheet: dir + \"assets/spritesheet-bird.png\",\r\n      spriteCount: 14,\r\n      spriteTime: [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],\r\n    };\r\n\r\n    //make a playerModel\r\n    self.playerModel = new gameModel(playerSpecs, playerEvent, true);\r\n    //register that event to event handler\r\n    self.enemycontroller = new EnemyController();\r\n   \r\n    self.myKeyboard.register(\"w\", playerEvent.moveForward);\r\n    self.myKeyboard.register(\"a\", playerEvent.rotateLeft);\r\n    self.myKeyboard.register(\"d\", playerEvent.rotateRight);\r\n\r\n    self.myKeyboard.register(\"3\", playerEvent.runRight);\r\n    self.myKeyboard.register(\"1\", playerEvent.runLeft);\r\n    self.myKeyboard.register(\"5\", playerEvent.runTop);\r\n    self.myKeyboard.register(\"2\", playerEvent.runDown);\r\n  }\r\n\r\n  processInput(elapsedTime) {\r\n    this.myKeyboard.update(elapsedTime);\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    if (GameState.life <= 0) {\r\n      GameState.cancelNextRequest = true;\r\n      this.particlesSmoke.update(elapsedTime);\r\n      return;\r\n    }\r\n    this.playerModel.update(elapsedTime);\r\n    this.enemycontroller.update(elapsedTime);\r\n    // model.update(elapsedTime);\r\n  }\r\n\r\n  renderScore() {\r\n    document.getElementById(\"currentScore\").innerHTML = score;\r\n    document.getElementById(\"lives\").innerHTML = GameState.life;\r\n  }\r\n\r\n  render() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    this.renderScore();\r\n    if (GameState.life <= 0) {\r\n      this.particlesSmoke.render();\r\n      return;\r\n    }\r\n    this.playerModel.render();\r\n    //draw things\r\n\r\n    // renderGame(model, graphics); // draw background, obstacles, scene and player here\r\n  }\r\n\r\n  run() {\r\n    let self = this;\r\n    this.sound = new Sound();\r\n    this.sound.loadAudio();\r\n    this.sound.playSound(\"end\");\r\n    console.log(this.sound);\r\n\r\n    this.myKeyboard.register(\"ArrowUp\", self.playerModel.player.moveTop);\r\n    this.myKeyboard.register(\"ArrowDown\", self.playerModel.player.moveDown);\r\n    this.myKeyboard.register(\"ArrowLeft\", self.playerModel.player.moveLeft);\r\n    this.myKeyboard.register(\"ArrowRight\", self.playerModel.player.moveRight);\r\n    console.log(self.playerModel.moveRight);\r\n\r\n    let lastTimeStamp = performance.now();\r\n    GameState.cancelNextRequest = false;\r\n\r\n    function gameLoop(time) {\r\n      self.processInput(time - lastTimeStamp);\r\n      self.update(time - lastTimeStamp);\r\n      lastTimeStamp = time;\r\n      self.render();\r\n      // if (!GameState.cancelNextRequest) {\r\n      requestAnimationFrame(gameLoop);\r\n      // }\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n}\r\n"],"file":"game-play.dev.js"}