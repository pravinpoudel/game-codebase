{"version":3,"sources":["input.js"],"names":["Keyboard","_classCallCheck","this","keys","deletedKeys","handlers","releaser","keyPress","bind","keyRelease","register","window","addEventListener","e","key","handler","elapsedTime","hasOwnProperty","console","warn","concat"],"mappings":"uZAAMA,oBACJ,SAAAA,IAAcC,gBAAAC,KAAAF,GACZE,KAAKC,KAAO,GACZD,KAAKE,YAAc,GACnBF,KAAKG,SAAW,GAChBH,KAAKI,SAAW,GAChBJ,KAAKK,SAAWL,KAAKK,SAASC,KAAKN,MACnCA,KAAKO,WAAaP,KAAKO,WAAWD,KAAKN,MAEvCA,KAAKQ,SAAWR,KAAKQ,SAASF,KAAKN,MACnCS,OAAOC,iBAAiB,UAAWV,KAAKK,UAT1CI,OAAAC,iBAAc,QAAAV,KAAAO,kEACPN,GACLD,KAAKE,KAAAA,EAAAA,MAAc,qCAGdG,GACLL,KAAKO,YAALI,EAAkBC,MAAKL,SAElBC,KAAAA,KAAWG,EAAAC,wCAehBZ,KAAKC,KAAO,GACZD,KAAKG,SAAW,oCAVXF,EAAKU,EAASP,GACpBJ,KAAAG,SAAAS,GAAAC,EAcCb,KAAKI,SAASQ,GAAOR,iCAXrBU,GACA,IAAA,IAAOF,KAAKX,KAAOW,KACpBZ,KAAAC,KAAAc,eAAAH,KAeSZ,KAAKG,SAASS,GAChBZ,KAAKG,SAASS,GAAKE,GAbzBE,QAAYC,KAAZ,GAAAC,OAAAN,EAAA,8CAmBA,IAAK,IAAIA,KAAOZ,KAAKE,YACfF,KAAKE,YAAYa,eAAeH,KAfjCT,KAAAA,SAALS,IACAZ,KAAKI,SAALQ,GAAqBR,UACtBJ,KAAAE,YAAAU,IAkBOI,QAAQC,KAAR,GAAAC,OAAgBN,EAAhB","file":"input.min.js","sourcesContent":["class Keyboard {\r\n  constructor() {\r\n    this.keys = {};\r\n    this.deletedKeys = {};\r\n    this.handlers = {};\r\n    this.releaser = {};\r\n    this.keyPress = this.keyPress.bind(this);\r\n    this.keyRelease = this.keyRelease.bind(this);\r\n\r\n    this.register = this.register.bind(this);\r\n    window.addEventListener(\"keydown\", this.keyPress);\r\n    window.addEventListener(\"keyup\", this.keyRelease);\r\n  }\r\n\r\n  keyPress(e) {\r\n    this.keys[e.key] = true;\r\n  }\r\n\r\n  keyRelease(e) {\r\n    this.deletedKeys[e.key] = true;\r\n    delete this.keys[e.key];\r\n  }\r\n\r\n  cleanAll() {\r\n    this.keys = {};\r\n    this.handlers = {};\r\n  }\r\n\r\n  register(key, handler, releaser) {\r\n    this.handlers[key] = handler;\r\n    this.releaser[key] = releaser;\r\n  }\r\n\r\n  update(elapsedTime) {\r\n    for (let key in this.keys) {\r\n      if (this.keys.hasOwnProperty(key)) {\r\n        if (this.handlers[key]) {\r\n          this.handlers[key](elapsedTime);\r\n        } else {\r\n          console.warn(`${key} does not have handler registered for it`);\r\n        }\r\n      }\r\n    }\r\n    for (let key in this.deletedKeys) {\r\n      if (this.deletedKeys.hasOwnProperty(key)) {\r\n        if (this.releaser[key]) {\r\n          this.releaser[key](elapsedTime);\r\n          delete this.deletedKeys[key];\r\n        } else {\r\n          console.warn(`${key} does not have handler registered for it`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}