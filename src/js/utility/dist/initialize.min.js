"use strict";var context,canvas=document.getElementById("canvas-main"),manager=new Manager,activeButton=null,href=window.location.href,dir=href.substring(0,href.lastIndexOf("/"))+"/",mouse={x:void 0,y:void 0,width:.1,height:.1,isActive:!1},canvasPosition=canvas.getBoundingClientRect();function handleClick(e){mouse.x=e.offsetX,mouse.y=e.offsetY,console.log(mouse.x,mouse.y)}canvas.addEventListener("click",handleClick),canvas.addEventListener("mouseleave",function(){mouse.x=void 0,mouse.y=void 0}),localStorage.getItem("upgrade")||localStorage.setItem("upgrade","u"),localStorage.getItem("sell")||localStorage.setItem("sell","s"),localStorage.getItem("start")||localStorage.setItem("start","g"),console.log(localStorage.upgrade,localStorage.shell,localStorage.start),GameState.menu=manager;var screens={help:new Help(manager),highscores:new HighScoreMenu(manager),control:new Control(manager),mainmenu:new MainMenu(manager),about:new About(manager)};function isColliding2(e,t,a){var n=e.player.specs.center.x-Math.floor(e.player.specs.size.x/2),s=e.player.specs.center.y-Math.floor(e.player.specs.size.y/2),o=e.player.specs.size.x,r=t.baseSprite.image.width,c=t.specs.center.x-r,l=t.specs.center.y-r;return!(n+o<=c-a||c+r+a<=n||s+o<=l-a||r+l+a<=s)}function isColliding(e,t,a){var n=e.player.specs.center.x-Math.floor(e.player.specs.size.x/2),s=e.player.specs.center.y-Math.floor(e.player.specs.size.y/2),o=e.player.specs.size.x,r=t.baseSprite.image.width,c=t.specs.center.x-r,l=t.specs.center.y-r;return!(n+o<=c-a||c+r+a<=n||s+o<=l-a||r+l+a<=s)}function drawRectangle(e){context.fillStyle=e.fill,context.fillRect(e.x,e.y,e.width,e.height),context.strokeStyle=e.stroke,context.strokeRect(e.x,e.y,e.width,e.height)}function crossProduct2d(e,t){return e.x*t.y-e.y*t.x}function testTolerance(e,t,a){return Math.abs(e-t)<a}function computeAngle(e,t,a){var n={x:Math.cos(e),y:Math.sin(e)},s={x:a.x-t.x,y:a.y-t.y};s.len=Math.sqrt(s.x*s.x+s.y*s.y),s.x/=s.len,s.y/=s.len;var o=n.x*s.x+n.y*s.y;return{angle:Math.acos(o),crossProduct:crossProduct2d(n,s)}}GameState.input=new Keyboard,console.log(GameState.input),screens.gameplay=new GamePlay(manager,GameState.input),GameState.screens=screens;
//# sourceMappingURL=initialize.min.js.map
